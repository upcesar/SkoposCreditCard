{
    "project": {
        "name": "Ink.js",
        "description": "JavaScript Framework by SAPO",
        "version": "latest",
        "url": "http://ink.sapo.pt/",
        "logo": "yuidoclogo.png",
        "paths": [
            "./Ink"
        ]
    },
    "files": {
        "Ink/1/lib.js": {
            "name": "Ink/1/lib.js",
            "modules": {
                "Ink_1": 1
            },
            "classes": {
                "Ink": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Dom/Browser/1/lib.js": {
            "name": "Ink/Dom/Browser/1/lib.js",
            "modules": {
                "Ink.Dom.Browser_1": 1
            },
            "classes": {
                "Ink.Dom.Browser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Dom/Css/1/lib.js": {
            "name": "Ink/Dom/Css/1/lib.js",
            "modules": {
                "Ink.Dom.Css_1": 1
            },
            "classes": {
                "Ink.Dom.Css": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Dom/Element/1/lib.js": {
            "name": "Ink/Dom/Element/1/lib.js",
            "modules": {
                "Ink.Dom.Element_1": 1
            },
            "classes": {
                "Ink.Dom.Element": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Dom/Event/1/lib.js": {
            "name": "Ink/Dom/Event/1/lib.js",
            "modules": {
                "Ink.Dom.Event_1": 1
            },
            "classes": {
                "Ink.Dom.Event": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Dom/FormSerialize/1/lib.js": {
            "name": "Ink/Dom/FormSerialize/1/lib.js",
            "modules": {
                "Ink.Dom.FormSerialize": 1
            },
            "classes": {
                "Ink.Dom.FormSerialize": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Dom/Loaded/1/lib.js": {
            "name": "Ink/Dom/Loaded/1/lib.js",
            "modules": {
                "Ink.Dom.Loaded_1": 1
            },
            "classes": {
                "Ink.Dom.Loaded": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Dom/Selector/1/lib.js": {
            "name": "Ink/Dom/Selector/1/lib.js",
            "modules": {
                "Ink.Dom.Selector_1": 1
            },
            "classes": {
                "Ink.Dom.Selector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Namespace/ClassModule/1/lib.js": {
            "name": "Ink/Namespace/ClassModule/1/lib.js",
            "modules": {
                "Ink.Namespace.ClassModule_1": 1
            },
            "classes": {
                "Ink.Namespace.ClassModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Namespace/StaticModule/1/lib.js": {
            "name": "Ink/Namespace/StaticModule/1/lib.js",
            "modules": {
                "Ink.Namespace.StaticModule_1": 1
            },
            "classes": {
                "Ink.Namespace.StaticModule": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Net/Ajax/1/lib.js": {
            "name": "Ink/Net/Ajax/1/lib.js",
            "modules": {
                "Ink.Net.Ajax_1": 1
            },
            "classes": {
                "Ink.Net.Ajax": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Net/JsonP/1/lib.js": {
            "name": "Ink/Net/JsonP/1/lib.js",
            "modules": {
                "Ink.Net.JsonP_1": 1
            },
            "classes": {
                "Ink.Net.JsonP": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Animate/1/lib.js": {
            "name": "Ink/UI/Animate/1/lib.js",
            "modules": {
                "Ink.UI.Animate_1": 1
            },
            "classes": {
                "Ink.UI.Animate_1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Carousel/1/lib.js": {
            "name": "Ink/UI/Carousel/1/lib.js",
            "modules": {
                "Ink.UI.Carousel_1": 1
            },
            "classes": {
                "Ink.UI.Carousel_1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Close/1/lib.js": {
            "name": "Ink/UI/Close/1/lib.js",
            "modules": {
                "Ink.UI.Close_1": 1
            },
            "classes": {
                "Ink.UI.Close": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Common/1/lib.js": {
            "name": "Ink/UI/Common/1/lib.js",
            "modules": {
                "Ink.UI.Common_1": 1
            },
            "classes": {
                "Ink.UI.Common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/DatePicker/1/lib.js": {
            "name": "Ink/UI/DatePicker/1/lib.js",
            "modules": {
                "Ink.UI.DatePicker_1": 1
            },
            "classes": {
                "Ink.UI.DatePicker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Draggable/1/lib.js": {
            "name": "Ink/UI/Draggable/1/lib.js",
            "modules": {},
            "classes": {
                "Ink.UI.Draggable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Dropdown/1/lib.js": {
            "name": "Ink/UI/Dropdown/1/lib.js",
            "modules": {
                "Ink.UI.Dropdown_1": 1
            },
            "classes": {
                "Ink.UI.Dropdown": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Droppable/1/lib.js": {
            "name": "Ink/UI/Droppable/1/lib.js",
            "modules": {
                "Ink.UI.Droppable_1": 1
            },
            "classes": {
                "Ink.UI.Droppable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/FormValidator/1/lib.js": {
            "name": "Ink/UI/FormValidator/1/lib.js",
            "modules": {
                "Ink.UI.FormValidator_1": 1
            },
            "classes": {
                "Ink.UI.FormValidator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/FormValidator/2/lib.js": {
            "name": "Ink/UI/FormValidator/2/lib.js",
            "modules": {
                "Ink.UI.FormValidator_2": 1
            },
            "classes": {
                "Ink.UI.FormValidator_2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/ImageQuery/1/lib.js": {
            "name": "Ink/UI/ImageQuery/1/lib.js",
            "modules": {
                "Ink.UI.ImageQuery_1": 1
            },
            "classes": {
                "Ink.UI.ImageQuery": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Modal/1/lib.js": {
            "name": "Ink/UI/Modal/1/lib.js",
            "modules": {
                "Ink.UI.Modal_1": 1
            },
            "classes": {
                "Ink.UI.Modal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Pagination/1/lib.js": {
            "name": "Ink/UI/Pagination/1/lib.js",
            "modules": {
                "Ink.UI.Pagination_1": 1
            },
            "classes": {
                "Ink.UI.Pagination": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/ProgressBar/1/lib.js": {
            "name": "Ink/UI/ProgressBar/1/lib.js",
            "modules": {
                "Ink.UI.ProgressBar_1": 1
            },
            "classes": {
                "Ink.UI.ProgressBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/SmoothScroller/1/lib.js": {
            "name": "Ink/UI/SmoothScroller/1/lib.js",
            "modules": {
                "Ink.UI.SmoothScroller_1": 1
            },
            "classes": {
                "Ink.UI.SmoothScroller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/SortableList/1/lib.js": {
            "name": "Ink/UI/SortableList/1/lib.js",
            "modules": {
                "Ink.UI.SortableList_1": 1
            },
            "classes": {
                "Ink.UI.SortableList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Spy/1/lib.js": {
            "name": "Ink/UI/Spy/1/lib.js",
            "modules": {
                "Ink.UI.Spy_1": 1
            },
            "classes": {
                "Ink.UI.Spy": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Stacker/1/lib.js": {
            "name": "Ink/UI/Stacker/1/lib.js",
            "modules": {
                "Ink.UI.Stacker_1": 1
            },
            "classes": {
                "Ink.UI.Stacker_1": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Sticky/1/lib.js": {
            "name": "Ink/UI/Sticky/1/lib.js",
            "modules": {
                "Ink.UI.Sticky_1": 1
            },
            "classes": {
                "Ink.UI.Sticky": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Swipe/1/lib.js": {
            "name": "Ink/UI/Swipe/1/lib.js",
            "modules": {
                "Ink.UI.Swipe": 1
            },
            "classes": {
                "Ink.UI.Swipe": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Table/1/lib.js": {
            "name": "Ink/UI/Table/1/lib.js",
            "modules": {
                "Ink.UI.Table_1": 1
            },
            "classes": {
                "Ink.UI.Table": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Tabs/1/lib.js": {
            "name": "Ink/UI/Tabs/1/lib.js",
            "modules": {
                "Ink.UI.Tabs_1": 1
            },
            "classes": {
                "Ink.UI.Tabs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/TagField/1/lib.js": {
            "name": "Ink/UI/TagField/1/lib.js",
            "modules": {},
            "classes": {
                "Ink.UI.TagField": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Toggle/1/lib.js": {
            "name": "Ink/UI/Toggle/1/lib.js",
            "modules": {
                "Ink.UI.Toggle_1": 1
            },
            "classes": {
                "Ink.UI.Toggle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Tooltip/1/lib.js": {
            "name": "Ink/UI/Tooltip/1/lib.js",
            "modules": {
                "Ink.UI.Tooltip_1": 1
            },
            "classes": {
                "Ink.UI.Tooltip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/TreeView/1/lib.js": {
            "name": "Ink/UI/TreeView/1/lib.js",
            "modules": {
                "Ink.UI.TreeView_1": 1
            },
            "classes": {
                "Ink.UI.TreeView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/UI/Upload/1/lib.js": {
            "name": "Ink/UI/Upload/1/lib.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/Array/1/lib.js": {
            "name": "Ink/Util/Array/1/lib.js",
            "modules": {
                "Ink.Util.Array_1": 1
            },
            "classes": {
                "Ink.Util.Array": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/BinPack/1/lib.js": {
            "name": "Ink/Util/BinPack/1/lib.js",
            "modules": {
                "Ink.Util.BinPack_1": 1
            },
            "classes": {
                "Ink.Util.BinPack": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/Cookie/1/lib.js": {
            "name": "Ink/Util/Cookie/1/lib.js",
            "modules": {
                "Ink.Util.Cookie_1": 1
            },
            "classes": {
                "Ink.Util.Cookie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/Date/1/lib.js": {
            "name": "Ink/Util/Date/1/lib.js",
            "modules": {
                "Ink.Util.Date_1": 1
            },
            "classes": {
                "Ink.Util.Date": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/Dumper/1/lib.js": {
            "name": "Ink/Util/Dumper/1/lib.js",
            "modules": {
                "Ink.Util.Dumper_1": 1
            },
            "classes": {
                "Ink.Util.Dumper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/I18n/1/lib.js": {
            "name": "Ink/Util/I18n/1/lib.js",
            "modules": {
                "Ink.Util.I18n_1": 1
            },
            "classes": {
                "Ink.Util.I18n": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/Json/1/lib.js": {
            "name": "Ink/Util/Json/1/lib.js",
            "modules": {
                "Ink.Util.Json_1": 1
            },
            "classes": {
                "Ink.Util.Json": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/String/1/lib.js": {
            "name": "Ink/Util/String/1/lib.js",
            "modules": {
                "Ink.Util.String_1": 1
            },
            "classes": {
                "Ink.Util.String": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/Url/1/lib.js": {
            "name": "Ink/Util/Url/1/lib.js",
            "modules": {
                "Ink.Util.Url_1": 1
            },
            "classes": {
                "Ink.Util.Url": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Ink/Util/Validator/1/lib.js": {
            "name": "Ink/Util/Validator/1/lib.js",
            "modules": {
                "Ink.Util.Validator_1": 1
            },
            "classes": {
                "Ink.Util.Validator": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Ink_1": {
            "name": "Ink_1",
            "submodules": {},
            "classes": {
                "Ink": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/1/lib.js",
            "line": 9
        },
        "Ink.Dom.Browser_1": {
            "name": "Ink.Dom.Browser_1",
            "submodules": {},
            "classes": {
                "Ink.Dom.Browser": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 9,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Dom.Css_1": {
            "name": "Ink.Dom.Css_1",
            "submodules": {},
            "classes": {
                "Ink.Dom.Css": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 16
        },
        "Ink.Dom.Element_1": {
            "name": "Ink.Dom.Element_1",
            "submodules": {},
            "classes": {
                "Ink.Dom.Element": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 34
        },
        "Ink.Dom.Event_1": {
            "name": "Ink.Dom.Event_1",
            "submodules": {},
            "classes": {
                "Ink.Dom.Event": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 771
        },
        "Ink.Dom.FormSerialize": {
            "name": "Ink.Dom.FormSerialize",
            "submodules": {},
            "classes": {
                "Ink.Dom.FormSerialize": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Dom/FormSerialize/1/lib.js",
            "line": 8,
            "author": "inkdev AT sapo.pt"
        },
        "Ink.Dom.Loaded_1": {
            "name": "Ink.Dom.Loaded_1",
            "submodules": {},
            "classes": {
                "Ink.Dom.Loaded": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Dom/Loaded/1/lib.js",
            "line": 10,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Dom.Selector_1": {
            "name": "Ink.Dom.Selector_1",
            "submodules": {},
            "classes": {
                "Ink.Dom.Selector": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Dom/Selector/1/lib.js",
            "line": 10,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Namespace.ClassModule_1": {
            "name": "Ink.Namespace.ClassModule_1",
            "submodules": {},
            "classes": {
                "Ink.Namespace.ClassModule": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Namespace/ClassModule/1/lib.js",
            "line": 25,
            "author": "inkdev AT sapo.pt",
            "since": "April 2013",
            "version": "1"
        },
        "Ink.Namespace.StaticModule_1": {
            "name": "Ink.Namespace.StaticModule_1",
            "submodules": {},
            "classes": {
                "Ink.Namespace.StaticModule": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Namespace/StaticModule/1/lib.js",
            "line": 27,
            "author": "inkdev AT sapo.pt",
            "since": "April 2013",
            "version": "1"
        },
        "Ink.Net.Ajax_1": {
            "name": "Ink.Net.Ajax_1",
            "submodules": {},
            "classes": {
                "Ink.Net.Ajax": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 13
        },
        "Ink.Net.JsonP_1": {
            "name": "Ink.Net.JsonP_1",
            "submodules": {},
            "classes": {
                "Ink.Net.JsonP": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Net/JsonP/1/lib.js",
            "line": 13
        },
        "Ink.UI.Animate_1": {
            "name": "Ink.UI.Animate_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Animate_1": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Animate/1/lib.js",
            "line": 24,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Carousel_1": {
            "name": "Ink.UI.Carousel_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Carousel_1": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Carousel/1/lib.js",
            "line": 25,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Close_1": {
            "name": "Ink.UI.Close_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Close": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Close/1/lib.js",
            "line": 8,
            "author": "inkdev AT sapo.pt"
        },
        "Ink.UI.Common_1": {
            "name": "Ink.UI.Common_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Common": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Common/1/lib.js",
            "line": 22,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.DatePicker_1": {
            "name": "Ink.UI.DatePicker_1",
            "submodules": {},
            "classes": {
                "Ink.UI.DatePicker": 1,
                "Ink.UI.Draggable": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 19,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Dropdown_1": {
            "name": "Ink.UI.Dropdown_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Dropdown": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 15,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Droppable_1": {
            "name": "Ink.UI.Droppable_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Droppable": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 17,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.FormValidator_1": {
            "name": "Ink.UI.FormValidator_1",
            "submodules": {},
            "classes": {
                "Ink.UI.FormValidator": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 20,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.FormValidator_2": {
            "name": "Ink.UI.FormValidator_2",
            "submodules": {},
            "classes": {
                "Ink.UI.FormValidator_2": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 623,
            "author": "inkdev AT sapo.pt",
            "version": "2"
        },
        "Ink.UI.ImageQuery_1": {
            "name": "Ink.UI.ImageQuery_1",
            "submodules": {},
            "classes": {
                "Ink.UI.ImageQuery": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 9,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Modal_1": {
            "name": "Ink.UI.Modal_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Modal": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 14,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Pagination_1": {
            "name": "Ink.UI.Pagination_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Pagination": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 28,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.ProgressBar_1": {
            "name": "Ink.UI.ProgressBar_1",
            "submodules": {},
            "classes": {
                "Ink.UI.ProgressBar": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/ProgressBar/1/lib.js",
            "line": 9,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.SmoothScroller_1": {
            "name": "Ink.UI.SmoothScroller_1",
            "submodules": {},
            "classes": {
                "Ink.UI.SmoothScroller": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 17,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.SortableList_1": {
            "name": "Ink.UI.SortableList_1",
            "submodules": {},
            "classes": {
                "Ink.UI.SortableList": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 12,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Spy_1": {
            "name": "Ink.UI.Spy_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Spy": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Spy/1/lib.js",
            "line": 105,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Stacker_1": {
            "name": "Ink.UI.Stacker_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Stacker_1": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Stacker/1/lib.js",
            "line": 12
        },
        "Ink.UI.Sticky_1": {
            "name": "Ink.UI.Sticky_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Sticky": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 9,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Swipe": {
            "name": "Ink.UI.Swipe",
            "submodules": {},
            "classes": {
                "Ink.UI.Swipe": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Swipe/1/lib.js",
            "line": 9,
            "author": "ink AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Table_1": {
            "name": "Ink.UI.Table_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Table": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Table/1/lib.js",
            "line": 46,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Tabs_1": {
            "name": "Ink.UI.Tabs_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Tabs": 1,
                "Ink.UI.TagField": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/TagField/1/lib.js",
            "line": 13,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Toggle_1": {
            "name": "Ink.UI.Toggle_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Toggle": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 9,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.UI.Tooltip_1": {
            "name": "Ink.UI.Tooltip_1",
            "submodules": {},
            "classes": {
                "Ink.UI.Tooltip": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/Tooltip/1/lib.js",
            "line": 8,
            "author": "inkdev AT sapo.pt"
        },
        "Ink.UI.TreeView_1": {
            "name": "Ink.UI.TreeView_1",
            "submodules": {},
            "classes": {
                "Ink.UI.TreeView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/UI/TreeView/1/lib.js",
            "line": 9,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Util.Array_1": {
            "name": "Ink.Util.Array_1",
            "submodules": {},
            "classes": {
                "Ink.Util.Array": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/Array/1/lib.js",
            "line": 12,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Util.BinPack_1": {
            "name": "Ink.Util.BinPack_1",
            "submodules": {},
            "classes": {
                "Ink.Util.BinPack": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/BinPack/1/lib.js",
            "line": 222,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Util.Cookie_1": {
            "name": "Ink.Util.Cookie_1",
            "submodules": {},
            "classes": {
                "Ink.Util.Cookie": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/Cookie/1/lib.js",
            "line": 10,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Util.Date_1": {
            "name": "Ink.Util.Date_1",
            "submodules": {},
            "classes": {
                "Ink.Util.Date": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/Date/1/lib.js",
            "line": 10,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Util.Dumper_1": {
            "name": "Ink.Util.Dumper_1",
            "submodules": {},
            "classes": {
                "Ink.Util.Dumper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 10,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Util.I18n_1": {
            "name": "Ink.Util.I18n_1",
            "submodules": {},
            "classes": {
                "Ink.Util.I18n": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 21,
            "author": "inkdev AT sapo.pt"
        },
        "Ink.Util.Json_1": {
            "name": "Ink.Util.Json_1",
            "submodules": {},
            "classes": {
                "Ink.Util.Json": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/Json/1/lib.js",
            "line": 36,
            "author": "inkdev AT sapo.pt"
        },
        "Ink.Util.String_1": {
            "name": "Ink.Util.String_1",
            "submodules": {},
            "classes": {
                "Ink.Util.String": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/String/1/lib.js",
            "line": 10,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Util.Url_1": {
            "name": "Ink.Util.Url_1",
            "submodules": {},
            "classes": {
                "Ink.Util.Url": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/Url/1/lib.js",
            "line": 10,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        },
        "Ink.Util.Validator_1": {
            "name": "Ink.Util.Validator_1",
            "submodules": {},
            "classes": {
                "Ink.Util.Validator": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 10,
            "author": "inkdev AT sapo.pt",
            "version": "1"
        }
    },
    "classes": {
        "Ink": {
            "name": "Ink",
            "shortname": "Ink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink_1",
            "namespace": "",
            "file": "Ink/1/lib.js",
            "line": 9,
            "description": "global object"
        },
        "Ink.Dom.Browser": {
            "name": "Ink.Dom.Browser",
            "shortname": "Ink.Dom.Browser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Dom.Browser_1",
            "namespace": "",
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 9,
            "version": "1",
            "static": 1,
            "example": [
                "\n    <input type=\"text\" id=\"dPicker\" />\n    <script>\n        Ink.requireModules(['Ink.Dom.Browser_1'],function( InkBrowser ){\n            if( InkBrowser.CHROME ){\n                console.log( 'This is a CHROME browser.' );\n            }\n        });\n    </script>"
            ]
        },
        "Ink.Dom.Css": {
            "name": "Ink.Dom.Css",
            "shortname": "Ink.Dom.Css",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Dom.Css_1",
            "namespace": "",
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 16,
            "static": 1
        },
        "Ink.Dom.Element": {
            "name": "Ink.Dom.Element",
            "shortname": "Ink.Dom.Element",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Dom.Element_1",
            "namespace": "",
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 34
        },
        "Ink.Dom.Event": {
            "name": "Ink.Dom.Event",
            "shortname": "Ink.Dom.Event",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Dom.Event_1",
            "namespace": "",
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 771
        },
        "Ink.Dom.FormSerialize": {
            "name": "Ink.Dom.FormSerialize",
            "shortname": "Ink.Dom.FormSerialize",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Dom.FormSerialize",
            "namespace": "",
            "file": "Ink/Dom/FormSerialize/1/lib.js",
            "line": 8,
            "description": "Supports serialization of form data to/from javascript Objects.\n\nValid applications are ad hoc AJAX/syndicated submission of forms, restoring form values from server side state, etc."
        },
        "Ink.Dom.Loaded": {
            "name": "Ink.Dom.Loaded",
            "shortname": "Ink.Dom.Loaded",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Dom.Loaded_1",
            "namespace": "",
            "file": "Ink/Dom/Loaded/1/lib.js",
            "line": 10,
            "description": "The Loaded class provides a method that allows developers to queue functions to run when\nthe page is loaded (document is ready).",
            "version": "1",
            "static": 1
        },
        "Ink.Dom.Selector": {
            "name": "Ink.Dom.Selector",
            "shortname": "Ink.Dom.Selector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Dom.Selector_1",
            "namespace": "",
            "file": "Ink/Dom/Selector/1/lib.js",
            "line": 10,
            "static": 1,
            "version": "1"
        },
        "Ink.Namespace.ClassModule": {
            "name": "Ink.Namespace.ClassModule",
            "shortname": "Ink.Namespace.ClassModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Namespace.ClassModule_1",
            "namespace": "",
            "file": "Ink/Namespace/ClassModule/1/lib.js",
            "line": 25,
            "description": "Use this to bake cakes.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "opt1",
                            "description": "asda sdas d",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "opt2",
                            "description": "asda sdas d",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Ink.Namespace.StaticModule": {
            "name": "Ink.Namespace.StaticModule",
            "shortname": "Ink.Namespace.StaticModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Namespace.StaticModule_1",
            "namespace": "",
            "file": "Ink/Namespace/StaticModule/1/lib.js",
            "line": 27,
            "description": "This is a awesome set of methods to paint the sky.",
            "static": 1
        },
        "Ink.Net.Ajax": {
            "name": "Ink.Net.Ajax",
            "shortname": "Ink.Net.Ajax",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Net.Ajax_1",
            "namespace": "",
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 13,
            "description": "Creates a new cross browser XMLHttpRequest object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "url",
                    "description": "request url",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "request options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "asynchronous",
                            "description": "if the request should be asynchronous. true by default.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "cors",
                            "description": "set this to true if you're doing a cross-origin request",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "method",
                            "description": "HTTP request method. POST by default.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "parameters",
                            "description": "Request parameters which should be sent with the request",
                            "type": "Object|String",
                            "optional": true
                        },
                        {
                            "name": "timeout",
                            "description": "Request timeout",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "delay",
                            "description": "Artificial delay. If request is completed in time lower than this, then wait a bit before calling the callbacks",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "postBody",
                            "description": "POST request body. If not specified, it's filled with the contents from parameters",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "contentType",
                            "description": "Content-type header to be sent. Defaults to 'application/x-www-form-urlencoded'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "requestHeaders",
                            "description": "key-value pairs for additional request headers",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "onComplete",
                            "description": "Callback executed after the request is completed, no matter what happens during the request.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onSuccess",
                            "description": "Callback executed if the request is successful (requests with 2xx status codes)",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFailure",
                            "description": "Callback executed if the request fails (requests with status codes different from 2xx)",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onException",
                            "description": "Callback executed if an exception  occurs. Receives the exception as a parameter.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onCreate",
                            "description": "Callback executed after object initialization but before the request is made",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onInit",
                            "description": "Callback executed before any initialization",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onTimeout",
                            "description": "Callback executed if the request times out",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "evalJS",
                            "description": "If the request Content-type header is application/json, evaluates the response and populates responseJSON. Use 'force' if you want to force the response evaluation, no matter what Content-type it's using. Defaults to true.",
                            "type": "Boolean|String",
                            "optional": true
                        },
                        {
                            "name": "sanitizeJSON",
                            "description": "Sanitize the content of responseText before evaluation",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "xhrProxy",
                            "description": "URI for proxy service hosted on the same server as the web app, that can fetch documents from other domains.\n                                            The service must pipe all input and output untouched (some input sanitization is allowed, like clearing cookies).\n                                            e.g., requesting http://example.org/doc can become /proxy/http%3A%2F%2Fexample.org%2Fdoc The proxy service will\n                                            be used for cross-domain requests, if set, else a network error is returned as exception.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n    new Ajax('test.json', {\n        method: 'get',\n        onSuccess: function (ajx, responseJSON) {\n            // Do stuff with responseJSON or ajx.responseText\n            console.log(responseJSON.something.length);\n        },\n        onFailure: function (ajx, errorResponse) {\n            // Deal with it\n            alert(ajx.status);  // The HTTP response code\n        }\n    });"
            ]
        },
        "Ink.Net.JsonP": {
            "name": "Ink.Net.JsonP",
            "shortname": "Ink.Net.JsonP",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Net.JsonP_1",
            "namespace": "",
            "file": "Ink/Net/JsonP/1/lib.js",
            "line": 13,
            "description": "This class takes care of the nitty-gritty details of doing jsonp requests: Storing\na callback in a globally accessible manner, waiting for the timeout or completion\nof the request, and passing extra GET parameters to the server, is not so complicated\nbut it's boring and repetitive to code and tricky to get right.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "onSuccess",
                            "description": "success callback",
                            "type": "Function"
                        },
                        {
                            "name": "onFailure",
                            "description": "failure callback",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "failureObj",
                            "description": "object to be passed as argument to failure callback",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "timeout",
                            "description": "timeout for request fail, in seconds. defaults to 10",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "params",
                            "description": "object with the parameters and respective values to unfold",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "callbackParam",
                            "description": "parameter to use as callback. defaults to 'jsoncallback'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "internalCallback",
                            "description": "*Advanced*: name of the callback function stored in the Ink.Net.JsonP object.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     Ink.requireModules(['Ink.Net.JsonP_1'], function (JsonP) {\n         var jsonp = new JsonP('http://path.to.jsonp/endpoint', {\n             // When the JSONP response arrives, this callback is called:\n             onSuccess: function (gameData) {\n                 game.startGame(gameData);\n             },\n             // after options.timeout seconds, this callback gets called:\n             onFailure: function () {\n                 game.error('Could not load game data!');\n             },\n             timeout: 5\n         });\n     });"
            ]
        },
        "Ink.UI.Animate_1": {
            "name": "Ink.UI.Animate_1",
            "shortname": "Ink.UI.Animate_1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Animate_1",
            "namespace": "",
            "file": "Ink/UI/Animate/1/lib.js",
            "line": 24,
            "is_constructor": 1,
            "params": [
                {
                    "name": "element",
                    "description": "animated element",
                    "type": "DOMElement"
                },
                {
                    "name": "options",
                    "description": "options object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "animation",
                            "description": "animation name",
                            "type": "String"
                        },
                        {
                            "name": "duration",
                            "description": "duration name (fast|medium|slow) or duration in ms",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "medium"
                        },
                        {
                            "name": "removeClass",
                            "description": "Whether to remove the `animation` class when finished animating",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "onEnd",
                            "description": "callback for animation end",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ],
            "example": [
                "\n\n    <button id=\"animate-me\" class=\"ink-button\">Animate me!</button>\n    <span class=\"ink-label info ink-animate\"\n        id=\"animated\"\n        data-trigger=\"#animate-me\"\n        data-animation=\"fadeOut\"\n        data-removeClass=\"false\">Hi!</span>    \n\n    <script type=\"text/javascript\">\n        // Note: this step is not necessary if you are using autoload.js\n        Ink.requireModules(['Ink.UI.Animate_1'], function (Animate) {\n            new Animate('#animated');\n        });\n    </script>\n"
            ]
        },
        "Ink.UI.Carousel_1": {
            "name": "Ink.UI.Carousel_1",
            "shortname": "Ink.UI.Carousel_1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Carousel_1",
            "namespace": "",
            "file": "Ink/UI/Carousel/1/lib.js",
            "line": 25,
            "is_constructor": 1,
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "axis",
                            "description": "Can be `'x'` or `'y'`, for a horizontal or vertical carousel",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'x'"
                        },
                        {
                            "name": "center",
                            "description": "Center the carousel.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "initialPage",
                            "description": "When initialized, set the page to this.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "swipe",
                            "description": "Enable swipe support where available",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "pagination",
                            "description": "Either an `<ul>` element to add pagination markup to, or an `Ink.UI.Pagination` instance to use.",
                            "type": "String|DOMElement|Ink.UI.Pagination_1",
                            "optional": true
                        },
                        {
                            "name": "onChange",
                            "description": "Callback for when the page is changed.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "autoAdvance",
                    "description": "The number of milliseconds to wait between auto-advancing pages. Set to 0 to disable auto-advance.",
                    "type": "Integer",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "todo": [
                "@param {Boolean} [options.keyboardSupport=false] Enable keyboard support"
            ]
        },
        "Ink.UI.Close": {
            "name": "Ink.UI.Close",
            "shortname": "Ink.UI.Close",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Close_1",
            "namespace": "",
            "file": "Ink/UI/Close/1/lib.js",
            "line": 8,
            "description": "Subscribes clicks on the document.body. If and only if you clicked on an element\nhaving class \"ink-close\" or \"ink-dismiss\", will go up the DOM hierarchy looking for an element with any\nof the following classes: \"ink-alert\", \"ink-alert-block\".\nIf it is found, it is removed from the DOM.\n\nOne should call close once per page (full page refresh).",
            "is_constructor": 1,
            "example": [
                "\n    <script>\n        Ink.requireModules(['Ink.UI.Close_1'],function( Close ){\n            new Close();\n        });\n    </script>"
            ]
        },
        "Ink.UI.Common": {
            "name": "Ink.UI.Common",
            "shortname": "Ink.UI.Common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Common_1",
            "namespace": "",
            "file": "Ink/UI/Common/1/lib.js",
            "line": 22,
            "description": "The Common class provides auxiliar methods to ease some of the most common/repetitive UI tasks.",
            "version": "1",
            "static": 1
        },
        "Ink.UI.DatePicker": {
            "name": "Ink.UI.DatePicker",
            "shortname": "Ink.UI.DatePicker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.DatePicker_1",
            "namespace": "",
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 39,
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "autoOpen",
                            "description": "set to `true` to automatically open the datepicker.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "cleanText",
                            "description": "text to display on clean button. defaults to 'Limpar'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "closeText",
                            "description": "text to display on close button. defaults to 'Fechar'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "cssClass",
                            "description": "CSS class to be applied to the datepicker",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "dateRange",
                            "description": "enforce limits to year, month and day for the Date, ex: '1990-08-25:2020-11'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "displayInSelect",
                            "description": "whether to display the component in a select. defaults to false.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "dayField",
                            "description": "(if using options.displayInSelect) `<select>` field with days.",
                            "type": "String|DOMElement",
                            "optional": true
                        },
                        {
                            "name": "monthField",
                            "description": "(if using options.displayInSelect)  `<select>` field with months.",
                            "type": "String|DOMElement",
                            "optional": true
                        },
                        {
                            "name": "yearField",
                            "description": "(if using options.displayInSelect)  `<select>` field with years.",
                            "type": "String|DOMElement",
                            "optional": true
                        },
                        {
                            "name": "format",
                            "description": "Date format string",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "instance",
                            "description": "unique id for the datepicker",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "month",
                            "description": "Hash of month names. Defaults to portuguese month names. January is 1.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "nextLinkText",
                            "description": "text to display on the previous button. defaults to '«'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "onFocus",
                            "description": "if the datepicker should open when the target element is focused",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "onMonthSelected",
                            "description": "callback function to execute when the month is selected",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onSetDate",
                            "description": "callback to execute when set date",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onYearSelected",
                            "description": "callback function to execute when the year is selected",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "position",
                            "description": "position the datepicker. Accept right or bottom, default is right",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "prevLinkText",
                            "description": "text to display on the previous button. defaults to '«'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "showClean",
                            "description": "whether to display the clean button or not. defaults to true.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "showClose",
                            "description": "whether to display the close button or not. defaults to true.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "shy",
                            "description": "whether the datepicker starts automatically.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "startDate",
                            "description": "Date to define init month. Must be in yyyy-mm-dd format",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "startWeekDay",
                            "description": "day to use as first column on the calendar view. Defaults to Monday (1)",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "validYearFn",
                            "description": "callback function to execute when 'rendering' the month (in the month view)",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "validMonthFn",
                            "description": "callback function to execute when 'rendering' the month (in the month view)",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "validDayFn",
                            "description": "callback function to execute when 'rendering' the day (in the month view)",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "nextValidDateFn",
                            "description": "Find the next valid date, given the current Date. Necessary when the calendar has a lot of \"holes\", and not many dates are valid and they are separated by many months or years so it doesn't make sense to have the user click the \"next\" button too many times and not see any valid date.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "prevValidDateFn",
                            "description": "See nextValidDateFn. Find the previous valid date.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "wDay",
                            "description": "Hash of weekdays. Defaults to portuguese month names. Sunday is 0.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "yearRange",
                            "description": "enforce limits to year for the Date, ex: '1990:2020' (deprecated)",
                            "type": "String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "[options.ofText='",
                    "description": "of ']   text to display between month and year. defaults to ' de '",
                    "type": "String"
                }
            ],
            "example": [
                "\n    <input type=\"text\" id=\"dPicker\" />\n    <script>\n        Ink.requireModules(['Ink.Dom.Selector_1','Ink.UI.DatePicker_1'],function( Selector, DatePicker ){\n            var datePickerElement = Ink.s('#dPicker');\n            var datePickerObj = new DatePicker( datePickerElement );\n        });\n    </script>"
            ]
        },
        "Ink.UI.Draggable": {
            "name": "Ink.UI.Draggable",
            "shortname": "Ink.UI.Draggable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.DatePicker_1",
            "namespace": "",
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 19,
            "version": "1",
            "is_constructor": 1,
            "params": [
                {
                    "name": "target",
                    "description": "Target element.",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Optional object for configuring the component",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "constraint",
                            "description": "Movement constraint. None by default. Can be `vertical`, `horizontal`, or `both`.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "constraintElm",
                            "description": "Constrain dragging to be within this element. None by default.",
                            "type": "String|DomElement",
                            "optional": true
                        },
                        {
                            "name": "top,left,right,bottom",
                            "description": "Limits for constraining draggable movement.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "handle",
                            "description": "if specified, this element will be used as a handle for dragging.",
                            "type": "String|DOMElement",
                            "optional": true
                        },
                        {
                            "name": "revert",
                            "description": "if true, reverts the draggable to the original position when dragging stops",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "cursor",
                            "description": "cursor type (CSS `cursor` value) used when the mouse is over the draggable object",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "zIndex",
                            "description": "zindex applied to the draggable element while dragged",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "fps",
                            "description": "if defined, on drag will run every n frames per second only",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "droppableProxy",
                            "description": "if set, a shallow copy of the droppableProxy will be put on document.body with transparent bg",
                            "type": "DomElement",
                            "optional": true
                        },
                        {
                            "name": "mouseAnchor",
                            "description": "defaults to mouse cursor. can be 'left|center|right top|center|bottom'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "dragClass",
                            "description": "class to add when the draggable is being dragged.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'drag'"
                        },
                        {
                            "name": "onStart",
                            "description": "callback called when dragging starts",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onEnd",
                            "description": "callback called when dragging stops",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onDrag",
                            "description": "callback called while dragging, prior to position updates",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onChange",
                            "description": "callback called while dragging, after position updates",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n    Ink.requireModules( ['Ink.UI.Draggable_1'], function( Draggable ){\n        new Draggable( '#myElementId' );\n    });"
            ]
        },
        "Ink.UI.Dropdown": {
            "name": "Ink.UI.Dropdown",
            "shortname": "Ink.UI.Dropdown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Dropdown_1",
            "namespace": "",
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 15,
            "description": "Use this UI module to achieve a dropdown menu.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "trigger",
                    "description": "",
                    "type": "DOMElement|String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "target",
                            "description": "Target of the dropdown action.",
                            "type": "DOMElement|String"
                        }
                    ]
                }
            ]
        },
        "Ink.UI.Droppable": {
            "name": "Ink.UI.Droppable",
            "shortname": "Ink.UI.Droppable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Droppable_1",
            "namespace": "",
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 17,
            "version": "1",
            "static": 1
        },
        "Ink.UI.FormValidator": {
            "name": "Ink.UI.FormValidator",
            "shortname": "Ink.UI.FormValidator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.FormValidator_1",
            "namespace": "",
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 20,
            "version": "1"
        },
        "Ink.UI.FormValidator_2": {
            "name": "Ink.UI.FormValidator_2",
            "shortname": "Ink.UI.FormValidator_2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.FormValidator_2",
            "namespace": "",
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 623,
            "version": "2",
            "is_constructor": 1,
            "params": [
                {
                    "name": "selector",
                    "description": "Either a CSS Selector string, or the form's DOMElement",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options.eventTrigger",
                    "description": "What event do we listen for.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'submit'"
                },
                {
                    "name": "options.neverSubmit",
                    "description": "Always cancel the event? Use this to avoid submitting the form.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "[options.searchFor='input,",
                    "description": "select, textarea, .control-group'] Look in these inputs for validation data-attributes.",
                    "type": "Selector"
                },
                {
                    "name": "options.beforeValidation",
                    "description": "Callback to be executed before validating the form",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "options.onError",
                    "description": "Validation error callback",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "options.onSuccess",
                    "description": "Validation success callback",
                    "type": "Function",
                    "optional": true
                }
            ],
            "example": [
                "\n    Ink.requireModules( ['Ink.UI.FormValidator_2'], function( FormValidator ){\n        var myValidator = new FormValidator( '#my-form' );\n    });"
            ]
        },
        "Ink.UI.ImageQuery": {
            "name": "Ink.UI.ImageQuery",
            "shortname": "Ink.UI.ImageQuery",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.ImageQuery_1",
            "namespace": "",
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 9,
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "src",
                            "description": "String or Callback function (that returns a string) with the path to be used to get the images.",
                            "type": "String|Function",
                            "optional": true
                        },
                        {
                            "name": "retina",
                            "description": "String or Callback function (that returns a string) with the path to be used to get RETINA specific images.",
                            "type": "String|Function",
                            "optional": true
                        },
                        {
                            "name": "queries",
                            "description": "Array of queries",
                            "type": "Array",
                            "optional": true,
                            "props": [
                                {
                                    "name": "label",
                                    "description": "Label of the query. Ex. 'small'",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "width",
                                    "description": "Min-width to use this query",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "onLoad",
                            "description": "Date format string",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     <div class=\"imageQueryExample large-100 medium-100 small-100 content-center clearfix vspace\">\n         <img src=\"/assets/imgs/imagequery/small/image.jpg\" />\n     </div>\n     <script type=\"text/javascript\">\n     Ink.requireModules( ['Ink.Dom.Selector_1', 'Ink.UI.ImageQuery_1'], function( Selector, ImageQuery ){\n         var imageQueryElement = Ink.s('.imageQueryExample img');\n         var imageQueryObj = new ImageQuery('.imageQueryExample img',{\n             src: '/assets/imgs/imagequery/{:label}/{:file}',\n             queries: [\n                 {\n                     label: 'small',\n                     width: 480\n                 },\n                 {\n                     label: 'medium',\n                     width: 640\n                 },\n                 {\n                     label: 'large',\n                     width: 1024\n                 }   \n             ]\n         });\n     } );\n     </script>"
            ]
        },
        "Ink.UI.Modal": {
            "name": "Ink.UI.Modal",
            "shortname": "Ink.UI.Modal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Modal_1",
            "namespace": "",
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 14,
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "width",
                            "description": "Default/Initial width. Ex: '600px'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "Default/Initial height. Ex: '400px'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "shadeClass",
                            "description": "Custom class to be added to the div.ink-shade",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "modalClass",
                            "description": "Custom class to be added to the div.ink-modal",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "trigger",
                            "description": "CSS Selector to target elements that will trigger the Modal.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "triggerEvent",
                            "description": "Trigger's event to be listened. 'click' is the default value. Ex: 'mouseover', 'touchstart'...",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "autoDisplay",
                            "description": "Display the Modal automatically when constructed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "markup",
                            "description": "Markup to be placed in the Modal when created",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "onShow",
                            "description": "Callback function to run when the Modal is opened.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onDismiss",
                            "description": "Callback function to run when the Modal is closed. Return `false` to cancel dismissing the Modal.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "closeOnClick",
                            "description": "Determines if the Modal should close when clicked outside of it.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "closeOnEscape",
                            "description": "Determines if the Modal should close when \"Esc\" key is pressed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "responsive",
                            "description": "Determines if the Modal should behave responsively (adapt to smaller viewports).",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "disableScroll",
                            "description": "Determines if the Modal should 'disable' the page's scroll (not the Modal's body).",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     <div class=\"ink-shade fade\">\n         <div id=\"test\" class=\"ink-modal fade\" data-trigger=\"#bModal\" data-width=\"800px\" data-height=\"400px\">\n             <div class=\"modal-header\">\n                 <button class=\"modal-close ink-dismiss\"></button>\n                 <h5>Modal windows can have headers</h5>\n             </div>\n             <div class=\"modal-body\" id=\"modalContent\">\n                 <h3>Please confirm your previous choice</h3>\n                 <p>\"No,\" said Peleg, \"and he hasn't been baptized right either, or it would have washed some of that devil's blue off his face.\"</p>\n                 <p>\n                     <img src=\"http://placehold.it/800x400\" style=\"width: 100%;\" alt=\"\">\n                 </p>\n                 <p>\"Do tell, now,\" cried Bildad, \"is this Philistine a regular member of Deacon Deuteronomy's meeting? I never saw him going there, and I pass it every Lord's day.\"</p>\n                 <p>\"I don't know anything about Deacon Deuteronomy or his meeting,\" said I; \"all I know is, that Queequeg here is a born member of the First Congregational Church. He is a deacon himself, Queequeg is.\"</p>\n             </div>\n             <div class=\"modal-footer\">\n                 <div class=\"push-right\">\n                     <button class=\"ink-button info\">Confirm</button>\n                     <button class=\"ink-button caution ink-dismiss\">Cancel</button>\n                 </div>\n             </div>\n         </div>\n     </div>\n     <a href=\"#\" id=\"bModal\">Open modal</a>\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.Modal_1'], function( Selector, Modal ){\n             var modalElement = Ink.s('#test');\n             var modalObj = new Modal( modalElement );\n         });\n     </script>"
            ]
        },
        "Ink.UI.Pagination": {
            "name": "Ink.UI.Pagination",
            "shortname": "Ink.UI.Pagination",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Pagination_1",
            "namespace": "",
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 28,
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "size",
                            "description": "number of pages.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "totalItemCount",
                            "description": "Total numeber of items to display",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "itemsPerPage",
                            "description": "number of items per page.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "maxSize",
                            "description": "If passed, only shows at most maxSize items. displays also first|prev page and next page|last buttons",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "start",
                            "description": "start page. defaults to 1",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "firstLabel",
                            "description": "label to display on first page button",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "lastLabel",
                            "description": "label to display on last page button",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "previousLabel",
                            "description": "label to display on previous button",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "nextLabel",
                            "description": "label to display on next button",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "previousPageLabel",
                            "description": "label to display on previous page button",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "nextPageLabel",
                            "description": "label to display on next page button",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "onChange",
                            "description": "optional callback. Called with `(thisPaginator, newPageNumber)`.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "hashParameter",
                            "description": "parameter to use on setHash. by default uses 'page'",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "parentTag",
                            "description": "HTML Tag used as the parent node.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "childTag",
                            "description": "HTML Tag used as the child nodes.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "wrapperClass",
                            "description": "CSS Class used in the wrapper element",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "paginationClass",
                            "description": "CSS Class used in the pagination element",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "activeClass",
                            "description": "CSS Class used to mark page as active",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "disabledClass",
                            "description": "CSS Class used to mark page as disabled",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "hideClass",
                            "description": "CSS Class used to hide elements",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "previousClass",
                            "description": "CSS Class used in the previous element",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "previousPageClass",
                            "description": "CSS Class used in the previous page element",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "nextClass",
                            "description": "CSS Class used in the next element",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "nextPageClass",
                            "description": "CSS Class used in the next page element",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "numberFormatter",
                            "description": "optional function which takes and 0-indexed number and returns the string which appears on a numbered button",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Ink.UI.ProgressBar": {
            "name": "Ink.UI.ProgressBar",
            "shortname": "Ink.UI.ProgressBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.ProgressBar_1",
            "namespace": "",
            "file": "Ink/UI/ProgressBar/1/lib.js",
            "line": 9,
            "description": "Associated to a .ink-progress-bar element, it provides the necessary\nmethod - setValue() - for the user to change the element's value.",
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "startValue",
                            "description": "Percentage of the bar that is filled. Range between 0 and 100. Default: 0",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "onStart",
                            "description": "Callback that is called when a change of value is started",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onEnd",
                            "description": "Callback that is called when a change of value ends",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     <div class=\"ink-progress-bar grey\" data-start-value=\"70%\">\n         <span class=\"caption\">I am a grey progress bar</span>\n         <div class=\"bar grey\"></div>\n     </div>\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.ProgressBar_1'], function( Selector, ProgressBar ){\n             var progressBarElement = Ink.s('.ink-progress-bar');\n             var progressBarObj = new ProgressBar( progressBarElement );\n         });\n     </script>"
            ]
        },
        "Ink.UI.SmoothScroller": {
            "name": "Ink.UI.SmoothScroller",
            "shortname": "Ink.UI.SmoothScroller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.SmoothScroller_1",
            "namespace": "",
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 17,
            "version": "1",
            "static": 1,
            "example": [
                "\n\n     <a href=\"#part1\" class=\"ink-smooth-scroll\">go to Part 1</a>\n\n     [lots and lots of content...]\n\n     <h1 id=\"part1\">Part 1</h1>\n\n     <script>\n         // ...Although you don't need to do this if you have autoload.js\n         Ink.requireModules(['Ink.UI.SmoothScroller_1'], function (SmoothScroller) {\n             SmoothScroller.init('.ink-smooth-scroll');\n         })\n     </script>"
            ]
        },
        "Ink.UI.SortableList": {
            "name": "Ink.UI.SortableList",
            "shortname": "Ink.UI.SortableList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.SortableList_1",
            "namespace": "",
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 12,
            "description": "Adds sortable behaviour to any list!",
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options.placeholderClass",
                    "description": "CSS class to be added to the \"ghost\" element being dragged around",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'placeholder'"
                },
                {
                    "name": "options.draggedClass",
                    "description": "CSS class added to the original element.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'hide-all'"
                },
                {
                    "name": "options.draggingClass",
                    "description": "CSS class added to the html element when the user is dragging.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'dragging'"
                },
                {
                    "name": "options.dragSelector",
                    "description": "CSS selector for the drag enabled nodes.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'li'"
                },
                {
                    "name": "options.handleSelector",
                    "description": "CSS selector for the drag handle. If present, you can only drag nodes by this selector.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "options.moveSelector",
                    "description": "CSS selector to validate a node move. If present, you can only move nodes into this selector.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "options.swap",
                    "description": "Flag to swap moving element with target element instead of changing its order.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "options.cancelMouseOut",
                    "description": "Flag to cancel moving if mouse leaves the container element.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "example": [
                "\n     <ul class=\"unstyled ink-sortable-list\" id=\"slist\" data-handle-selector=\".ink-label\">\n         <li><span class=\"ink-label info\">drag here</span>primeiro</li>\n         <li><span class=\"ink-label info\">drag here</span>segundo</li>\n         <li><span class=\"ink-label info\">drag here</span>terceiro</li>\n     </ul>\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.SortableList_1'], function( Selector, SortableList ){\n             var sortableListElement = Ink.s('.ink-sortable-list');\n             var sortableListObj = new SortableList( sortableListElement );\n         });\n     <\\/script>"
            ]
        },
        "Ink.UI.Spy": {
            "name": "Ink.UI.Spy",
            "shortname": "Ink.UI.Spy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Spy_1",
            "namespace": "",
            "file": "Ink/UI/Spy/1/lib.js",
            "line": 105,
            "description": "Spy is a component that 'spies' an element (or a group of elements) and when they leave the viewport (through the top),\nhighlight an option - related to that element being spied - that resides in a menu, initially identified as target.",
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "target",
                            "description": "Target menu on where the spy will highlight the right option.\n    TODO @xparam {String}                [options.activeClass='active'] Class which marks the \"li\" as active.",
                            "type": "DOMElement|String"
                        }
                    ]
                }
            ],
            "example": [
                "\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.Spy_1'], function( Selector, Spy ){\n             var menuElement = Ink.s('#menu');\n             var specialAnchorToSpy = Ink.s('#specialAnchor');\n             var spyObj = new Spy( specialAnchorToSpy, {\n                 target: menuElement\n             });\n         });\n     </script>"
            ]
        },
        "Ink.UI.Stacker_1": {
            "name": "Ink.UI.Stacker_1",
            "shortname": "Ink.UI.Stacker_1",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Stacker_1",
            "namespace": "",
            "file": "Ink/UI/Stacker/1/lib.js",
            "line": 12,
            "description": "This module combines several stacks of items together, in smaller screen sizes.\n\nThe purpose is to have several stacks of items which may have different heights and as such cannot be used because of `float: left` quirks.\n\nFor example, when you have three different columns of information:\n\n    [col. A: 1] [col. B: 1] [col. C: 1]\n    [col. B: 2] [col. C: 2] [col. C: 2]\n\nand the screen resizes and you need a layout of 2 columns, Stacker reorders the stacks so that you get:\n\n    [col. A: 1] [col. B: 1]\n    [col. C: 1] [col. A: 2]\n    [col. B: 2] [col. C: 2]\n\nNote: If you just want to use a different amount of columns for your items in several viewports, but these items are guaranteed to have a fixed height, don't use this module. Use the `small-*`, `medium-*` and `large-*` classes instead.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "container",
                    "description": "Element which contains the stacks (identified by the options.column selector)",
                    "type": "DOMElement|String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "",
                    "optional": true,
                    "props": [
                        {
                            "name": "column",
                            "description": "Select the columns inside the `container`",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'.stacker-column'"
                        },
                        {
                            "name": "item",
                            "description": "Select items in your stack",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'.stacker-item'"
                        },
                        {
                            "name": "customBreakPoints",
                            "description": "options for each breakpoint name. Use this if you have more breakpoints than Ink by default (`large`, `medium`, `small`)",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "customBreakpoints.(breakpoint)",
                            "description": "",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "customBreakpoints.(breakpoint).max",
                            "description": "Maximum screen size as seen in your media query"
                        },
                        {
                            "name": "customBreakpoints.(breakpoint).min",
                            "description": "Minimum screen size as seen in your media query"
                        },
                        {
                            "name": "customBreakpoints.(breakpoint).cols",
                            "description": "Column count for this size."
                        },
                        {
                            "name": "largeMax",
                            "description": "Upper bound of `large` breakpoint",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "largeMin",
                            "description": "Lower bound of `large` breakpoint",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "961"
                        },
                        {
                            "name": "mediumMax",
                            "description": "Upper bound of `medium` breakpoint",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "960"
                        },
                        {
                            "name": "mediumMin",
                            "description": "Lower bound of `medium` breakpoint",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "651"
                        },
                        {
                            "name": "smallMax",
                            "description": "Upper bound of `small` breakpoint",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "650"
                        },
                        {
                            "name": "smallMin",
                            "description": "Lower bound of `small` breakpoint",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "largeCols",
                            "description": "Number of columns in the `large` viewport",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "3"
                        },
                        {
                            "name": "mediumCols",
                            "description": "Number of columns in the `medium` viewport",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "2"
                        },
                        {
                            "name": "smallCols",
                            "description": "Number of columns in the `small` viewport",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "isOrdered",
                            "description": "When `false`, do not reorder stacks when combining them.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "onRunCallback",
                            "description": "Called when instantiated",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onResizeCallback",
                            "description": "Called when resized because the window resized.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onAPIReloadCallback",
                            "description": "Called when you ask to reload stack items from the DOM.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n\nHtml:\n\n    <div id=\"stacker-container\">  <!-- Stacker element -->\n        <div class=\"large-33 medium-50 small-100 stacker-column\"> <!-- Column element ('.stacker-column' is the default selector) -->\n            <div id=\"a\" class=\"stacker-item\">a</div> <!-- Item ('.stacker-item' is the default selector) -->\n            <div id=\"d\" class=\"stacker-item\">d</div>\n            <div id=\"g\" class=\"stacker-item\">g</div>\n        </div>\n        <div class=\"large-33 medium-50 small-100 hide-small stacker-column\">\n            <div id=\"b\" class=\"stacker-item\">b</div>\n            <div id=\"e\" class=\"stacker-item\">e</div>\n            <div id=\"h\" class=\"stacker-item\">h</div>\n        </div>\n        <div class=\"large-33 medium-50 small-100 hide-medium hide-small stacker-column\">\n            <div id=\"c\" class=\"stacker-item\">c</div>\n            <div id=\"f\" class=\"stacker-item\">f</div>\n            <div id=\"i\" class=\"stacker-item\">i</div>\n        </div>\n    </div>\n\nJavascript:\n\n    Ink.requireModules(['Ink.UI.Stacker_1'], function (Stacker) {\n        var stacker = new Stacker('#stacker-container');\n        // Keep the \"stacker\" variable around if you want to call addItem and reloadItems\n    });"
            ]
        },
        "Ink.UI.Sticky": {
            "name": "Ink.UI.Sticky",
            "shortname": "Ink.UI.Sticky",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Sticky_1",
            "namespace": "",
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 9,
            "description": "The Sticky component takes an element and transforms it's behavior in order to, when the user scrolls he sets its position\nto fixed and maintain it until the user scrolls back to the same place.",
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "offsetBottom",
                            "description": "Number of pixels of distance from the bottomElement.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offsetTop",
                            "description": "Number of pixels of distance from the topElement.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "inlineDimensions",
                            "description": "Whether to set \"style.height\" and \"style.width\" in the stuck element. Turn this off when your `stickyClass` has its own height and width and you don't want this to be dealt with through javascript.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "inlinePosition",
                            "description": "Whether to set \"style.left\" in the stuck element. Turn this off when your `stickyClass` has its own \"left\" position and you don't want this to be dealt with through javascript.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "wrapperClass",
                            "description": "Css class for the wrapper element.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"ink-sticky-wrapper\""
                        },
                        {
                            "name": "stickyClass",
                            "description": "Css class for sticking the sticky to the screen. Add your own \"stuck\" class to define your own sticky behaviour.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"ink-sticky-stuck\""
                        },
                        {
                            "name": "topElement",
                            "description": "CSS Selector that specifies a top element with which the component could collide.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "bottomElement",
                            "description": "CSS Selector that specifies a bottom element with which the component could collide.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "activateInLayouts",
                            "description": "Layouts in which the sticky behaviour is present. Pass an array or comma-separated string.",
                            "type": "Array|String",
                            "optional": true,
                            "optdefault": "'medium,large'"
                        }
                    ]
                }
            ],
            "example": [
                "\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.Sticky_1'], function( Selector, Sticky ) {\n             var menuElement = Ink.s('#menu');\n             var stickyObj = new Sticky( menuElement );\n         });\n     </script>"
            ]
        },
        "Ink.UI.Swipe": {
            "name": "Ink.UI.Swipe",
            "shortname": "Ink.UI.Swipe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Swipe",
            "namespace": "",
            "file": "Ink/UI/Swipe/1/lib.js",
            "line": 9,
            "description": "Subscribe swipe gestures!\n\nSupports filtering swipes be any combination of the criteria supported in the options.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "onEnd",
                            "description": "callback function for the `touchend` event. Gets all the gesture information, and is filtered by min/max Dist and Duration options (see below)",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onStart",
                            "description": "callback function for `touchstart` event",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onMove",
                            "description": "callback function for every `touchmove` event. Gets current gesture information.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "minDist",
                            "description": "minimum allowed distance, in pixels",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "maxDist",
                            "description": "maximum allowed distance, in pixels",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "minDuration",
                            "description": "minimum allowed duration, in seconds",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "maxDuration",
                            "description": "maximum allowed duration, in seconds",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "axis",
                            "description": "if either 'x' or 'y' is passed, only swipes where the dominant axis is the given one trigger the callback",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "storeGesture",
                            "description": "store gesture information and provide to the callback",
                            "type": "String",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "stopEvents",
                            "description": "stop (default and propagation) of the received events\n\n-----\n\nArguments received by the callbacks\n-----------------------------------\n\n`onStart`, `onMove`, and `onEnd` receive as argument an object containing:\n\n  - `event`: the DOMEvent object\n  - `element`: the target element\n  - `Instance`: the `Ink.UI.Swipe_1` instance\n  - `position`: `Array` with `[x, y]` coordinates of current position\n  - `dt`: Time passed between now and the first event (onMove only)\n  - `gesture`: an Array containing [x,y] coordinates of every touchmove event received (storeGesture only) (onEnd only)\n  - `time`: an Array containing all the `dt` values for every touchmove event (onEnd only)\n  - `overallMovement`: X and Y distance traveled by the touch movement (`[x, y]`) (onEnd only)\n  - `overallTime`: total time passed (onEnd only)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "Ink.UI.Table": {
            "name": "Ink.UI.Table",
            "shortname": "Ink.UI.Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Table_1",
            "namespace": "",
            "file": "Ink/UI/Table/1/lib.js",
            "line": 46,
            "description": "The Table component transforms the native/DOM table element into a\nsortable, paginated component.",
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "pageSize",
                            "description": "Number of rows per page. Omit to avoid paginating.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "endpoint",
                            "description": "Endpoint to get the records via AJAX. Omit if you don't want to do AJAX",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "createEndpointUrl",
                            "description": "Callback to customise what URL the AJAX endpoint is at. Receives three\n     arguments: base (the \"endpoint\" option), sort (`{ order: 'asc' or 'desc', field: fieldname }`)\n     and page ({ page: page number, size: items per page })",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getDataFromEndPoint",
                            "description": "Callback to allow the user to retrieve the data himself given an URL.\n     Must accept two arguments: `url` and `callback`. This `callback` will\n     take as a single argument a JavaScript object.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "processJSONRows",
                            "description": "Retrieve an array of rows from the data which came from AJAX.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "processJSONHeaders",
                            "description": "Get an object with all the headers' names as keys, and a { label, sortable }\n     object as value.\n     Example: `{col1: {label: \"Column 1\"}, col2: {label: \"Column 2\", sortable: true}`.\n     Takes a single argument, the JSON response.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "processJSONRow",
                            "description": "Process a row object before it gets on the table.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "processJSONField",
                            "description": "Process the field data before putting it on the table.\n     You can return HTML, a DOM element, or a string here.\n     Arguments you receive: `(column, fieldData, rowIndex)`.",
                            "type": "Function",
                            "optional": true,
                            "props": [
                                {
                                    "name": "(field_name)",
                                    "description": "The same as processJSONField, but for a particular field.",
                                    "type": "Function",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "processJSONTotalRows",
                            "description": "A callback where you have a chance to say how many rows\n     are in the dataset (not only on this page) you have on the\n     collection. You get as an argument the JSON response.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "getSortKey",
                            "description": "A function taking a `{ columnIndex, columnName, data, element }`\n     object and returning a value which serves as a sort key for the\n     sorting operation. For example, if you want to sort by a\n     `data-sort-key` atribute, set `getSortKey` to:\n\n         function (cell) {\n             return cell.element.getAttribute('data-sort-key');\n         }",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "(field_name)",
                                    "description": "Same as `options.getSortKey`, but for a particular field.",
                                    "type": "Function",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "tdClassNames",
                            "description": "An object mapping each field to what classes it gets.\n     Example: `{ name: \"large-10\", isBoss: \"hide-small\" }`",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "pagination",
                            "description": "Pagination instance or element.",
                            "type": "String|DomElement|Ink.UI.Pagination",
                            "optional": true
                        },
                        {
                            "name": "paginationOptions",
                            "description": "Override the options with which we instantiate the Ink.UI.Pagination.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "allowResetSorting",
                            "description": "Allow sort order to be set to \"none\" in addition to \"ascending\" and \"descending\"",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "visibleFields",
                            "description": "Set of fields which get shown on the table",
                            "type": "String|Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     <table class=\"ink-table alternating\" data-page-size=\"6\">\n         <thead>\n             <tr>\n                 <th data-sortable=\"true\" width=\"75%\">Pepper</th>\n                 <th data-sortable=\"true\" width=\"25%\">Scoville Rating</th>\n             </tr>\n         </thead>\n         <tbody>\n             <tr>\n                 <td>Trinidad Moruga Scorpion</td>\n                 <td>1500000</td>\n             </tr>\n             <tr>\n                 <td>Bhut Jolokia</td>\n                 <td>1000000</td>\n             </tr>\n             <tr>\n                 <td>Naga Viper</td>\n                 <td>1463700</td>\n             </tr>\n             <tr>\n                 <td>Red Savina Habanero</td>\n                 <td>580000</td>\n             </tr>\n             <tr>\n                 <td>Habanero</td>\n                 <td>350000</td>\n             </tr>\n             <tr>\n                 <td>Scotch Bonnet</td>\n                 <td>180000</td>\n             </tr>\n             <tr>\n                 <td>Malagueta</td>\n                 <td>50000</td>\n             </tr>\n             <tr>\n                 <td>Tabasco</td>\n                 <td>35000</td>\n             </tr>\n             <tr>\n                 <td>Serrano Chili</td>\n                 <td>27000</td>\n             </tr>\n             <tr>\n                 <td>Jalapeño</td>\n                 <td>8000</td>\n             </tr>\n             <tr>\n                 <td>Poblano</td>\n                 <td>1500</td>\n             </tr>\n             <tr>\n                 <td>Peperoncino</td>\n                 <td>500</td>\n             </tr>\n         </tbody>\n     </table>\n     <nav class=\"ink-navigation\"><ul class=\"pagination\"></ul></nav>\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.Table_1'], function( Selector, Table ){\n             var tableElement = Ink.s('.ink-table');\n             var tableObj = new Table( tableElement );\n         });\n     </script>"
            ]
        },
        "Ink.UI.Tabs": {
            "name": "Ink.UI.Tabs",
            "shortname": "Ink.UI.Tabs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Tabs_1",
            "namespace": "",
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 9,
            "description": "Tabs component",
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "preventUrlChange",
                            "description": "Flag that determines if follows the link on click or stops the event",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "active",
                            "description": "ID of the tab to activate on creation",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "disabled",
                            "description": "IDs of the tabs that will be disabled on creation",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "onBeforeChange",
                            "description": "Callback to be executed before changing tabs",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onChange",
                            "description": "Callback to be executed after changing tabs",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "triggerEventsOnLoad",
                            "description": "Trigger the above events when the page is loaded.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n     <div class=\"ink-tabs top\"> <!-- replace 'top' with 'bottom', 'left' or 'right' to place navigation -->\n         \n         <!-- put navigation first if using top, left or right positioning -->\n         <ul class=\"tabs-nav\">\n             <li><a href=\"#home\">Home</a></li>\n             <li><a href=\"#news\">News</a></li>\n             <li><a href=\"#description\">Description</a></li>\n             <li><a href=\"#stuff\">Stuff</a></li>\n             <li><a href=\"#more_stuff\">More stuff</a></li>\n         </ul>\n         \n         <!-- Put your content second if using top, left or right navigation -->\n         <div id=\"home\" class=\"tabs-content\"><p>Content</p></div>\n         <div id=\"news\" class=\"tabs-content\"><p>Content</p></div>\n         <div id=\"description\" class=\"tabs-content\"><p>Content</p></div>\n         <div id=\"stuff\" class=\"tabs-content\"><p>Content</p></div>\n         <div id=\"more_stuff\" class=\"tabs-content\"><p>Content</p></div>\n         <!-- If you're using bottom navigation, switch the nav block with the content blocks -->\n      \n     </div>\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.Tabs_1'], function( Selector, Tabs ){\n             var tabsElement = Ink.s('.ink-tabs');\n             var tabsObj = new Tabs( tabsElement );\n         });\n     </script>"
            ]
        },
        "Ink.UI.TagField": {
            "name": "Ink.UI.TagField",
            "shortname": "Ink.UI.TagField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Tabs_1",
            "namespace": "",
            "file": "Ink/UI/TagField/1/lib.js",
            "line": 13,
            "description": "Use this class to have a field where a user can input several tags into a single text field. A good example is allowing the user to describe a blog post or a picture through tags, for later searching.\n\nThe markup is as follows:\n\n          <input class=\"ink-tagfield\" type=\"text\" value=\"initial,value\">\n\nBy applying this UI class to the above input, you get a tag field with the tags \"initial\" and \"value\". The class preserves the original input element. It remains hidden and is updated with new tag information dynamically, so regular HTML form logic still applies.\n\nBelow \"input\" refers to the current value of the input tag (updated as the user enters text, of course), and \"output\" refers to the value which this class writes back to said input tag.",
            "version": "1",
            "is_constructor": 1,
            "params": [
                {
                    "name": "element",
                    "description": "Selector or DOM Input Element.",
                    "type": "String|InputElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "tags",
                            "description": "initial tags in the input",
                            "type": "String|Array",
                            "optional": true
                        },
                        {
                            "name": "allowRepeated",
                            "description": "allow user to input several tags",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "separator",
                            "description": "Split the input by this RegExp. The default splits by spaces, commas and semicolons",
                            "type": "RegExp",
                            "optional": true,
                            "optdefault": "/[,;(space)"
                        },
                        {
                            "name": "outSeparator",
                            "description": "Use this string to separate each tag from the next in the output.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "','"
                        },
                        {
                            "name": "autoSplit",
                            "description": "",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "maxTags",
                            "description": "Maximum amount of tags the user can write.",
                            "type": "Integer",
                            "optional": true,
                            "optdefault": "-1"
                        }
                    ]
                }
            ],
            "example": [
                ""
            ]
        },
        "Ink.UI.Toggle": {
            "name": "Ink.UI.Toggle",
            "shortname": "Ink.UI.Toggle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Toggle_1",
            "namespace": "",
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 9,
            "description": "Toggle component",
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "target",
                            "description": "CSS Selector that specifies the elements that this component will toggle",
                            "type": "String"
                        },
                        {
                            "name": "classNameOn",
                            "description": "className when toggle is On",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'show-all'"
                        },
                        {
                            "name": "classNameOff",
                            "description": "className when toggle is Off.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'hide-all'"
                        },
                        {
                            "name": "triggerEvent",
                            "description": "Event that will trigger the toggling.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'click'"
                        },
                        {
                            "name": "closeOnClick",
                            "description": "When this is on, if the user clicks outside of the toggled content, the target is toggled off.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "closeOnInsideClick",
                            "description": "Toggle off when an element matching this selector is clicked. Set to null to deactivate the check. Default: 'a[href]' (finds links)",
                            "type": "Selector",
                            "optional": true,
                            "optdefault": "'a[href"
                        },
                        {
                            "name": "initialState",
                            "description": "Whether to start toggled off, on, or as found in the markup. (false: off, true: on, null: markup)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "onChangeState",
                            "description": "Callback to be called when the toggle state changes. Return `false` to cancel the event.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ],
            "example": [
                "\n     <div class=\"ink-dropdown\">\n         <button class=\"ink-button toggle\" data-target=\"#dropdown\">Dropdown <span class=\"icon-caret-down\"></span></button>\n         <ul id=\"dropdown\" class=\"dropdown-menu\">\n             <li class=\"heading\">Heading</li>\n             <li class=\"separator-above\"><a href=\"#\">Option</a></li>\n             <li><a href=\"#\">Option</a></li>\n             <li class=\"separator-above disabled\"><a href=\"#\">Disabled option</a></li>\n             <li class=\"submenu\">\n                 <a href=\"#\" class=\"toggle\" data-target=\"#submenu1\">A longer option name</a>\n                 <ul id=\"submenu1\" class=\"dropdown-menu\">\n                     <li class=\"submenu\">\n                         <a href=\"#\" class=\"toggle\" data-target=\"#ultrasubmenu\">Sub option</a>\n                         <ul id=\"ultrasubmenu\" class=\"dropdown-menu\">\n                             <li><a href=\"#\">Sub option</a></li>\n                             <li><a href=\"#\" data-target=\"ultrasubmenu\">Sub option</a></li>\n                             <li><a href=\"#\">Sub option</a></li>\n                         </ul>\n                     </li>\n                     <li><a href=\"#\">Sub option</a></li>\n                     <li><a href=\"#\">Sub option</a></li>\n                 </ul>\n             </li>\n             <li><a href=\"#\">Option</a></li>\n         </ul>\n     </div>\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.Toggle_1'], function( Selector, Toggle ){\n             var toggleElement = Ink.s('.toggle');\n             var toggleObj = new Toggle( toggleElement );\n         });\n     </script>"
            ]
        },
        "Ink.UI.Tooltip": {
            "name": "Ink.UI.Tooltip",
            "shortname": "Ink.UI.Tooltip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.Tooltip_1",
            "namespace": "",
            "file": "Ink/UI/Tooltip/1/lib.js",
            "line": 8,
            "is_constructor": 1,
            "params": [
                {
                    "name": "target",
                    "description": "Target element or selector of elements, to display the tooltips on.",
                    "type": "DOMElement|String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "text",
                            "description": "Text content for the tooltip.",
                            "optional": true,
                            "optdefault": "''"
                        },
                        {
                            "name": "html",
                            "description": "HTML for the tooltip. Same as above, but won't escape HTML.",
                            "optional": true,
                            "optdefault": "''"
                        },
                        {
                            "name": "where",
                            "description": "Positioning for the tooltip. Options:",
                            "optional": true,
                            "optdefault": "'up'",
                            "props": [
                                {
                                    "name": "up/down/left/right",
                                    "description": "Place above, below, to the left of, or to the right of, the target. Show an arrow."
                                },
                                {
                                    "name": "mousemove",
                                    "description": "Place the tooltip to the bottom and to the right of the mouse when it hovers the element, and follow the mouse as it moves."
                                },
                                {
                                    "name": "mousefix",
                                    "description": "Place the tooltip to the bottom and to the right of the mouse when it hovers the element, keep the tooltip there motionless."
                                }
                            ]
                        },
                        {
                            "name": "color",
                            "description": "Color of the tooltip. Options are red, orange, blue, green and black. Default is white.",
                            "optional": true,
                            "optdefault": "''"
                        },
                        {
                            "name": "fade",
                            "description": "Fade time; Duration of the fade in/out effect.",
                            "optional": true,
                            "optdefault": "0.3"
                        },
                        {
                            "name": "forever",
                            "description": "Set to 1/true to prevent the tooltip from being erased when the mouse hovers away from the target",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "timeout",
                            "description": "Time for the tooltip to live. Useful together with [options.forever].",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "delay",
                            "description": "Time the tooltip waits until it is displayed. Useful to avoid getting the attention of the user unnecessarily",
                            "optional": true
                        },
                        {
                            "name": "template",
                            "description": "Element or selector containing HTML to be cloned into the tooltips. Can be a hidden element, because CSS `display` is set to `block`.",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "templatefield",
                            "description": "Selector within the template element to choose where the text is inserted into the tooltip. Useful when a wrapper DIV is required.",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "left,top",
                            "description": "(Nitty-gritty) Spacing from the target to the tooltip, when `where` is `mousemove` or `mousefix`",
                            "optional": true,
                            "optdefault": "10"
                        },
                        {
                            "name": "spacing",
                            "description": "(Nitty-gritty) Spacing between the tooltip and the target element, when `where` is `up`, `down`, `left`, or `right`",
                            "optional": true,
                            "optdefault": "8"
                        }
                    ]
                }
            ],
            "example": [
                "\n    <ul class=\"buttons\">\n        <li class=\"button\" data-tip-text=\"Create a new document\">New</li>\n        <li class=\"button\" data-tip-text=\"Exit the program\">Quit</li>\n        <li class=\"button\" data-tip-text=\"Save the document you are working on\">Save</li>\n    </ul>\n    \n    [...]\n\n    <script>\n        Ink.requireModules(['Ink.UI.Tooltip_1'], function (Tooltip) {\n            new Tooltip('.button', {where: 'mousefix'});\n        });\n    </script>"
            ]
        },
        "Ink.UI.TreeView": {
            "name": "Ink.UI.TreeView",
            "shortname": "Ink.UI.TreeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.UI.TreeView_1",
            "namespace": "",
            "file": "Ink/UI/TreeView/1/lib.js",
            "line": 9,
            "description": "Shows elements in a tree-like hierarchical structure.",
            "is_constructor": 1,
            "version": "1",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options.node",
                    "description": "Selector to define which elements are seen as nodes.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'li'"
                },
                {
                    "name": "options.children",
                    "description": "Selector to define which elements are represented as children.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'ul'"
                },
                {
                    "name": "options.parentClass",
                    "description": "Classes to be added to the parent node.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'parent'"
                },
                {
                    "name": "[options.openClass='icon",
                    "description": "icon-minus-circle'] Classes to be added to the icon when a parent is open.",
                    "type": "String"
                },
                {
                    "name": "[options.closedClass='icon",
                    "description": "icon-plus-circle'] Classes to be added to the icon when a parent is closed.",
                    "type": "String"
                },
                {
                    "name": "options.hideClass",
                    "description": "Class to toggle visibility of the children.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'hide-all'"
                },
                {
                    "name": "options.iconTag",
                    "description": "The name of icon tag. The component tries to find a tag with that name as a direct child of the node. If it doesn't find it, it creates it.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'i'"
                },
                {
                    "name": "options.stopDefault",
                    "description": "Stops the default behavior of the click handler.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "example": [
                "\n     <ul class=\"ink-tree-view\">\n       <li data-open=\"true\"><a href=\"#\">root</a>\n         <ul>\n           <li><a href=\"#\">child 1</a></li>\n           <li><a href=\"#\">child 2</a>\n             <ul>\n               <li><a href=\"#\">grandchild 2a</a></li>\n               <li><a href=\"#\">grandchild 2b</a>\n                 <ul>\n                   <li><a href=\"#\">grandgrandchild 1bA</a></li>\n                   <li><a href=\"#\">grandgrandchild 1bB</a></li>\n                 </ul>\n               </li>\n             </ul>\n           </li>\n           <li><a href=\"#\">child 3</a></li>\n         </ul>\n       </li>\n     </ul>\n     <script>\n         Ink.requireModules( ['Ink.Dom.Selector_1','Ink.UI.TreeView_1'], function( Selector, TreeView ){\n             var treeViewElement = Ink.s('.ink-tree-view');\n             var treeViewObj = new TreeView( treeViewElement );\n         });\n     </script>"
            ]
        },
        "Ink.Util.Array": {
            "name": "Ink.Util.Array",
            "shortname": "Ink.Util.Array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.Array_1",
            "namespace": "",
            "file": "Ink/Util/Array/1/lib.js",
            "line": 12,
            "description": "Utility functions to use with Arrays",
            "version": "1",
            "static": 1
        },
        "Ink.Util.BinPack": {
            "name": "Ink.Util.BinPack",
            "shortname": "Ink.Util.BinPack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.BinPack_1",
            "namespace": "",
            "file": "Ink/Util/BinPack/1/lib.js",
            "line": 222,
            "description": "Binary Packing algorithm implementation\n\nBased on the work of Jake Gordon\n\nsee https://github.com/jakesgordon/bin-packing/",
            "version": "1",
            "static": 1
        },
        "Ink.Util.Cookie": {
            "name": "Ink.Util.Cookie",
            "shortname": "Ink.Util.Cookie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.Cookie_1",
            "namespace": "",
            "file": "Ink/Util/Cookie/1/lib.js",
            "line": 10,
            "description": "Utilities for Cookie handling",
            "version": "1",
            "static": 1
        },
        "Ink.Util.Date": {
            "name": "Ink.Util.Date",
            "shortname": "Ink.Util.Date",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.Date_1",
            "namespace": "",
            "file": "Ink/Util/Date/1/lib.js",
            "line": 10,
            "description": "Class to provide the same features that php date does",
            "version": "1",
            "static": 1
        },
        "Ink.Util.Dumper": {
            "name": "Ink.Util.Dumper",
            "shortname": "Ink.Util.Dumper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.Dumper_1",
            "namespace": "",
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 10,
            "description": "Dump/Profiling Utilities",
            "version": "1",
            "static": 1
        },
        "Ink.Util.I18n": {
            "name": "Ink.Util.I18n",
            "shortname": "Ink.Util.I18n",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.I18n_1",
            "namespace": "",
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 21,
            "description": "Creates a new internationalization helper object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "dict",
                    "description": "object mapping language codes (in the form of `pt_PT`, `pt_BR`, `fr`, `en_US`, etc.) to their Object dictionaries.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "(dictionaries...)",
                            "description": "",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "lang",
                    "description": "language code of the target language",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'pt_PT'"
                }
            ],
            "example": [
                "\n     var dictionaries = {    // This could come from a JSONP request from your server\n         'pt_PT': {\n             'hello': 'olá',\n             'me': 'eu',\n             'i have a {} for you': 'tenho um {} para ti' // Old syntax using `{%s}` tokens still available\n         },\n         'pt_BR': {\n             'hello': 'oi',\n             'me': 'eu',\n             'i have a {} for you': 'tenho um {} para você'\n         }\n     };\n     Ink.requireModules(['Ink.Util.I18n_1'], function (I18n) {\n         var i18n = new I18n(dictionaries, 'pt_PT');\n         i18n.text('hello');  // returns 'olá'\n         i18n.text('i have a {} for you', 'IRON SWORD'); // returns 'tenho um IRON SWORD' para ti\n         \n         i18n.lang('pt_BR');  // Changes language. pt_BR dictionary is loaded\n         i18n.text('hello');  // returns 'oi'\n\n         i18n.lang('en_US');  // Missing language.\n         i18n.text('hello');  // returns 'hello'. If testMode is on, returns '[hello]'\n     });",
                "\n     // The old {%s} syntax from libsapo's i18n is still supported\n     i18n.text('hello, {%s}!', 'someone'); // -> 'olá, someone!'"
            ]
        },
        "Ink.Util.Json": {
            "name": "Ink.Util.Json",
            "shortname": "Ink.Util.Json",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.Json_1",
            "namespace": "",
            "file": "Ink/Util/Json/1/lib.js",
            "line": 36,
            "description": "Use this class to convert JSON strings to JavaScript objects\n`(Json.parse)` and also to do the opposite operation `(Json.stringify)`.\nInternally, the standard JSON implementation is used if available\nOtherwise, the functions mimic the standard implementation.\n\nHere's how to produce JSON from an existing object:\n\n     Ink.requireModules(['Ink.Util.Json_1'], function (Json) {\n         var obj = {\n             key1: 'value1',\n             key2: 'value2',\n             keyArray: ['arrayValue1', 'arrayValue2', 'arrayValue3']\n         };\n         Json.stringify(obj);  // The above object as a JSON string\n     });\n\nAnd here is how to parse JSON:\n\n     Ink.requireModules(['Ink.Util.Json_1'], function (Json) {\n         var source = '{\"key\": \"value\", \"array\": [true, null, false]}';\n         Json.parse(source);  // The above JSON string as an object\n     });",
            "static": 1
        },
        "Ink.Util.String": {
            "name": "Ink.Util.String",
            "shortname": "Ink.Util.String",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.String_1",
            "namespace": "",
            "file": "Ink/Util/String/1/lib.js",
            "line": 10,
            "description": "String Manipulation Utilities",
            "version": "1",
            "static": 1
        },
        "Ink.Util.Url": {
            "name": "Ink.Util.Url",
            "shortname": "Ink.Util.Url",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.Url_1",
            "namespace": "",
            "file": "Ink/Util/Url/1/lib.js",
            "line": 10,
            "description": "Utility functions to use with URLs",
            "version": "1",
            "static": 1
        },
        "Ink.Util.Validator": {
            "name": "Ink.Util.Validator",
            "shortname": "Ink.Util.Validator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ink.Util.Validator_1",
            "namespace": "",
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 10,
            "description": "Set of functions to provide validation",
            "version": "1",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "Ink/1/lib.js",
            "line": 85,
            "description": "Get the path of a certain module by looking up the paths given in setPath (and ultimately the default Ink path)",
            "itemtype": "method",
            "name": "getPath",
            "params": [
                {
                    "name": "modName",
                    "description": "Name of the module you want the path of."
                },
                {
                    "name": "noLib",
                    "description": "Exclude the 'lib.js' filename"
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 119,
            "description": "Sets the URL path for a namespace. Use this to customize where\nrequireModules (and createModule) will load dependencies from.",
            "itemtype": "method",
            "name": "setPath",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "rootURI",
                    "description": ""
                }
            ],
            "example": [
                "\n     Ink.setPath('Ink', 'http://my-cdn/Ink/');\n     Ink.setPath('Lol', 'http://my-cdn/Lol/');\n\n     // Loads from http://my-cdn/Ink/Dom/Whatever/lib.js\n     Ink.requireModules(['Ink.Dom.Whatever'], function () { ... });\n     // Loads from http://my-cdn/Lol/Whatever/lib.js\n     Ink.requireModules(['Lol.Whatever'], function () { ... });"
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 144,
            "description": "Loads a script by creating a `<script>` tag in the `<head>` of the document.\n\nReports errors by listening to 'error' and 'readystatechange' events.",
            "itemtype": "method",
            "name": "loadScript",
            "params": [
                {
                    "name": "uri",
                    "description": "can be an http URI or an Ink module name, which gets resolved.",
                    "type": "String"
                },
                {
                    "name": "contentType",
                    "description": "the `type` attribute of the new script tag.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'text/javascript'"
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 195,
            "description": "defines a namespace.",
            "itemtype": "method",
            "name": "namespace",
            "params": [
                {
                    "name": "ns",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "returnParentAndKey",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "if returnParentAndKey, returns [parent, lastPart], otherwise return the namespace directly",
                "type": "Array|Object"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 226,
            "description": "synchronous. assumes module is loaded already!",
            "itemtype": "method",
            "name": "getModule",
            "params": [
                {
                    "name": "mod",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "version",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "module object / function",
                "type": "Object|Function"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 239,
            "description": "must be the wrapper around each Ink lib module for require resolution",
            "itemtype": "method",
            "name": "createModule",
            "params": [
                {
                    "name": "mod",
                    "description": "module name. parts are split with dots",
                    "type": "String"
                },
                {
                    "name": "version",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "deps",
                    "description": "array of module names which are dependencies for the module being created",
                    "type": "Array"
                },
                {
                    "name": "modFn",
                    "description": "its arguments are the resolved dependecies, once all of them are fetched. the body of this function should return the module.",
                    "type": "Function"
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 332,
            "description": "use this to get depencies, even if they're not loaded yet",
            "itemtype": "method",
            "name": "requireModules",
            "params": [
                {
                    "name": "deps",
                    "description": "array of module names which are dependencies for the require function body",
                    "type": "Array"
                },
                {
                    "name": "cbFn",
                    "description": "its arguments are the resolved dependecies, once all of them are fetched",
                    "type": "Function"
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 388,
            "description": "list or module names, ordered by loaded time",
            "itemtype": "method",
            "name": "getModulesLoadOrder",
            "return": {
                "description": "returns the order in which modules were resolved and correctly loaded",
                "type": "Array"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 398,
            "description": "returns the markup you should have to bundle your JS resources yourself",
            "return": {
                "description": "scripts markup",
                "type": "String"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 413,
            "description": "Creates an Ink.Ext module\n\nDoes exactly the same as createModule but creates the module in the Ink.Ext namespace",
            "itemtype": "method",
            "name": "createExt",
            "params": [
                {
                    "name": "moduleName",
                    "description": "Extension name",
                    "type": "String"
                },
                {
                    "name": "version",
                    "description": "Extension version",
                    "type": "String"
                },
                {
                    "name": "dependencies",
                    "description": "Extension dependencies",
                    "type": "Array"
                },
                {
                    "name": "modFn",
                    "description": "Function returning the extension",
                    "type": "Function"
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 428,
            "description": "Function.prototype.bind alternative.\nAdditional arguments will be sent to the original function as prefix arguments.\nSet \"context\" to `false` to preserve the original context of the function and just bind the arguments.",
            "itemtype": "method",
            "name": "bind",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 447,
            "description": "Function.prototype.bind alternative for binding class methods",
            "itemtype": "method",
            "name": "bindMethod",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "methodName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "example": [
                "\n // Build a function which calls Ink.Dom.Element.remove on an element.\n var removeMyElem = Ink.bindMethod(Ink.Dom.Element, 'remove', someElement);\n\n removeMyElem();  // no arguments, nor Ink.Dom.Element, needed",
                "\n // (comparison with using Ink.bind to the same effect).\n // The following two calls are equivalent\n\n Ink.bind(this.remove, this, myElem);\n Ink.bindMethod(this, 'remove', myElem);"
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 472,
            "description": "Function.prototype.bind alternative for event handlers.\nSame as bind but keeps first argument of the call the original event.\nAdditional arguments will be sent to the original function as prefix arguments.\nSet \"context\" to `false` to preserve the original context of the function and just bind the arguments.",
            "itemtype": "method",
            "name": "bindEvent",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 492,
            "description": "alias to document.getElementById",
            "itemtype": "method",
            "name": "i",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 508,
            "description": "alias to sizzle or querySelector",
            "itemtype": "method",
            "name": "s",
            "params": [
                {
                    "name": "rule",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "DOMElement",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 524,
            "description": "alias to sizzle or querySelectorAll",
            "itemtype": "method",
            "name": "ss",
            "params": [
                {
                    "name": "rule",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "DOMElement",
                    "optional": true
                }
            ],
            "return": {
                "description": "array of DOMElements",
                "type": "Array"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 540,
            "description": "Enriches the destination object with values from source object whenever the key is missing in destination.\n\nMore than one object can be passed as source, in which case the rightmost objects have precedence.",
            "itemtype": "method",
            "name": "extendObj",
            "params": [
                {
                    "name": "destination",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "sources",
                    "description": "",
                    "type": "Object..."
                }
            ],
            "return": {
                "description": "destination object, enriched with defaults from the sources"
            },
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 564,
            "description": "Calls console.log if available.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "args...",
                    "description": ""
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 578,
            "description": "Calls console.warn if available.",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "args...",
                    "description": ""
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/1/lib.js",
            "line": 592,
            "description": "Calls console.error if available.",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "args...",
                    "description": ""
                }
            ],
            "class": "Ink",
            "module": "Ink_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 24,
            "description": "True if the browser is Internet Explorer",
            "itemtype": "property",
            "name": "IE",
            "type": "{Boolean}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 34,
            "description": "True if the browser is Gecko based",
            "itemtype": "property",
            "name": "GECKO",
            "type": "{Boolean}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 44,
            "description": "True if the browser is Opera",
            "itemtype": "property",
            "name": "OPERA",
            "type": "{Boolean}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 54,
            "description": "True if the browser is Safari",
            "itemtype": "property",
            "name": "SAFARI",
            "type": "{Boolean}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 64,
            "description": "True if the browser is Konqueror",
            "itemtype": "property",
            "name": "KONQUEROR",
            "type": "{Boolean}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 74,
            "description": "True if browser is Chrome",
            "itemtype": "property",
            "name": "CHROME",
            "type": "{Boolean}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 84,
            "description": "The specific browser model. False if it is unavailable.",
            "itemtype": "property",
            "name": "model",
            "type": "{Boolean|String}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 94,
            "description": "The browser version. False if it is unavailable.",
            "itemtype": "property",
            "name": "version",
            "type": "{Boolean|String}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 104,
            "description": "The user agent string. False if it is unavailable.",
            "itemtype": "property",
            "name": "userAgent",
            "type": "{Boolean|String}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 114,
            "description": "Initialization function for the Browser object.\n\nIs called automatically when this module is loaded, and calls setDimensions, setBrowser and setReferrer.",
            "itemtype": "method",
            "name": "init",
            "access": "public",
            "tagname": "",
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 128,
            "description": "Retrieves and stores window dimensions in this object. Called automatically when this module is loaded.",
            "itemtype": "method",
            "name": "setDimensions",
            "access": "public",
            "tagname": "",
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 152,
            "description": "Stores the referrer. Called automatically when this module is loaded.",
            "itemtype": "method",
            "name": "setReferrer",
            "access": "public",
            "tagname": "",
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 166,
            "description": "Detects the browser and stores the found properties. Called automatically when this module is loaded.",
            "itemtype": "method",
            "name": "detectBrowser",
            "access": "public",
            "tagname": "",
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Browser/1/lib.js",
            "line": 250,
            "description": "Debug function which displays browser (and Ink.Dom.Browser) information as an alert message.",
            "itemtype": "method",
            "name": "debug",
            "access": "public",
            "tagname": "",
            "example": [
                "\n \n The following code\n\n     Ink.requireModules(['Ink.Dom.Browser_1'], function (Browser) {\n         Browser.debug();\n     });\n\n Alerts (On Firefox 22):\n\n     known browsers: (ie, gecko, opera, safari, konqueror) \n     false,true,false,false,false\n     model -> firefox\n     version -> 22.0\n     \n     original UA -> Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:22.0) Gecko/20100101 Firefox/22.0"
            ],
            "class": "Ink.Dom.Browser",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 1,
            "author": "inkdev AT sapo.pt",
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Browser_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 22,
            "description": "adds or removes a class to the given element according to addRemState",
            "itemtype": "method",
            "name": "addRemoveClassName",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|string"
                },
                {
                    "name": "className",
                    "description": "class name to add or remove.",
                    "type": "String"
                },
                {
                    "name": "addRemState",
                    "description": "Whether to add or remove. `true` to add, `false` to remove.",
                    "type": "Boolean"
                }
            ],
            "example": [
                "\n     Ink.requireModules(['Ink.Dom.Css_1'], function (Css) {\n         Css.addRemoveClassName(myElm, 'classss', true);  // Adds the `classss` class.\n         Css.addRemoveClassName(myElm, 'classss', false);  // Removes the `classss` class.\n     });"
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 43,
            "description": "add a class to a given element",
            "itemtype": "method",
            "name": "addClassName",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 66,
            "description": "removes a class from a given element",
            "itemtype": "method",
            "name": "removeClassName",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 98,
            "description": "Alias to addRemoveClassName. Utility function, saves many if/elses.",
            "itemtype": "method",
            "name": "setClassName",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "add",
                    "description": "true to add, false to remove",
                    "type": "Boolean"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 110,
            "itemtype": "method",
            "name": "hasClassName",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "classNames",
                    "description": "classNames to test",
                    "type": "String|Array"
                },
                {
                    "name": "all",
                    "description": "if true, return whether all classes in classNames are there. Otherwise, return true if any is present.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "true if a given class is applied to a given element",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 152,
            "description": "Add and removes the class from the element with a timeout, so it blinks",
            "itemtype": "method",
            "name": "blinkClass",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "className",
                    "description": "class name",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "timeout in ms between adding and removing, default 100 ms",
                    "type": "Boolean"
                },
                {
                    "name": "negate",
                    "description": "is true, class is removed then added",
                    "type": "Boolean"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 169,
            "description": "Add or remove a class name from a given element",
            "itemtype": "method",
            "name": "toggleClassName",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "className",
                    "description": "class name",
                    "type": "String"
                },
                {
                    "name": "forceAdd",
                    "description": "forces the addition of the class if it doesn't exists",
                    "type": "Boolean"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 204,
            "description": "sets the opacity of given client a given element",
            "itemtype": "method",
            "name": "setOpacity",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "value",
                    "description": "allows 0 to 1(default mode decimal) or percentage (warning using 0 or 1 will reset to default mode)",
                    "type": "Number"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 232,
            "description": "Converts a css property name to a string in camelcase to be used with CSSStyleDeclaration.",
            "itemtype": "method",
            "name": "_camelCase",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "str",
                    "description": "String to convert",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Converted string",
                "type": "String"
            },
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 246,
            "description": "Gets the value for an element's style attribute",
            "itemtype": "method",
            "name": "getStyle",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "style",
                    "description": "Which css attribute to fetch",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Style value"
            },
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 287,
            "description": "Adds CSS rules to an element's style attribute.",
            "itemtype": "method",
            "name": "setStyle",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "style",
                    "description": "Which css attribute to set",
                    "type": "String"
                }
            ],
            "example": [
                "\n    <a href=\"#\" class=\"change-color\">Change his color</a>\n    <p class=\"him\">\"He\" is me</p>\n    <script type=\"text/javascript\">\n        Ink.requireModules(['Ink.Dom.Css_1', 'Ink.Dom.Event_1', 'Ink.Dom.Selector_1'], function (Css, InkEvent, Selector) {\n            var btn = Selector.select('.change-color')[0];\n            var other = Selector.select('.him')[0];\n            InkEvent.observe(btn, 'click', function () {\n                Css.setStyle(other, 'background-color: black');\n                Css.setStyle(other, 'color: white');\n            });\n        });\n    </script>\n"
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 341,
            "description": "Makes an element visible",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "forceDisplayProperty",
                    "description": "Css display property to apply on show",
                    "type": "String"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 355,
            "description": "Hides an element",
            "itemtype": "method",
            "name": "hide",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 368,
            "description": "shows or hides according to param show",
            "itemtype": "method",
            "name": "showHide",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "show",
                    "description": "Whether to show or hide `elm`.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 382,
            "description": "Shows or hides an element depending on current state",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM element or element id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "forceShow",
                    "description": "Forces showing if element is hidden",
                    "type": "Boolean"
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 421,
            "description": "Adds css style tags to the head section of a page",
            "itemtype": "method",
            "name": "appendStyleTag",
            "params": [
                {
                    "name": "selector",
                    "description": "The css selector for the rule",
                    "type": "String"
                },
                {
                    "name": "style",
                    "description": "The content of the style rule",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options for the tag",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "file type",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "force",
                            "description": "if true, style tag will be appended to end of head",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 475,
            "description": "Adds a link tag for a stylesheet to the head section of a page",
            "itemtype": "method",
            "name": "appendStylesheet",
            "params": [
                {
                    "name": "path",
                    "description": "File path",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options for the tag",
                    "type": "Object",
                    "props": [
                        {
                            "name": "media",
                            "description": "media type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'screen'"
                        },
                        {
                            "name": "type",
                            "description": "file type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'text/css'"
                        },
                        {
                            "name": "force",
                            "description": "if true, tag will be appended to end of head",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 512,
            "description": "Loads CSS via LINK element inclusion in HEAD (skips append if already there)\n\nWorks similarly to appendStylesheet but:\n  a) supports all browsers;\n  b) supports optional callback which gets invoked once the CSS has been applied",
            "itemtype": "method",
            "name": "appendStylesheetCb",
            "params": [
                {
                    "name": "cssURI",
                    "description": "URI of the CSS to load, if empty ignores and just calls back directly",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "optional callback which will be called once the CSS is loaded",
                    "type": "Function(cssURI)",
                    "optional": true
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 578,
            "description": "Converts decimal to hexadecimal values, for use with colors",
            "itemtype": "method",
            "name": "decToHex",
            "params": [
                {
                    "name": "dec",
                    "description": "Either a single decimal value,\nan rgb(r, g, b) string or an Object with r, g and b properties",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Hexadecimal value"
            },
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 615,
            "description": "Converts hexadecimal values to decimal, for use with colors",
            "itemtype": "method",
            "name": "hexToDec",
            "params": [
                {
                    "name": "hex",
                    "description": "hexadecimal value with 6, 3, 2 or 1 characters",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Object with properties r, g, b if length of number is >= 3 or decimal value instead.",
                "type": "Number"
            },
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 645,
            "description": "use this to obtain the value of a CSS property (searched from loaded CSS documents)",
            "itemtype": "method",
            "name": "getPropertyFromStylesheet",
            "params": [
                {
                    "name": "selector",
                    "description": "a CSS rule. must be an exact match",
                    "type": "String"
                },
                {
                    "name": "property",
                    "description": "a CSS property",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value of the found property, or null if it wasn't matched",
                "type": "String"
            },
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Css/1/lib.js",
            "line": 800,
            "description": "Changes the font size of the elements which match the given CSS rule\nFor this function to work, the CSS file must be in the same domain than the host page, otherwise JS can't access it.",
            "itemtype": "method",
            "name": "changeFontSize",
            "params": [
                {
                    "name": "selector",
                    "description": "CSS selector rule",
                    "type": "String"
                },
                {
                    "name": "delta",
                    "description": "number of pixels to change on font-size",
                    "type": "Number"
                },
                {
                    "name": "op",
                    "description": "supported operations are '+' and '*'. defaults to '+'",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "minVal",
                    "description": "if result gets smaller than minVal, change does not occurr",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "maxVal",
                    "description": "if result gets bigger  than maxVal, change does not occurr",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "Ink.Dom.Css",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1,
            "author": "inkdev AT sapo.pt",
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Css_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 40,
            "description": "Shortcut for `document.getElementById`",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "elm",
                    "description": "Either an ID of an element, or an element.",
                    "type": "String|DOMElement"
                }
            ],
            "return": {
                "description": "The DOM element with the given id or null when it was not found",
                "type": "DOMElement|null"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 57,
            "description": "Creates a DOM element",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "tag",
                    "description": "tag name",
                    "type": "String"
                },
                {
                    "name": "properties",
                    "description": "object with properties to be set on the element. You can also call other functions in Ink.Dom.Element like this",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\n     var myPanel = InkElement.create('div', {\n         appendHTML: '<span></span>',\n         className: 'classes to add',\n         insertAfter: anotherPane\n     };\n\n     myPanel.innerHTML;  // -> '<div class=\"classes to add\"><span></span></div>\n     myPanel.parentNode;  // -> anotherPane"
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 94,
            "description": "Removes a DOM Element from the DOM",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "elm",
                    "description": "The element to remove",
                    "type": "DOMElement"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 107,
            "description": "Scrolls the window to an element",
            "itemtype": "method",
            "name": "scrollTo",
            "params": [
                {
                    "name": "elm",
                    "description": "Element where to scroll",
                    "type": "DOMElement|String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 136,
            "description": "Gets the top cumulative offset for an element\n\nRequires Ink.Dom.Browser",
            "itemtype": "method",
            "name": "offsetTop",
            "params": [
                {
                    "name": "elm",
                    "description": "target element",
                    "type": "DOMElement|String"
                }
            ],
            "return": {
                "description": "Offset from the target element to the top of the document",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 149,
            "description": "Gets the left cumulative offset for an element\n\nRequires Ink.Dom.Browser",
            "itemtype": "method",
            "name": "offsetLeft",
            "params": [
                {
                    "name": "elm",
                    "description": "target element",
                    "type": "DOMElement|String"
                }
            ],
            "return": {
                "description": "Offset from the target element to the left of the document",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 162,
            "description": "Gets the element offset relative to its closest positioned ancestor",
            "itemtype": "method",
            "name": "positionedOffset",
            "params": [
                {
                    "name": "elm",
                    "description": "target element",
                    "type": "DOMElement|String"
                }
            ],
            "return": {
                "description": "Array with the element offsetleft and offsettop relative to the closest positioned ancestor",
                "type": "Array"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 193,
            "description": "Gets the cumulative offset for an element\n\nReturns the top left position of the element on the page\n\nRequires Ink.Dom.Browser",
            "itemtype": "method",
            "name": "offset",
            "params": [
                {
                    "name": "elm",
                    "description": "Target element",
                    "type": "DOMElement|String"
                }
            ],
            "return": {
                "description": "Array with pixel distance from the target element to the top left corner of the document",
                "type": "[Number, Number]"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 222,
            "description": "Gets the scroll of the element",
            "itemtype": "method",
            "name": "scroll",
            "params": [
                {
                    "name": "elm",
                    "description": "target element or document.body",
                    "type": "DOMElement|String",
                    "optional": true
                }
            ],
            "return": {
                "description": "offset values for x and y scroll",
                "type": "Array"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 254,
            "description": "Alias for offset()",
            "itemtype": "method",
            "name": "offset2",
            "deprecated": true,
            "deprecationMessage": "Kept for historic reasons. Use offset() instead.",
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 264,
            "description": "Verifies the existence of an attribute",
            "itemtype": "method",
            "name": "hasAttribute",
            "params": [
                {
                    "name": "elm",
                    "description": "target element",
                    "type": "Object"
                },
                {
                    "name": "attr",
                    "description": "attribute name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Boolean based on existance of attribute",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 275,
            "description": "Inserts a element immediately after a target element",
            "itemtype": "method",
            "name": "insertAfter",
            "params": [
                {
                    "name": "newElm",
                    "description": "element to be inserted",
                    "type": "DOMElement"
                },
                {
                    "name": "targetElm",
                    "description": "key element",
                    "type": "DOMElement|String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 293,
            "description": "Inserts an element before a target element",
            "itemtype": "method",
            "name": "insertBefore",
            "params": [
                {
                    "name": "newElm",
                    "description": "element to be inserted",
                    "type": "DOMElement"
                },
                {
                    "name": "targetElm",
                    "description": "key element",
                    "type": "DOMElement|String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 307,
            "description": "Inserts a element at the top of the childNodes of a target element",
            "itemtype": "method",
            "name": "insertTop",
            "params": [
                {
                    "name": "newElm",
                    "description": "element to be inserted",
                    "type": "DOMElement"
                },
                {
                    "name": "targetElm",
                    "description": "key element",
                    "type": "DOMElement|String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 325,
            "description": "Inserts an element after all the child nodes of another element",
            "itemtype": "method",
            "name": "insertBottom",
            "params": [
                {
                    "name": "newElm",
                    "description": "element to be inserted",
                    "type": "DOMElement"
                },
                {
                    "name": "targetElm",
                    "description": "key element",
                    "type": "DOMElement|String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 337,
            "description": "Retrieves textContent from node",
            "itemtype": "method",
            "name": "innerText",
            "params": [
                {
                    "name": "node",
                    "description": "from which to retreive text from. Can be any node type.",
                    "type": "DOMNode"
                }
            ],
            "return": {
                "description": "the text",
                "type": "String"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 384,
            "description": "Removes all nodes children and adds the text",
            "itemtype": "method",
            "name": "setTextContent",
            "params": [
                {
                    "name": "node",
                    "description": "node to add the text to. Can be any node type.",
                    "type": "DOMNode"
                },
                {
                    "name": "text",
                    "description": "text to be appended to the node.",
                    "type": "String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 424,
            "description": "Tells if element is a clickable link",
            "itemtype": "method",
            "name": "isLink",
            "params": [
                {
                    "name": "node",
                    "description": "node to check if it's link",
                    "type": "DOMNode"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 437,
            "description": "Tells if ancestor is ancestor of node",
            "itemtype": "method",
            "name": "isAncestorOf",
            "params": [
                {
                    "name": "ancestor",
                    "description": "ancestor node",
                    "type": "DOMNode"
                },
                {
                    "name": "node",
                    "description": "descendant node",
                    "type": "DOMNode"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 461,
            "description": "Tells if descendant is descendant of node",
            "itemtype": "method",
            "name": "descendantOf",
            "params": [
                {
                    "name": "node",
                    "description": "the ancestor",
                    "type": "DOMNode"
                },
                {
                    "name": "descendant",
                    "description": "the descendant",
                    "type": "DOMNode"
                }
            ],
            "return": {
                "description": "true if 'descendant' is descendant of 'node'",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 473,
            "description": "Get first child in document order of node type 1",
            "itemtype": "method",
            "name": "firstElementChild",
            "params": [
                {
                    "name": "elm",
                    "description": "parent node",
                    "type": "DOMNode"
                }
            ],
            "return": {
                "description": "the element child",
                "type": "DOMNode"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 493,
            "description": "Get last child in document order of node type 1",
            "itemtype": "method",
            "name": "lastElementChild",
            "params": [
                {
                    "name": "elm",
                    "description": "parent node",
                    "type": "DOMNode"
                }
            ],
            "return": {
                "description": "the element child",
                "type": "DOMNode"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 513,
            "description": "Get the first element sibling after the node",
            "itemtype": "method",
            "name": "nextElementSibling",
            "params": [
                {
                    "name": "node",
                    "description": "current node",
                    "type": "DOMNode"
                }
            ],
            "return": {
                "description": "the first element sibling after node or null if none is found",
                "type": "DOMNode|Null"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 539,
            "description": "Get the first element sibling before the node",
            "itemtype": "method",
            "name": "previousElementSibling",
            "params": [
                {
                    "name": "node",
                    "description": "current node",
                    "type": "DOMNode"
                }
            ],
            "return": {
                "description": "the first element sibling before node or null if none is found",
                "type": "DOMNode|Null"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 565,
            "description": "Returns the width of the given element, in pixels",
            "itemtype": "method",
            "name": "elementWidth",
            "params": [
                {
                    "name": "element",
                    "description": "target DOM element or target ID",
                    "type": "DOMElement|string"
                }
            ],
            "return": {
                "description": "the element's width",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 579,
            "description": "Returns the height of the given element, in pixels",
            "itemtype": "method",
            "name": "elementHeight",
            "params": [
                {
                    "name": "element",
                    "description": "target DOM element or target ID",
                    "type": "DOMElement|string"
                }
            ],
            "return": {
                "description": "the element's height",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 593,
            "description": "Returns the element's left position in pixels",
            "itemtype": "method",
            "name": "elementLeft",
            "params": [
                {
                    "name": "element",
                    "description": "target DOM element or target ID",
                    "type": "DOMElement|string"
                }
            ],
            "return": {
                "description": "element's left position",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 607,
            "description": "Returns the element's top position in pixels",
            "itemtype": "method",
            "name": "elementTop",
            "params": [
                {
                    "name": "element",
                    "description": "target DOM element or target ID",
                    "type": "DOMElement|string"
                }
            ],
            "return": {
                "description": "element's top position",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 621,
            "description": "Returns the dimensions of the given element, in pixels",
            "itemtype": "method",
            "name": "elementDimensions",
            "params": [
                {
                    "name": "element",
                    "description": "target element",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "array with element's width and height",
                "type": "Array"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 633,
            "description": "Returns the outer (width + margin + padding included) dimensions of an element, in pixels.\n\nRequires Ink.Dom.Css",
            "itemtype": "method",
            "name": "outerDimensions",
            "params": [
                {
                    "name": "element",
                    "description": "Target element",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "Array with element width and height.",
                "type": "Array"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 654,
            "description": "Check whether an element is inside the viewport",
            "itemtype": "method",
            "name": "inViewport",
            "params": [
                {
                    "name": "element",
                    "description": "Element to check",
                    "type": "DOMElement"
                },
                {
                    "name": "partial",
                    "description": "Return `true` even if it is only partially visible.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 677,
            "description": "Check whether an element is hidden \nTaken from Mootools Element extras ( https://gist.github.com/cheeaun/73342 )\nDoes not take into account visibility:hidden",
            "itemtype": "method",
            "name": "isHidden",
            "params": [
                {
                    "name": "element",
                    "description": "Element to check",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 698,
            "description": "Check whether an element is visible",
            "itemtype": "method",
            "name": "isVisible",
            "params": [
                {
                    "name": "element",
                    "description": "Element to check",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 710,
            "description": "Applies the cloneFrom's dimensions to cloneTo",
            "itemtype": "method",
            "name": "clonePosition",
            "params": [
                {
                    "name": "cloneTo",
                    "description": "element to be position cloned",
                    "type": "DOMElement"
                },
                {
                    "name": "cloneFrom",
                    "description": "element to get the cloned position",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "the element with positionClone",
                "type": "DOMElement"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 726,
            "description": "Slices off a piece of text at the end of the element and adds the ellipsis\nso all text fits in the element.",
            "itemtype": "method",
            "name": "ellipsizeText",
            "params": [
                {
                    "name": "element",
                    "description": "which text is to add the ellipsis",
                    "type": "DOMElement"
                },
                {
                    "name": "ellipsis",
                    "description": "String to append to the chopped text",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'\\u2026'"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 743,
            "description": "Searches up the DOM tree for an element fulfilling the boolTest function (returning trueish)",
            "itemtype": "method",
            "name": "findUpwardsHaving",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HtmlElement"
                },
                {
                    "name": "boolTest",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "the matched element or false if did not match",
                "type": "HtmlElement|false"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 761,
            "description": "Śearches up the DOM tree for an element of specified class name",
            "itemtype": "method",
            "name": "findUpwardsByClass",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HtmlElement"
                },
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the matched element or false if did not match",
                "type": "HtmlElement|false"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 778,
            "description": "Śearches up the DOM tree for an element of specified tag",
            "itemtype": "method",
            "name": "findUpwardsByTag",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HtmlElement"
                },
                {
                    "name": "tag",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the matched element or false if did not match",
                "type": "HtmlElement|false"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 794,
            "description": "Śearches up the DOM tree for an element of specified id",
            "itemtype": "method",
            "name": "findUpwardsById",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HtmlElement"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the matched element or false if did not match",
                "type": "HtmlElement|false"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 809,
            "description": "Śearches up the DOM tree for an element matching the given selector",
            "itemtype": "method",
            "name": "findUpwardsBySelector",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HtmlElement"
                },
                {
                    "name": "sel",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the matched element or false if did not match",
                "type": "HtmlElement|false"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 828,
            "description": "Returns trimmed text content of descendants",
            "itemtype": "method",
            "name": "getChildrenText",
            "params": [
                {
                    "name": "el",
                    "description": "element being seeked",
                    "type": "DOMElement"
                },
                {
                    "name": "removeIt",
                    "description": "whether to remove the found text nodes or not",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "text found",
                "type": "String"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 864,
            "description": "String trim implementation\nUsed by getChildrenText\n\nfunction _trimString\nparam {String} text\nreturn {String} trimmed text",
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 876,
            "description": "Returns the values of a select element",
            "itemtype": "method",
            "name": "getSelectValues",
            "params": [
                {
                    "name": "select",
                    "description": "element",
                    "type": "DomElement|String"
                }
            ],
            "return": {
                "description": "selected values",
                "type": "Array"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 911,
            "description": "Fills select element with choices",
            "itemtype": "method",
            "name": "fillSelect",
            "params": [
                {
                    "name": "container",
                    "description": "select element which will get filled",
                    "type": "DomElement|String"
                },
                {
                    "name": "data",
                    "description": "data which will populate the component",
                    "type": "Array"
                },
                {
                    "name": "skipEmpty",
                    "description": "true to skip empty option",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "defaultValue",
                    "description": "primitive value to select at beginning",
                    "type": "String|Number",
                    "optional": true
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 955,
            "description": "Select element on steroids - allows the creation of new values",
            "itemtype": "method",
            "name": "fillSelect2",
            "params": [
                {
                    "name": "ctn",
                    "description": "select element which will get filled",
                    "type": "DomElement|String"
                },
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "data",
                            "description": "data which will populate the component",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "skipEmpty",
                            "description": "if true empty option is not created (defaults to false)",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "emptyLabel",
                            "description": "label to display on empty option",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "createLabel",
                            "description": "label to display on create option",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "optionsGroupLabel",
                            "description": "text to display on group surrounding value options",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "defaultValue",
                            "description": "option to select initially",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "onCreate",
                            "description": "callback that gets called once user selects the create option",
                            "type": "Function(selEl, addOptFn)",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1057,
            "description": "Creates set of radio buttons, returns wrapper",
            "itemtype": "method",
            "name": "fillRadios",
            "params": [
                {
                    "name": "insertAfterEl",
                    "description": "element which will precede the input elements",
                    "type": "DomElement|String"
                },
                {
                    "name": "name",
                    "description": "name to give to the form field ([] is added if not as suffix already)",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "data which will populate the component",
                    "type": "Array"
                },
                {
                    "name": "skipEmpty",
                    "description": "true to skip empty option",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "defaultValue",
                    "description": "primitive value to select at beginning",
                    "type": "String|Number",
                    "optional": true
                },
                {
                    "name": "splitEl",
                    "description": "name of element to add after each input element (example: 'br')",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "wrapper element around radio buttons",
                "type": "DOMElement"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1120,
            "description": "Creates set of checkbox buttons, returns wrapper",
            "itemtype": "method",
            "name": "fillChecks",
            "params": [
                {
                    "name": "insertAfterEl",
                    "description": "element which will precede the input elements",
                    "type": "DomElement|String"
                },
                {
                    "name": "name",
                    "description": "name to give to the form field ([] is added if not as suffix already)",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "data which will populate the component",
                    "type": "Array"
                },
                {
                    "name": "skipEmpty",
                    "description": "true to skip empty option",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "defaultValue",
                    "description": "primitive value to select at beginning",
                    "type": "String|Number",
                    "optional": true
                },
                {
                    "name": "splitEl",
                    "description": "name of element to add after each input element (example: 'br')",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "wrapper element around checkboxes",
                "type": "DOMElement"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1173,
            "description": "Returns index of element from parent, -1 if not child of parent...",
            "itemtype": "method",
            "name": "parentIndexOf",
            "params": [
                {
                    "name": "parentEl",
                    "description": "Element to parse",
                    "type": "DOMElement"
                },
                {
                    "name": "childEl",
                    "description": "Child Element to look for",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1194,
            "description": "Returns an array of elements - the next siblings",
            "itemtype": "method",
            "name": "nextSiblings",
            "params": [
                {
                    "name": "elm",
                    "description": "element",
                    "type": "String|DomElement"
                }
            ],
            "return": {
                "description": "Array of next sibling elements",
                "type": "Array"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1220,
            "description": "Returns an array of elements - the previous siblings",
            "itemtype": "method",
            "name": "previousSiblings",
            "params": [
                {
                    "name": "elm",
                    "description": "element",
                    "type": "String|DomElement"
                }
            ],
            "return": {
                "description": "Array of previous sibling elements",
                "type": "Array"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1246,
            "description": "Returns an array of elements - its siblings",
            "itemtype": "method",
            "name": "siblings",
            "params": [
                {
                    "name": "elm",
                    "description": "element",
                    "type": "String|DomElement"
                }
            ],
            "return": {
                "description": "Array of sibling elements",
                "type": "Array"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1272,
            "description": "fallback to elem.childElementCount",
            "itemtype": "method",
            "name": "childElementCount",
            "params": [
                {
                    "name": "elm",
                    "description": "element",
                    "type": "String|DomElement"
                }
            ],
            "return": {
                "description": "number of child elements",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1316,
            "description": "Gets a wrapper DIV with a certain HTML content for being inserted in `elm`.\nNecessary for appendHTML,prependHTML functions, because they need a container element to copy the children from.\n\nWorks around IE table quirks",
            "itemtype": "method",
            "name": "_getWrapper",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "elm",
                    "description": ""
                },
                {
                    "name": "html",
                    "description": ""
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1351,
            "description": "parses and appends an html string to a container, not destroying its contents",
            "itemtype": "method",
            "name": "appendHTML",
            "params": [
                {
                    "name": "elm",
                    "description": "element",
                    "type": "String|DomElement"
                },
                {
                    "name": "html",
                    "description": "markup string",
                    "type": "String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1365,
            "description": "parses and prepends an html string to a container, not destroying its contents",
            "itemtype": "method",
            "name": "prependHTML",
            "params": [
                {
                    "name": "elm",
                    "description": "element",
                    "type": "String|DomElement"
                },
                {
                    "name": "html",
                    "description": "markup string",
                    "type": "String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1379,
            "description": "sets the Inner HTML of an element to the given HTML string",
            "itemtype": "method",
            "name": "setHTML",
            "params": [
                {
                    "name": "elm",
                    "description": "element",
                    "type": "String|DomElement"
                },
                {
                    "name": "html",
                    "description": "markup string",
                    "type": "String"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1398,
            "description": "Wraps an element inside a container.\n\nThe container may or may not be in the document yet.",
            "itemtype": "method",
            "name": "wrap",
            "params": [
                {
                    "name": "target",
                    "description": "Element to be wrapped",
                    "type": "String|DomElement"
                },
                {
                    "name": "container",
                    "description": "Element to wrap the target",
                    "type": "String|DomElement"
                }
            ],
            "return": {
                "description": "Container element"
            },
            "example": [
                "\nbefore:\n\n    <div id=\"target\"></div>\n\ncall this function to wrap #target with a wrapper div.\n\n    InkElement.wrap('target', InkElement.create('div', {id: 'container'});\n\nafter: \n\n    <div id=\"container\"><div id=\"target\"></div></div>"
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1439,
            "description": "Pulls an element out of its wrapper.",
            "itemtype": "method",
            "name": "unwrap",
            "params": [
                {
                    "name": "elem",
                    "description": "The element you're trying to unwrap. This should be a child of the wrapper."
                },
                {
                    "name": "wrapperSelector",
                    "description": "Use this if you want to find your wrapper (if `elem` is inside several layers of wrappers).",
                    "type": "String",
                    "optional": true
                }
            ],
            "example": [
                "\n\nWhen you have this:\n\n     <div id=\"wrapper\">\n         <div id=\"unwrapMe\"></div>\n     </div>\n\nIf you do this:\n\n     InkElement.unwrap('unwrapMe');\n\nYou get this:\n\n     <div id=\"unwrapMe\"></div>\n     <div id=\"wrapper\"></div>\n     "
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1477,
            "description": "Replaces an element with another.",
            "itemtype": "method",
            "name": "replace",
            "params": [
                {
                    "name": "element",
                    "description": "The element to be replaced."
                },
                {
                    "name": "replacement",
                    "description": "The new element."
                }
            ],
            "example": [
                "\n      var newelement1 = InkElement.create('div');\n      // ...\n      replace(Ink.i('element1'), newelement1);"
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1494,
            "description": "Removes direct children on type text.\nUseful to remove nasty layout gaps generated by whitespace on the markup.",
            "itemtype": "method",
            "name": "removeTextNodeChildren",
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "DOMElement"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1514,
            "description": "Pass an HTML string and receive a documentFragment with the corresponding elements",
            "itemtype": "method",
            "name": "htmlToFragment",
            "params": [
                {
                    "name": "html",
                    "description": "html string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "DocumentFragment containing all of the elements from the html string",
                "type": "DocumentFragment"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1557,
            "description": "Gets all of the data attributes from an element",
            "itemtype": "method",
            "name": "data",
            "params": [
                {
                    "name": "selector",
                    "description": "Element or CSS selector",
                    "type": "String|DomElement"
                }
            ],
            "return": {
                "description": "Object with the data-* properties. If no data-attributes are present, an empty object is returned.",
                "type": "Object"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1603,
            "itemtype": "method",
            "name": "moveCursorTo",
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "Input|Textarea"
                },
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1622,
            "itemtype": "method",
            "name": "pageWidth",
            "return": {
                "description": "page width",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1658,
            "itemtype": "method",
            "name": "pageHeight",
            "return": {
                "description": "page height",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1690,
            "itemtype": "method",
            "name": "viewportWidth",
            "return": {
                "description": "viewport width in pixels",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1703,
            "itemtype": "method",
            "name": "viewportHeight",
            "return": {
                "description": "viewport height",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1716,
            "itemtype": "method",
            "name": "scrollWidth",
            "return": {
                "description": "scroll width",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Element/1/lib.js",
            "line": 1730,
            "itemtype": "method",
            "name": "scrollHeight",
            "return": {
                "description": "scroll height",
                "type": "Number"
            },
            "class": "Ink.Dom.Element",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1,
            "author": "inkdev AT sapo.pt",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 259,
            "description": "Bean maintains an internal registry for event listeners. We don't touch elements, objects\nor functions to identify them, instead we store everything in the registry.\nEach event listener has a RegEntry object, we have one 'registry' for the whole instance.",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 556,
            "description": "Public API: off(), on(), add(), (remove()), one(), fire(), clone()",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 560,
            "description": "off(element[, eventType(s)[, handler ]])",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 595,
            "description": "on(element, eventType(s)[, selector], handler[, args ])",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 649,
            "description": "add(element[, selector], eventType(s), handler[, args ])\n\nDeprecated: kept (for now) for backward-compatibility",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 663,
            "description": "one(element, eventType(s)[, selector], handler[, args ])",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 670,
            "description": "fire(element, eventType(s)[, args ])\n\nThe optional 'args' argument must be an array, if no 'args' argument is provided\nthen we can use the browser's DOM event system, otherwise we trigger handlers manually",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 700,
            "description": "clone(dstElement, srcElement[, eventType ])\n\nTODO: perhaps for consistency we should allow the same flexibility in type specifiers?",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 757,
            "description": "Keep this declaration here and off Bean as it extends the Event\nobject and some properties are readonly in strict mode",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 763,
            "description": "Instantiate browser native events array",
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Element_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 792,
            "description": "Returns a function which calls `func`, waiting at least `wait`\nmilliseconds between calls. This is useful for events such as `scroll`\nor `resize`, which can be triggered too many times per second, slowing\ndown the browser with needless function calls.\n\n*note:* This does not delay the first function call to the function.",
            "itemtype": "method",
            "name": "throttle",
            "params": [
                {
                    "name": "func",
                    "description": "Function to call. Arguments and context are both passed.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "Milliseconds to wait between calls.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "example": [
                "\n \nSuppose you are observing the `scroll` event, but your application is lagging because `scroll` is triggered too many times.\n\n    // BEFORE\n    InkEvent.observe(window, 'scroll', function () {\n        ...\n    }); // When scrolling on mobile devices or on firefox's smooth scroll\n        // this is expensive because onscroll is called many times\n\n    // AFTER\n    InkEvent.observe(window, 'scroll', InkEvent.throttle(function () {\n        ...\n    }, 100)); // The event handler is called only every 100ms. Problem solved.",
                "\n    var handler = InkEvent.throttle(function () {\n        ...\n    }, 100);\n\n    InkEvent.observe(window, 'scroll', handler);\n    InkEvent.observe(window, 'resize', handler);\n\n    // on resize, both the \"scroll\" and the \"resize\" events are triggered\n    // a LOT of times. This prevents both of them being called a lot of\n    // times when the window is being resized by a user.\n"
            ],
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 856,
            "description": "Returns the target of the event object",
            "itemtype": "method",
            "name": "element",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The target",
                "type": "Node"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 876,
            "description": "Returns the related target of the event object",
            "itemtype": "method",
            "name": "relatedTarget",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The related target",
                "type": "Node"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 894,
            "description": "Navigate up the DOM tree, looking for a tag with the name `elmTagName`.\n\nIf such tag is not found, `document` is returned.",
            "itemtype": "method",
            "name": "findElement",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                },
                {
                    "name": "elmTagName",
                    "description": "tag name to find",
                    "type": "String"
                },
                {
                    "name": "force",
                    "description": "If this is true, never return `document`, and returns `false` instead.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "the first element which matches given tag name or the document element if the wanted tag is not found",
                "type": "DOMElement"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 927,
            "description": "Attaches an event to element",
            "itemtype": "method",
            "name": "observe",
            "params": [
                {
                    "name": "element",
                    "description": "Element id or element",
                    "type": "DOMElement|String"
                },
                {
                    "name": "eventName",
                    "description": "Event name",
                    "type": "String"
                },
                {
                    "name": "callBack",
                    "description": "Receives event object as a\nparameter. If you're manually firing custom events, check the\neventName property of the event object to make sure you're handling\nthe right event.",
                    "type": "Function"
                },
                {
                    "name": "useCapture",
                    "description": "Set to true to change event listening from bubbling to capture.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The event handler used. Hang on to this if you want to `stopObserving` later.",
                "type": "Function"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 952,
            "description": "Like observe, but listen to the event only once.",
            "itemtype": "method",
            "name": "observeOnce",
            "params": [
                {
                    "name": "element",
                    "description": "Element id or element",
                    "type": "DOMElement|String"
                },
                {
                    "name": "eventName",
                    "description": "Event name",
                    "type": "String"
                },
                {
                    "name": "callBack",
                    "description": "Receives event object as a\nparameter. If you're manually firing custom events, check the\neventName property of the event object to make sure you're handling\nthe right event.",
                    "type": "Function"
                },
                {
                    "name": "useCapture",
                    "description": "Set to true to change event listening from bubbling to capture.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The event handler used. Hang on to this if you want to `stopObserving` later.",
                "type": "Function"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 973,
            "description": "Attaches an event to a selector or array of elements.\n\nRequires Ink.Dom.Selector",
            "itemtype": "method",
            "name": "observeMulti",
            "params": [
                {
                    "name": "elements",
                    "description": "",
                    "type": "Array|String"
                },
                {
                    "name": "...",
                    "description": "See the `observe` function."
                }
            ],
            "return": {
                "description": "The used callback.",
                "type": "Function"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 997,
            "description": "Observe an event on the given element and every children which matches the selector string (if provided).\n\nRequires Ink.Dom.Selector if you need to use a selector.",
            "itemtype": "method",
            "name": "observeDelegated",
            "params": [
                {
                    "name": "element",
                    "description": "Element to observe.",
                    "type": "DOMElement|String"
                },
                {
                    "name": "eventName",
                    "description": "Event name to observe.",
                    "type": "String"
                },
                {
                    "name": "selector",
                    "description": "Child element selector. When null, finds any element.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback to be called when the event is fired",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The used callback, for ceasing to listen to the event later.",
                "type": "Function"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1027,
            "description": "Remove an event attached to an element",
            "itemtype": "method",
            "name": "stopObserving",
            "params": [
                {
                    "name": "element",
                    "description": "element id or element",
                    "type": "DOMElement|String"
                },
                {
                    "name": "eventName",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "callBack",
                    "description": "callback function",
                    "type": "Function"
                },
                {
                    "name": "useCapture",
                    "description": "set to true if the event was being observed with useCapture set to true as well.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1048,
            "description": "Stops event propagation and bubbling",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "event",
                    "description": "event handle",
                    "type": "Object"
                }
            ],
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1073,
            "description": "Stops event propagation",
            "itemtype": "method",
            "name": "stopPropagation",
            "params": [
                {
                    "name": "event",
                    "description": "event handle",
                    "type": "Object"
                }
            ],
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1088,
            "description": "Stops event default behaviour",
            "itemtype": "method",
            "name": "stopDefault",
            "params": [
                {
                    "name": "event",
                    "description": "event handle",
                    "type": "Object"
                }
            ],
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1107,
            "itemtype": "method",
            "name": "pointer",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "an object with the mouse X and Y position",
                "type": "Object"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1120,
            "itemtype": "method",
            "name": "pointerX",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "mouse X position",
                "type": "Number"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1132,
            "itemtype": "method",
            "name": "pointerY",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "mouse Y position",
                "type": "Number"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1144,
            "itemtype": "method",
            "name": "isLeftClick",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True if the event is a left mouse click",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1164,
            "itemtype": "method",
            "name": "isRightClick",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True if there is a right click on the event",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1173,
            "itemtype": "method",
            "name": "isMiddleClick",
            "params": [
                {
                    "name": "ev",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True if there is a middle click on the event",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1188,
            "description": "Work in Progress.\nUsed in SAPO.Component.MaskedInput",
            "itemtype": "method",
            "name": "getCharFromKeyboardEvent",
            "params": [
                {
                    "name": "event",
                    "description": "keyboard event",
                    "type": "KeyboardEvent"
                },
                {
                    "name": "changeCasing",
                    "description": "if true uppercases, if false lowercases, otherwise keeps casing",
                    "type": "Optional Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "character representation of pressed key combination",
                "type": "String"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1221,
            "description": "bean.on() lets you attach event listeners to both elements and objects.\nhttp://github.com/fat/bean#on",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "element",
                    "description": "An HTML DOM element or any JavaScript Object",
                    "type": "DOMElement|Object"
                },
                {
                    "name": "eventType",
                    "description": "An Event (or multiple events, space separated) to listen to",
                    "type": "String"
                },
                {
                    "name": "selector",
                    "description": "A CSS DOM Element selector string to bind the listener to child elements matching the selector",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "handler",
                    "description": "The callback function",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "args...",
                    "description": "Additional arguments to pass to the callback function when triggered",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the original DOM Element or Javascript Object",
                "type": "DOMElement|Object"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1235,
            "description": "bean.one() is an alias for bean.on() except that the handler will only be executed once and then removed for the event type(s).\nhttp://github.com/fat/bean#one",
            "itemtype": "method",
            "name": "one",
            "params": [
                {
                    "name": "element",
                    "description": "An HTML DOM element or any JavaScript Object",
                    "type": "DOMElement|Object"
                },
                {
                    "name": "eventType",
                    "description": "An Event (or multiple events, space separated) to listen to",
                    "type": "String"
                },
                {
                    "name": "selector",
                    "description": "A CSS DOM Element selector string to bind the listener to child elements matching the selector",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "handler",
                    "description": "The callback function",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "args...",
                    "description": "Additional arguments to pass to the callback function when triggered",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the original DOM Element or Javascript Object",
                "type": "DOMElement|Object"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1249,
            "description": "bean.off() is how you get rid of handlers once you no longer want them active. It's also a good idea to call off on elements before you remove them from your DOM; this gives Bean a chance to clean up some things and prevents memory leaks.\nhttp://github.com/fat/bean#off",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "element",
                    "description": "An HTML DOM element or any JavaScript Object",
                    "type": "DOMElement|Object"
                },
                {
                    "name": "eventType",
                    "description": "An Event (or multiple events, space separated) to remove",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The specific callback function to remove",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the original DOM Element or Javascript Object",
                "type": "DOMElement|Object"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1261,
            "description": "bean.clone() is a method for cloning events from one DOM element or object to another.\nhttp://github.com/fat/bean#clone",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "destElement",
                    "description": "An HTML DOM element or any JavaScript Object to copy events to",
                    "type": "DOMElement|Object"
                },
                {
                    "name": "srcElement",
                    "description": "An HTML DOM element or any JavaScript Object to copy events from",
                    "type": "String"
                },
                {
                    "name": "eventType",
                    "description": "An Event (or multiple events, space separated) to clone",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the original DOM Element or Javascript Object",
                "type": "DOMElement|Object"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/Event/1/lib.js",
            "line": 1273,
            "description": "bean.fire() gives you the ability to trigger events.\nhttp://github.com/fat/bean#fire",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "destElement",
                    "description": "An HTML DOM element or any JavaScript Object fire the event on",
                    "type": "DOMElement|Object"
                },
                {
                    "name": "eventType",
                    "description": "An Event (or multiple events, space separated) to fire",
                    "type": "String"
                },
                {
                    "name": "args...",
                    "description": "Additional arguments to pass to the callback function when triggered",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the original DOM Element or Javascript Object",
                "type": "DOMElement|Object"
            },
            "class": "Ink.Dom.Event",
            "module": "Ink.Dom.Event_1"
        },
        {
            "file": "Ink/Dom/FormSerialize/1/lib.js",
            "line": 18,
            "description": "Serializes a form into an object, turning field names into keys, and field values into values.\n\nnote: Multi-select and checkboxes with multiple values will yield arrays",
            "itemtype": "method",
            "name": "serialize",
            "return": {
                "description": "map of fieldName -> String|String[]|Boolean",
                "type": "Object"
            },
            "params": [
                {
                    "name": "form",
                    "description": "form element from which the extraction is to occur",
                    "type": "DomElement|String"
                }
            ],
            "example": [
                "\n    <form id=\"frm\">\n        <input type=\"text\" name=\"field1\">\n        <button type=\"submit\">Submit</button>\n    </form>\n    <script type=\"text/javascript\">\n        Ink.requireModules(['Ink.Dom.FormSerialize_1', 'Ink.Dom.Event_1'], function (FormSerialize, InkEvent) {\n            InkEvent.observe('frm', 'submit', function (event) {\n                var formData = FormSerialize.serialize('frm'); // -> {field1:\"123\"}\n                InkEvent.stop(event);\n            });\n        });\n    </script>"
            ],
            "class": "Ink.Dom.FormSerialize",
            "module": "Ink.Dom.FormSerialize"
        },
        {
            "file": "Ink/Dom/FormSerialize/1/lib.js",
            "line": 62,
            "description": "Sets form elements's values with values given from object\n\nOne cannot restore the values of an input with `type=\"file\"` (browser prohibits it)",
            "itemtype": "method",
            "name": "fillIn",
            "params": [
                {
                    "name": "form",
                    "description": "form element which is to be populated",
                    "type": "DomElement|String"
                },
                {
                    "name": "map2",
                    "description": "map of fieldName -> String|String[]|Boolean",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    <form id=\"frm\">\n        <input type=\"text\" name=\"field1\">\n        <button type=\"submit\">Submit</button>\n    </form>\n    <script type=\"text/javascript\">\n        Ink.requireModules(['Ink.Dom.FormSerialize_1'], function (FormSerialize) {\n            var values = {field1: 'CTHULHU'};\n            FormSerialize.fillIn('frm', values);\n            // At this point the form is pre-filled with the values above.\n        });\n    </script>"
            ],
            "class": "Ink.Dom.FormSerialize",
            "module": "Ink.Dom.FormSerialize"
        },
        {
            "file": "Ink/Dom/Loaded/1/lib.js",
            "line": 20,
            "description": "Callbacks and their contexts. Array of 2-arrays.\n\n[]",
            "itemtype": "attribute",
            "name": "_contexts Array",
            "access": "private",
            "tagname": "",
            "class": "Ink.Dom.Loaded",
            "module": "Ink.Dom.Loaded_1"
        },
        {
            "file": "Ink/Dom/Loaded/1/lib.js",
            "line": 31,
            "description": "Adds a new function that will be invoked once the document is ready",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "win",
                    "description": "Window object to attach/add the event",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "window"
                },
                {
                    "name": "fn",
                    "description": "Callback function to be run after the page is loaded",
                    "type": "Function"
                }
            ],
            "access": "public",
            "tagname": "",
            "example": [
                "\n    Ink.requireModules(['Ink.Dom.Loaded_1'], function(Loaded){\n        Loaded.run(function(){\n            console.log('This will run when the page/document is ready/loaded');\n        });\n    });"
            ],
            "class": "Ink.Dom.Loaded",
            "module": "Ink.Dom.Loaded_1"
        },
        {
            "file": "Ink/Dom/Loaded/1/lib.js",
            "line": 115,
            "description": "Function that will be running the callbacks after the page is loaded",
            "itemtype": "method",
            "name": "_checkState",
            "params": [
                {
                    "name": "event",
                    "description": "Triggered event",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.Dom.Loaded",
            "module": "Ink.Dom.Loaded_1"
        },
        {
            "file": "Ink/Dom/Loaded/1/lib.js",
            "line": 131,
            "description": "Polls the load progress of the page to see if it has already loaded or not",
            "itemtype": "method",
            "name": "_poll",
            "access": "private",
            "tagname": "",
            "class": "Ink.Dom.Loaded",
            "module": "Ink.Dom.Loaded_1"
        },
        {
            "file": "Ink/Dom/Loaded/1/lib.js",
            "line": 138,
            "description": "function _poll",
            "class": "Ink.Dom.Loaded",
            "module": "Ink.Dom.Loaded_1"
        },
        {
            "file": "Ink/Dom/Loaded/1/lib.js",
            "line": 151,
            "description": "Function that runs the callbacks from the queue when the document is ready.",
            "itemtype": "method",
            "name": "_ready",
            "access": "private",
            "tagname": "",
            "class": "Ink.Dom.Loaded",
            "module": "Ink.Dom.Loaded_1"
        },
        {
            "file": "Ink/Dom/Selector/1/lib.js",
            "line": 1923,
            "description": "Alias for the Sizzle selector engine",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "selector",
                    "description": "CSS selector to search for elements",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "By default the search is done in the document element. However, you can specify an element as search context",
                    "type": "DOMElement",
                    "optional": true
                },
                {
                    "name": "results",
                    "description": "By default this is considered an empty array. But if you want to merge it with other searches you did, pass their result array through here.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "seed",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Array of resulting DOM Elements",
                "type": "Array"
            },
            "class": "Ink.Dom.Selector",
            "module": "Ink.Dom.Selector_1"
        },
        {
            "file": "Ink/Dom/Selector/1/lib.js",
            "line": 1934,
            "description": "Returns elements which match with the second argument to the function.",
            "itemtype": "method",
            "name": "matches",
            "params": [
                {
                    "name": "selector",
                    "description": "CSS selector to search for elements",
                    "type": "String"
                },
                {
                    "name": "matches",
                    "description": "Elements to be 'matched' with",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Elements that matched",
                "type": "Array"
            },
            "class": "Ink.Dom.Selector",
            "module": "Ink.Dom.Selector_1"
        },
        {
            "file": "Ink/Dom/Selector/1/lib.js",
            "line": 1943,
            "description": "Returns true iif element matches given selector",
            "itemtype": "method",
            "name": "matchesSelector",
            "params": [
                {
                    "name": "element",
                    "description": "to test",
                    "type": "DOMElement"
                },
                {
                    "name": "selector",
                    "description": "CSS selector to test the element with",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true iif element matches the CSS selector",
                "type": "Boolean"
            },
            "class": "Ink.Dom.Selector",
            "module": "Ink.Dom.Selector_1"
        },
        {
            "file": "Ink/Namespace/ClassModule/1/lib.js",
            "line": 11,
            "description": "yuidoc comment syntax: http://yui.github.io/yuidoc/syntax/index.html",
            "class": "Ink.Namespace.ClassModule",
            "module": "Ink.Namespace.ClassModule_1"
        },
        {
            "file": "Ink/Namespace/ClassModule/1/lib.js",
            "line": 56,
            "itemtype": "method",
            "name": "bake",
            "return": {
                "description": "a number between 0 and 1",
                "type": "Number"
            },
            "class": "Ink.Namespace.ClassModule",
            "module": "Ink.Namespace.ClassModule_1"
        },
        {
            "file": "Ink/Namespace/ClassModule/1/lib.js",
            "line": 64,
            "itemtype": "method",
            "name": "bake",
            "params": [
                {
                    "name": "ingredient",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "time",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Ink.Namespace.ClassModule",
            "module": "Ink.Namespace.ClassModule_1"
        },
        {
            "file": "Ink/Namespace/StaticModule/1/lib.js",
            "line": 13,
            "description": "yuidoc comment syntax: http://yui.github.io/yuidoc/syntax/index.html",
            "class": "Ink.Namespace.StaticModule",
            "module": "Ink.Namespace.StaticModule_1"
        },
        {
            "file": "Ink/Namespace/StaticModule/1/lib.js",
            "line": 40,
            "itemtype": "property",
            "name": "publicProperty",
            "class": "Ink.Namespace.StaticModule",
            "module": "Ink.Namespace.StaticModule_1"
        },
        {
            "file": "Ink/Namespace/StaticModule/1/lib.js",
            "line": 45,
            "description": "Description of the method",
            "itemtype": "method",
            "name": "publicMethod",
            "params": [
                {
                    "name": "name",
                    "description": "bla ble bi",
                    "type": "String"
                },
                {
                    "name": "number",
                    "description": "blo blu",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the greet",
                "type": "String"
            },
            "class": "Ink.Namespace.StaticModule",
            "module": "Ink.Namespace.StaticModule_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 1,
            "author": "inkdev AT sapo.pt",
            "class": "Ink.Net.Ajax",
            "module": "Ink.Namespace.StaticModule_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 74,
            "description": "Options for all requests. These can then be\noverriden for individual ones.",
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 159,
            "description": "Returns a location object from an URL",
            "itemtype": "method",
            "name": "_locationFromUrl",
            "params": [
                {
                    "name": "url",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 174,
            "description": "Checks whether a location is HTTP or HTTPS",
            "itemtype": "method",
            "name": "locationIsHttp",
            "params": [
                {
                    "name": "urlLocation",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 185,
            "description": "Checks whether a location is cross-domain from another",
            "itemtype": "method",
            "name": "_locationIsCrossDomain",
            "params": [
                {
                    "name": "urlLocation",
                    "description": "",
                    "type": "Location"
                },
                {
                    "name": "otherLocation",
                    "description": "",
                    "type": "Location"
                }
            ],
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 202,
            "description": "Creates the appropriate XMLHttpRequest object",
            "itemtype": "method",
            "name": "getTransport",
            "return": {
                "description": "XMLHttpRequest object",
                "type": "Object"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 229,
            "description": "Set the necessary headers for an ajax request",
            "itemtype": "method",
            "name": "setHeaders",
            "params": [
                {
                    "name": "url",
                    "description": "- url for the request",
                    "type": "String"
                }
            ],
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 273,
            "description": "Converts an object with parameters to a querystring",
            "itemtype": "method",
            "name": "paramsObjToStr",
            "params": [
                {
                    "name": "optParams",
                    "description": "parameters object",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "querystring",
                "type": "String"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 313,
            "description": "set the url parameters for a GET request",
            "itemtype": "method",
            "name": "setParams",
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 337,
            "description": "Retrieves HTTP header from response",
            "itemtype": "method",
            "name": "getHeader",
            "params": [
                {
                    "name": "name",
                    "description": "header name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "header content",
                "type": "String"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 356,
            "description": "Returns all http headers from the response",
            "itemtype": "method",
            "name": "getAllHeaders",
            "return": {
                "description": "the headers, each separated by a newline",
                "type": "String"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 371,
            "description": "Setup the response object",
            "itemtype": "method",
            "name": "getResponse",
            "return": {
                "description": "the response object",
                "type": "Object"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 401,
            "description": "Aborts the request if still running. No callbacks are called",
            "itemtype": "method",
            "name": "abort",
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 415,
            "description": "Executes the state changing phase of an ajax request",
            "itemtype": "method",
            "name": "runStateChange",
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 509,
            "description": "Last step after XHR is complete. Call onComplete and cleanup object",
            "itemtype": "method",
            "name": "finish",
            "params": [
                {
                    "name": "response",
                    "description": ""
                },
                {
                    "name": "responseContent",
                    "description": ""
                }
            ],
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 536,
            "description": "Safely calls a callback function.\nVerifies that the callback is well defined and traps errors",
            "itemtype": "method",
            "name": "safeCall",
            "params": [
                {
                    "name": "listener",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 567,
            "description": "Sets new request header for the subsequent http request",
            "itemtype": "method",
            "name": "setRequestHeader",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 581,
            "description": "Execute the request",
            "itemtype": "method",
            "name": "request",
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 672,
            "description": "Returns new exception object that can be thrown",
            "itemtype": "method",
            "name": "makeError",
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 689,
            "description": "Checks if a given string is valid JSON",
            "itemtype": "method",
            "name": "isJSON",
            "params": [
                {
                    "name": "str",
                    "description": "String to be evaluated",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the string is valid JSON",
                "type": "Boolean"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 703,
            "description": "Evaluates a given string as JSON",
            "itemtype": "method",
            "name": "evalJSON",
            "params": [
                {
                    "name": "str",
                    "description": "String to be evaluated",
                    "type": "String"
                },
                {
                    "name": "sanitize",
                    "description": "whether to sanitize the content or not",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Json content as an object",
                "type": "Object"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 728,
            "description": "Loads content from a given url through a XMLHttpRequest.\n\nShortcut function for simple AJAX use cases.\n\nWorks with JSON, XML and plain text.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "url",
                    "description": "request url",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "callback to be executed if the request is successful",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "XMLHttpRequest object",
                "type": "Object"
            },
            "example": [
                "\n     Ajax.load('some/text/file', function (responseText) {\n         doSomething(responseText);\n     });\n     Ajax.load('some/xml/file', function (responseXML) {\n         doSomething(responseXML);\n     });\n     Ajax.load('some/json/file', function (responseJSON) {\n         doSomething(responseJSON);\n     });\n"
            ],
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/Ajax/1/lib.js",
            "line": 761,
            "description": "Loads content from a given url through a XMLHttpRequest.\nShortcut function for simple AJAX use cases.",
            "itemtype": "method",
            "name": "ping",
            "params": [
                {
                    "name": "url",
                    "description": "request url",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "callback to be executed if the request is successful",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "XMLHttpRequest object",
                "type": "Object"
            },
            "class": "Ink.Net.Ajax",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/Net/JsonP/1/lib.js",
            "line": 1,
            "author": "inkdev AT sapo.pt",
            "class": "Ink.Net.JsonP",
            "module": "Ink.Net.Ajax_1"
        },
        {
            "file": "Ink/UI/Animate/1/lib.js",
            "line": 80,
            "description": "Prefix for CSS animation-related properties in this browser.",
            "itemtype": "property",
            "name": "_animationPrefix",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Animate_1",
            "module": "Ink.UI.Animate_1"
        },
        {
            "file": "Ink/UI/Animate/1/lib.js",
            "line": 88,
            "description": "Whether CSS3 animation is supported in this browser.",
            "itemtype": "property",
            "name": "animationSupported",
            "type": "Boolean",
            "class": "Ink.UI.Animate_1",
            "module": "Ink.UI.Animate_1"
        },
        {
            "file": "Ink/UI/Animate/1/lib.js",
            "line": 95,
            "description": "The correct event for the animationend event in this browser, with the correct prefix",
            "itemtype": "property",
            "name": "animationEndEventName",
            "type": "String",
            "class": "Ink.UI.Animate_1",
            "module": "Ink.UI.Animate_1"
        },
        {
            "file": "Ink/UI/Animate/1/lib.js",
            "line": 102,
            "description": "Animate a div using one of the animate.css classes\n\n**Note: This is a utility method inside the `Animate` class, which you can access through `Animate.animate()`. Do not mix these up.**",
            "example": [
                "\n\n     Animate.animate(myDiv, 'shake', {\n         onEnd: function () {\n             alert('Finished shaking!');\n         }\n     });"
            ],
            "static": 1,
            "itemtype": "method",
            "name": "animate",
            "params": [
                {
                    "name": "element",
                    "description": "animated element",
                    "type": "DOMElement"
                },
                {
                    "name": "animation",
                    "description": "animation name",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "onEnd",
                            "description": "callback for animation end",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "removeClass",
                            "description": "whether to remove the Css class when finished",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "duration",
                            "description": "duration name (fast|medium|slow) or duration in ms",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "medium"
                        }
                    ]
                }
            ],
            "class": "Ink.UI.Animate_1",
            "module": "Ink.UI.Animate_1"
        },
        {
            "file": "Ink/UI/Carousel/1/lib.js",
            "line": 90,
            "description": "Measure the carousel once again, adjusting the involved elements'\nsizes. Called automatically when the window resizes, in order to\ncater for changes from responsive media queries, for instance.",
            "itemtype": "method",
            "name": "refit",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Carousel_1",
            "module": "Ink.UI.Carousel_1"
        },
        {
            "file": "Ink/UI/Carousel/1/lib.js",
            "line": 204,
            "description": "Refit stuff for IE7 because it won't support inline-block.",
            "itemtype": "method",
            "name": "_IE7",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Carousel_1",
            "module": "Ink.UI.Carousel_1"
        },
        {
            "file": "Ink/UI/Carousel/1/lib.js",
            "line": 329,
            "description": "Get the currently displayed page.",
            "itemtype": "method",
            "name": "getPage",
            "class": "Ink.UI.Carousel_1",
            "module": "Ink.UI.Carousel_1"
        },
        {
            "file": "Ink/UI/Carousel/1/lib.js",
            "line": 341,
            "description": "Set the current page to `page`",
            "itemtype": "method",
            "name": "setPage",
            "params": [
                {
                    "name": "page",
                    "description": ""
                },
                {
                    "name": "wrap",
                    "description": "Wrap over the first and last pages. (For example, going to the 5th page when there are only 4 pages goes to the 1st page)",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Ink.UI.Carousel_1",
            "module": "Ink.UI.Carousel_1"
        },
        {
            "file": "Ink/UI/Carousel/1/lib.js",
            "line": 375,
            "description": "Change to the next page",
            "itemtype": "method",
            "name": "nextPage",
            "params": [
                {
                    "name": "wrap",
                    "description": "If true, going to the page after the last page takes you to the first page.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Ink.UI.Carousel_1",
            "module": "Ink.UI.Carousel_1"
        },
        {
            "file": "Ink/UI/Carousel/1/lib.js",
            "line": 384,
            "description": "Change to the previous page",
            "itemtype": "method",
            "name": "previousPage",
            "params": [
                {
                    "name": "wrap",
                    "description": "If true, going to the page after the last page takes you to the first page.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Ink.UI.Carousel_1",
            "module": "Ink.UI.Carousel_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 31,
            "description": "Supported Ink Layouts",
            "itemtype": "property",
            "name": "Layouts",
            "type": "Object",
            "readonly": "",
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 44,
            "description": "Method to check if an item is a valid DOM Element.",
            "itemtype": "method",
            "name": "isDOMElement",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "The object to be checked.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if it's a valid DOM Element.",
                "type": "Boolean"
            },
            "example": [
                "\n    var el = Ink.s('#element');\n    if( Ink.UI.Common.isDOMElement( el ) === true ){\n        // It is a DOM Element.\n    } else {\n        // It is NOT a DOM Element.\n    }"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 63,
            "description": "Method to check if an item is a valid integer.",
            "itemtype": "method",
            "name": "isInteger",
            "static": 1,
            "params": [
                {
                    "name": "n",
                    "description": "The value to be checked.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "True if 'n' is a valid integer.",
                "type": "Boolean"
            },
            "example": [
                "\n    var value = 1;\n    if( Ink.UI.Common.isInteger( value ) === true ){\n        // It is an integer.\n    } else {\n        // It is NOT an integer.\n    }"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 82,
            "description": "Method to get a DOM Element. The first parameter should be either a DOM Element or a valid CSS Selector.\nIf not, then it will throw an exception. Otherwise, it returns a DOM Element.",
            "itemtype": "method",
            "name": "elOrSelector",
            "static": 1,
            "params": [
                {
                    "name": "elOrSelector",
                    "description": "DOM Element or CSS Selector",
                    "type": "DOMElement|String"
                },
                {
                    "name": "fieldName",
                    "description": "This field is used in the thrown Exception to identify the parameter.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the DOMElement passed or the first result of the CSS Selector. Otherwise it throws an exception.",
                "type": "DOMElement"
            },
            "example": [
                "\n    // In case there are several .myInput, it will retrieve the first found\n    var el = Ink.UI.Common.elOrSelector('.myInput','My Input');"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 104,
            "description": "Does the same as `elOrSelector` but returns an array of elements.\n\nsee elOrSelector",
            "itemtype": "method",
            "name": "elsOrSelector",
            "static": 1,
            "params": [
                {
                    "name": "...",
                    "description": "(See elOrSelector's params)"
                },
                {
                    "name": "required",
                    "description": "If true, accept an empty array as output.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The selected DOM Elements.",
                "type": "Array"
            },
            "example": [
                "\n    var elements = Ink.UI.Common.elsOrSelector('input.my-inputs', 'My Input');"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 140,
            "description": "Get options from an \"options\" object and the Element's data attributes.\n\nThe element's data attributes take precedence.\n\nValues from the element's data-atrributes are coerced into the required type.\n\nMainly for Ink UI.* modules",
            "itemtype": "method",
            "name": "options",
            "params": [
                {
                    "name": "fieldId",
                    "description": "Tag used in thrown exceptions: \"<fieldId>: ...\"",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "''"
                },
                {
                    "name": "defaults",
                    "description": "Object with arrays of option defaults",
                    "type": "Object"
                },
                {
                    "name": "overrides",
                    "description": "Object containing options given from user through JavaScript",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "Element with data-attributes",
                    "type": "DOMElement",
                    "optional": true
                }
            ],
            "example": [
                "\n\n     this._options = Ink.UI.Common.options('MyComponent', {\n         'anobject': ['Object', null],  // Defaults to null\n         'target': ['Element', null],\n         'stuff': ['Number', 0.1],\n         'stuff2': ['Integer', 0],\n         'doKickFlip': ['Boolean', false],\n         'targets': ['Elements'], // Required option since no default was given\n         'onClick': ['Function', null]\n     }, options || {}, elm)",
                "\n\n### Note about booleans\n\nHere is how options are read from the markup\ndata-attributes, for several values`data-a-boolean`.\n\nOptions considered true:\n\n  - `data-a-boolean=\"true\"`\n  - (Every other value which is not on the list below.)\n\nOptions considered false:\n\n  - `data-a-boolean=\"false\"`\n  - `data-a-boolean=\"\"`\n  - `data-a-boolean`\n\nOptions which go to default:\n\n  - (no attribute). When `data-a-boolean` is ommitted, the\n  option is not considered true nor false, and as such\n  defaults to what is in the `defaults` argument.\n"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 339,
            "description": "Method to make a deep copy (clone) of an object.\nNote: The object cannot have loops.",
            "itemtype": "method",
            "name": "clone",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "The object to be cloned/copied.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the result of the clone/copy.",
                "type": "Object"
            },
            "example": [
                "\n    var originalObj = {\n        key1: 'value1',\n        key2: 'value2',\n        key3: 'value3'\n    };\n    var cloneObj = Ink.UI.Common.clone( originalObj );"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 364,
            "description": "Method to return the 'nth' position that an element occupies relatively to its parent.",
            "itemtype": "method",
            "name": "childIndex",
            "static": 1,
            "params": [
                {
                    "name": "childEl",
                    "description": "Valid DOM Element.",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "Numerical position of an element relatively to its parent.",
                "type": "Number"
            },
            "example": [
                "\n    <!-- Imagine the following HTML: -->\n    <ul>\n      <li>One</li>\n      <li>Two</li>\n      <li id=\"test\">Three</li>\n      <li>Four</li>\n    </ul>\n\n    <script>\n        var testLi = Ink.s('#test');\n        Ink.UI.Common.childIndex( testLi ); // Returned value: 3\n    </script>"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 398,
            "description": "This method provides a more convenient way to do an async AJAX request and expect a JSON response.\nIt offers a callback option, as third paramenter, for a better async handling.",
            "itemtype": "method",
            "name": "ajaxJSON",
            "static": 1,
            "async": 1,
            "params": [
                {
                    "name": "endpoint",
                    "description": "Valid URL to be used as target by the request.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "This field is used in the thrown Exception to identify the parameter.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    // In case there are several .myInput, it will retrieve the first found\n    var el = Ink.UI.Common.elOrSelector('.myInput','My Input');"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 439,
            "description": "Method to get the current Ink layout applied.",
            "itemtype": "method",
            "name": "currentLayout",
            "static": 1,
            "return": {
                "description": "'small', 'medium' or 'large'",
                "type": "String"
            },
            "example": [
                "\n     var inkLayout = Ink.UI.Common.currentLayout();\n     if (inkLayout === 'small') {\n         // ...\n     }"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 486,
            "description": "Method to set the location's hash (window.location.hash).",
            "itemtype": "method",
            "name": "hashSet",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "Object with the info to be placed in the location's hash.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    // It will set the location's hash like: <url>#key1=value1&key2=value2&key3=value3\n    Ink.UI.Common.hashSet({\n        key1: 'value1',\n        key2: 'value2',\n        key3: 'value3'\n    });"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 507,
            "description": "Method to remove children nodes from a given object.\nThis method was initially created to help solve a problem in Internet Explorer(s) that occurred when trying\nto set the innerHTML of some specific elements like 'table'.",
            "itemtype": "method",
            "name": "cleanChildren",
            "static": 1,
            "params": [
                {
                    "name": "parentEl",
                    "description": "Valid DOM Element",
                    "type": "DOMElement"
                }
            ],
            "example": [
                "\n    <!-- Imagine the following HTML: -->\n    <ul id=\"myUl\">\n      <li>One</li>\n      <li>Two</li>\n      <li>Three</li>\n      <li>Four</li>\n    </ul>\n\n    <script>\n    Ink.UI.Common.cleanChildren( Ink.s( '#myUl' ) );\n    </script>\n\n    <!-- After running it, the HTML changes to: -->\n    <ul id=\"myUl\"></ul>"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 543,
            "description": "This method stores the id and/or the classes of a given element in a given object.",
            "itemtype": "method",
            "name": "storeIdAndClasses",
            "static": 1,
            "params": [
                {
                    "name": "fromEl",
                    "description": "Valid DOM Element to get the id and classes from.",
                    "type": "DOMElement"
                },
                {
                    "name": "inObj",
                    "description": "Object where the id and classes will be saved.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    <div id=\"myDiv\" class=\"aClass\"></div>\n\n    <script>\n        var storageObj = {};\n        Ink.UI.Common.storeIdAndClasses( Ink.s('#myDiv'), storageObj );\n        // storageObj changes to:\n        {\n          _id: 'myDiv',\n          _classes: 'aClass'\n        }\n    </script>"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 579,
            "description": "This method sets the id and className properties of a given DOM Element based on a given similar object\nresultant of the previous function 'storeIdAndClasses'.",
            "itemtype": "method",
            "name": "restoreIdAndClasses",
            "static": 1,
            "params": [
                {
                    "name": "toEl",
                    "description": "Valid DOM Element to set the id and classes on.",
                    "type": "DOMElement"
                },
                {
                    "name": "inObj",
                    "description": "Object where the id and classes to be set are.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    <div></div>\n\n    <script>\n        var storageObj = {\n          _id: 'myDiv',\n          _classes: 'aClass'\n        };\n\n        Ink.UI.Common.storeIdAndClasses( Ink.s('div'), storageObj );\n    </script>\n\n    <!-- After the code runs the div element changes to: -->\n    <div id=\"myDiv\" class=\"aClass\"></div>"
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 622,
            "description": "This method saves a component's instance reference for later retrieval.",
            "itemtype": "method",
            "name": "registerInstance",
            "static": 1,
            "params": [
                {
                    "name": "inst",
                    "description": "Object that holds the instance.",
                    "type": "Object"
                },
                {
                    "name": "el",
                    "description": "DOM Element to associate with the object.",
                    "type": "DOMElement"
                },
                {
                    "name": "optionalPrefix",
                    "description": "Defaults to 'instance'",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 648,
            "description": "This method deletes/destroy an instance with a given id.",
            "itemtype": "method",
            "name": "unregisterInstance",
            "static": 1,
            "params": [
                {
                    "name": "id",
                    "description": "Id of the instance to be destroyed.",
                    "type": "String"
                }
            ],
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 659,
            "description": "This method retrieves the registered instance(s) of a given element or instance id.",
            "itemtype": "method",
            "name": "getInstance",
            "static": 1,
            "params": [
                {
                    "name": "instanceIdOrElement",
                    "description": "Instance's id or DOM Element from which we want the instances.",
                    "type": "String|DOMElement"
                }
            ],
            "return": {
                "description": "Returns an instance or a collection of instances.",
                "type": "Object|Object[]"
            },
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 692,
            "description": "This method retrieves the registered instance(s) of an element based on the given selector.",
            "itemtype": "method",
            "name": "getInstanceFromSelector",
            "static": 1,
            "params": [
                {
                    "name": "selector",
                    "description": "CSS selector to define the element from which it'll get the instance(s).",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns an instance or a collection of instances.",
                "type": "Object|Object[]"
            },
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 706,
            "description": "This method retrieves the registered instances' ids of all instances.",
            "itemtype": "method",
            "name": "getInstanceIds",
            "static": 1,
            "return": {
                "description": "Id or collection of ids of all existing instances.",
                "type": "String[]"
            },
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 723,
            "description": "This method retrieves all existing instances.",
            "itemtype": "method",
            "name": "getInstances",
            "static": 1,
            "return": {
                "description": "Collection of existing instances.",
                "type": "Object[]"
            },
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/Common/1/lib.js",
            "line": 740,
            "description": "This method is not to supposed to be invoked by the Common component.\nComponents should copy this method as its destroy method.",
            "itemtype": "method",
            "name": "destroyComponent",
            "static": 1,
            "class": "Ink.UI.Common",
            "module": "Ink.UI.Common_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 189,
            "description": "Initialization function. Called by the constructor and\nreceives the same parameters.",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 205,
            "description": "Renders the DatePicker's markup",
            "itemtype": "method",
            "name": "_render",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 311,
            "description": "Shows the calendar",
            "itemtype": "method",
            "name": "show",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 367,
            "description": "Create the markup of the view with months.",
            "itemtype": "method",
            "name": "_renderMonthSelector",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 389,
            "description": "Render a single month button.",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 420,
            "description": "Render the topmost bar with the \"close\" and \"clear\" buttons.",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 487,
            "description": "Handle click events on a changer (« ») for next/prev year/month",
            "itemtype": "method",
            "name": "_onChangerClick",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 509,
            "description": "Handle click events on an atom-changer (day button, month button, year button)",
            "itemtype": "method",
            "name": "_onAbsoluteChangerClick",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 553,
            "description": "Hides the DatePicker. If the component is shy (options.shy), behaves differently.",
            "itemtype": "method",
            "name": "_hide",
            "params": [
                {
                    "name": "blur",
                    "description": "Set to false to indicate this is not just a blur and force hiding even if the component is shy.",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 566,
            "description": "Sets the range of dates allowed to be selected in the Date Picker",
            "itemtype": "method",
            "name": "_setMinMax",
            "params": [
                {
                    "name": "dateRange",
                    "description": "Two dates separated by a ':'. Example: 2013-01-01:2013-12-12",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 628,
            "description": "Checks if a date is between the valid range.\nStarts by checking if the date passed is valid. If not, will fallback to the 'today' date.\nThen checks if the all params are inside of the date range specified. If not, it will fallback to the nearest valid date (either Min or Max).",
            "itemtype": "method",
            "name": "_fitDateToRange",
            "params": [
                {
                    "name": "year",
                    "description": "Year with 4 digits (yyyy)",
                    "type": "Number"
                },
                {
                    "name": "month",
                    "description": "Month",
                    "type": "Number"
                },
                {
                    "name": "day",
                    "description": "Day",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Array with the final processed date.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 654,
            "description": "Checks whether a date is within the valid date range",
            "itemtype": "method",
            "name": "_dateWithinRange",
            "params": [
                {
                    "name": "year",
                    "description": ""
                },
                {
                    "name": "month",
                    "description": ""
                },
                {
                    "name": "day",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 684,
            "description": "_dateCmp with varied precision. You can compare down to the day field, or, just to the month.\n// the following two dates are considered equal because we asked\n// _dateCmpUntil to just check up to the years.\n\n_dateCmpUntil({_year: 2000, _month: 10}, {_year: 2000, _month: 11}, '_year') === 0",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 705,
            "description": "Sets the markup in the default view mode (showing the days).\nAlso disables the previous and next buttons in case they don't meet the range requirements.",
            "itemtype": "method",
            "name": "_showDefaultView",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 729,
            "description": "Updates the date shown on the datepicker",
            "itemtype": "method",
            "name": "_updateDate",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 758,
            "description": "Updates the date description shown at the top of the datepicker\n\nEG \"12 de November\"",
            "itemtype": "method",
            "name": "_updateDescription",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 772,
            "description": "Renders the year selector view of the datepicker",
            "itemtype": "method",
            "name": "_showYearSelector",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 817,
            "description": "For the year selector.\n\nUpdate this._year, to find the next decade or use nextValidDateFn to find it.",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 843,
            "description": "Show the month selector (happens when you click a year, or the \"month\" link.",
            "itemtype": "method",
            "name": "_showMonthSelector",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 857,
            "description": "This function returns the given date in the dateish format",
            "itemtype": "method",
            "name": "_parseDate",
            "params": [
                {
                    "name": "dateStr",
                    "description": "A date on a string.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 872,
            "description": "Checks if a date is valid",
            "itemtype": "method",
            "name": "_isValidDate",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Dateish"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "True if the date is valid, false otherwise",
                "type": "Boolean"
            },
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 894,
            "description": "Checks if a given date is an valid format.",
            "itemtype": "method",
            "name": "_isDate",
            "params": [
                {
                    "name": "format",
                    "description": "A date format.",
                    "type": "String"
                },
                {
                    "name": "dateStr",
                    "description": "A date on a string.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "True if the given date is valid according to the given format",
                "type": "Boolean"
            },
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 929,
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 938,
            "description": "This method returns the date written with the format specified on the options",
            "itemtype": "method",
            "name": "_writeDateInFormat",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns the current date of the object in the specified format",
                "type": "String"
            },
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 949,
            "description": "This method allows the user to set the DatePicker's date on run-time.",
            "itemtype": "method",
            "name": "setDate",
            "params": [
                {
                    "name": "dateString",
                    "description": "A date string in yyyy-mm-dd format.",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 967,
            "description": "Get the current date as a JavaScript date.",
            "itemtype": "method",
            "name": "getDate",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 979,
            "description": "Sets the chosen date on the target input field",
            "itemtype": "method",
            "name": "_setDate",
            "params": [
                {
                    "name": "objClicked",
                    "description": "Clicked object inside the DatePicker's calendar.",
                    "type": "DOMElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1011,
            "description": "Makes the necessary work to update the calendar\nwhen choosing a different month",
            "itemtype": "method",
            "name": "_updateCal",
            "params": [
                {
                    "name": "inc",
                    "description": "Indicates previous or next month",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1032,
            "description": "Function that returns the number of days on a given month on a given year",
            "itemtype": "method",
            "name": "_daysInMonth",
            "params": [
                {
                    "name": "_y",
                    "description": "- year",
                    "type": "Number"
                },
                {
                    "name": "_m",
                    "description": "- month",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The number of days on a given month on a given year",
                "type": "Number"
            },
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1054,
            "description": "Updates the calendar when a different month is chosen",
            "itemtype": "method",
            "name": "_updateMonth",
            "params": [
                {
                    "name": "incValue",
                    "description": "- indicates previous or next month",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1074,
            "description": "Get the next month we can show.",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1088,
            "description": "Get the previous month we can show.",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1102,
            "description": "Get the next year we can show.",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1112,
            "description": "Get the next year we can show.",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1122,
            "description": "DRY base for a function which tries to get the next or previous valid year or month.\n\nIt checks if we can go forward by using _dateCmp with atomic\nprecision (this means, {_year} for leaping years, and\n{_year, month} for leaping months), then it tries to get the\nresult from the user-supplied callback (nextDateFn or prevDateFn),\nand when this is not present, advance the date forward using the\n`advancer` callback.",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1169,
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1188,
            "description": "Key-value object that (for a given key) points to the correct parsing format for the DatePicker",
            "itemtype": "property",
            "name": "_dateParsers",
            "type": "{Object}",
            "readonly": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1207,
            "description": "Renders the current month",
            "itemtype": "method",
            "name": "_renderMonth",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1272,
            "description": "Get the HTML markup for a single day in month view, given year, month, day.",
            "itemtype": "method",
            "name": "_getDayButtonHtml",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1294,
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1307,
            "description": "This method adds class names to month buttons, to visually distinguish.",
            "itemtype": "method",
            "name": "_addMonthClassNames",
            "params": [
                {
                    "name": "parent",
                    "description": "DOMElement where all the months are.",
                    "type": "DOMElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1320,
            "description": "Add the ink-calendar-on className if the given button is the current month,\notherwise add the ink-calendar-off className if the given button refers to\nan unacceptable month (given dateRange and validMonthFn)",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1342,
            "description": "Prototype's method to allow the 'i18n files' to change all objects' language at once.",
            "params": [
                {
                    "name": "options",
                    "description": "Object with the texts' configuration.",
                    "type": "Object"
                },
                {
                    "name": "closeText",
                    "description": "Text of the close anchor",
                    "type": "String"
                },
                {
                    "name": "cleanText",
                    "description": "Text of the clean text anchor",
                    "type": "String"
                },
                {
                    "name": "prevLinkText",
                    "description": "\"Previous\" link's text",
                    "type": "String"
                },
                {
                    "name": "nextLinkText",
                    "description": "\"Next\" link's text",
                    "type": "String"
                },
                {
                    "name": "ofText",
                    "description": "The text \"of\", present in 'May of 2013'",
                    "type": "String"
                },
                {
                    "name": "month",
                    "description": "An object with keys from 1 to 12 that have the full months' names",
                    "type": "Object"
                },
                {
                    "name": "wDay",
                    "description": "An object with keys from 0 to 6 that have the full weekdays' names",
                    "type": "Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1358,
            "description": "This calls the rendering of the selected month. (Deprecated: use show() instead)",
            "itemtype": "method",
            "name": "showMonth",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1368,
            "description": "Returns true if the calendar sceen is in 'select day' mode",
            "return": {
                "description": "True if the calendar sceen is in 'select day' mode",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/DatePicker/1/lib.js",
            "line": 1381,
            "description": "Destroys this datepicker, removing it from the page.",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.DatePicker",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 51,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "params": [
                {
                    "name": "element",
                    "description": "ID of the element or DOM Element.",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "Options object for configuration of the module.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Draggable",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 123,
            "description": "Removes the ability of the element of being dragged",
            "itemtype": "method",
            "name": "destroy",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Draggable",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 138,
            "description": "Gets coordinates for a given event (with added page scroll)",
            "itemtype": "method",
            "name": "_getCoords",
            "params": [
                {
                    "name": "e",
                    "description": "window.event object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Array where the first position is the x coordinate, the second is the y coordinate",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Draggable",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 154,
            "description": "Clones src element's relevant properties to dst",
            "itemtype": "method",
            "name": "_cloneStyle",
            "params": [
                {
                    "name": "src",
                    "description": "Element from where we're getting the styles",
                    "type": "DOMElement"
                },
                {
                    "name": "dst",
                    "description": "Element where we're placing the styles.",
                    "type": "DOMElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Draggable",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 175,
            "description": "onStart event handler",
            "itemtype": "method",
            "name": "_onStart",
            "params": [
                {
                    "name": "e",
                    "description": "window.event object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "In some cases return false. Otherwise is void",
                "type": "Boolean|void"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Draggable",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 282,
            "description": "Function that gets the timestamp of the current run from time to time. (FPS)",
            "itemtype": "method",
            "name": "_onDragFacade",
            "params": [
                {
                    "name": "window.event",
                    "description": "object.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Draggable",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 297,
            "description": "Function that handles the dragging movement",
            "itemtype": "method",
            "name": "_onDrag",
            "params": [
                {
                    "name": "window.event",
                    "description": "object.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Draggable",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Draggable/1/lib.js",
            "line": 371,
            "description": "Function that handles the end of the dragging process",
            "itemtype": "method",
            "name": "_onEnd",
            "params": [
                {
                    "name": "window.event",
                    "description": "object.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Draggable",
            "module": "Ink.UI.DatePicker_1"
        },
        {
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 62,
            "description": "Called when the mouse is over the toggler, or the dropdown.\n\nDeals with \"hoverOpen\" by setting the dropdown to open later. Also cancels \"dismissAfter\".",
            "itemtype": "method",
            "name": "_onMouseOver",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Dropdown",
            "module": "Ink.UI.Dropdown_1"
        },
        {
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 81,
            "description": "Called when the mouse leaves either the toggler, or the dropdown.\n\nDeals with \"dismissAfter\" by setting the dropdown to be dismissed later. Also cancels \"hoverOpen\".",
            "itemtype": "method",
            "name": "_onMouseOut",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Dropdown",
            "module": "Ink.UI.Dropdown_1"
        },
        {
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 100,
            "description": "Handle clicks on the dropdown.",
            "itemtype": "method",
            "name": "_onInsideClick",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Dropdown",
            "module": "Ink.UI.Dropdown_1"
        },
        {
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 114,
            "description": "Handle clicks outside the dropdown.",
            "itemtype": "method",
            "name": "_onInsideClick",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Dropdown",
            "module": "Ink.UI.Dropdown_1"
        },
        {
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 138,
            "description": "Dismiss the dropdown.",
            "itemtype": "method",
            "name": "dismiss",
            "params": [
                {
                    "name": "callHandler",
                    "description": "call onDismiss handler",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Ink.UI.Dropdown",
            "module": "Ink.UI.Dropdown_1"
        },
        {
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 148,
            "description": "Open the dropdown",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "callHandler",
                    "description": "call onOpen handler",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Ink.UI.Dropdown",
            "module": "Ink.UI.Dropdown_1"
        },
        {
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 158,
            "description": "DRY'ing up open() and dismiss()",
            "itemtype": "method",
            "name": "_openOrDismiss",
            "params": [
                {
                    "name": "newState",
                    "description": "",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callHandler",
                    "description": "",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Dropdown",
            "module": "Ink.UI.Dropdown_1"
        },
        {
            "file": "Ink/UI/Dropdown/1/lib.js",
            "line": 180,
            "description": "call a method given by the user through the options",
            "itemtype": "method",
            "name": "_handlerCall",
            "params": [
                {
                    "name": "handler",
                    "description": "The handler name in this._options",
                    "type": "String"
                },
                {
                    "name": "...",
                    "description": "Arguments to pass to function"
                }
            ],
            "class": "Ink.UI.Dropdown",
            "module": "Ink.UI.Dropdown_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 23,
            "description": "Flag that determines if it's in debug mode or not",
            "itemtype": "property",
            "name": "debug",
            "type": "{Boolean}",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 32,
            "description": "Array with the data of each element (`{element: ..., data: ..., options: ...}`)",
            "itemtype": "property",
            "name": "_droppables",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 41,
            "description": "Array of data for each draggable. (`{element: ..., data: ...}`)",
            "itemtype": "property",
            "name": "_draggables",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 50,
            "description": "Makes an element droppable and adds it to the stack of droppable elements.\nCan consider it a constructor of droppable elements, but where no Droppable object is returned.\n\nIn the following arguments, any events/callbacks you may pass, can be either functions or strings. If the 'move' or 'copy' strings are passed, the draggable gets moved into this droppable. If 'revert' is passed, an acceptable droppable is moved back to the element it came from.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "element",
                    "description": "Target element",
                    "type": "String|DOMElement"
                },
                {
                    "name": "options",
                    "description": "options object",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "hoverClass",
                            "description": "Classname(s) applied when an acceptable draggable element is hovering the element",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "accept",
                            "description": "Selector for choosing draggables which can be dropped in this droppable.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "onHover",
                            "description": "callback called when an acceptable draggable element is hovering the droppable. Gets the draggable and the droppable element as parameters.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onDrop",
                            "description": "callback called when an acceptable draggable element is dropped. Gets the draggable, the droppable and the event as parameters.",
                            "type": "Function|String",
                            "optional": true
                        },
                        {
                            "name": "onDropOut",
                            "description": "callback called when a droppable is dropped outside this droppable. Gets the draggable, the droppable and the event as parameters. (see above for string options).",
                            "type": "Function|String",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "public",
            "tagname": "",
            "example": [
                "\n\n      <style type=\"text/css\">\n          .hover {\n              border: 1px solid red;\n          }\n          .left, .right {\n              float: left; width: 50%;\n              outline: 1px solid gray;\n              min-height: 2em;\n          }\n      </style>\n       <ul class=\"left\">\n           <li>Draggable 1</li>\n           <li>Draggable 2</li>\n           <li>Draggable 3</li>\n       </ul>\n       <ul class=\"right\">\n       </ul>\n       <script type=\"text/javascript\">\n           Ink.requireModules(['Ink.UI.Draggable_1', 'Ink.UI.Droppable_1'], function (Draggable, Droppable) {\n               new Draggable('.left li:eq(0)', {});\n               new Draggable('.left li:eq(1)', {});\n               new Draggable('.left li:eq(2)', {});\n               Droppable.add('.left', {onDrop: 'move', onDropOut: 'revert'});\n               Droppable.add('.right', {onDrop: 'move', onDropOut: 'revert'});\n           })\n       </script>\n"
            ],
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 163,
            "description": "find droppable data about `element`. this data is added in `.add`",
            "itemtype": "method",
            "name": "_findData",
            "params": [
                {
                    "name": "element",
                    "description": "Needle",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "Droppable data of the element",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 179,
            "description": "Find draggable data about `element`",
            "itemtype": "method",
            "name": "_findDraggable",
            "params": [
                {
                    "name": "element",
                    "description": "Needle",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "Draggable data queried",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 196,
            "description": "Invoke every time a drag starts",
            "itemtype": "method",
            "name": "updateAll",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 206,
            "description": "Updates location and size of droppable element",
            "itemtype": "method",
            "name": "update * @param  element - target element",
            "type": "String|DOMElement",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 225,
            "description": "Removes an element from the droppable stack and removes the droppable behavior",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "elOrSelector",
                    "description": "Droppable element to disable.",
                    "type": "String|DOMElement"
                }
            ],
            "return": {
                "description": "Whether the object was found and deleted",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/Droppable/1/lib.js",
            "line": 245,
            "description": "Method called by a draggable to execute an action on a droppable",
            "itemtype": "method",
            "name": "action",
            "params": [
                {
                    "name": "coords",
                    "description": "coordinates where the action happened",
                    "type": "Object"
                },
                {
                    "name": "type",
                    "description": "type of action. drag or drop.",
                    "type": "String"
                },
                {
                    "name": "ev",
                    "description": "Event object",
                    "type": "Object"
                },
                {
                    "name": "draggable",
                    "description": "draggable element",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Droppable",
            "module": "Ink.UI.Droppable_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 26,
            "description": "Specifies the version of the component",
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 36,
            "description": "Available flags to use in the validation process.\nThe keys are the 'rules', and their values are objects with the key 'msg', determining\nwhat is the error message.",
            "itemtype": "property",
            "name": "_flagMap",
            "type": "{Object}",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 70,
            "description": "This property holds all form elements for later validation",
            "itemtype": "property",
            "name": "elements",
            "type": "{Object}",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 79,
            "description": "This property holds the objects needed to cross-check for the 'confirm' rule",
            "itemtype": "property",
            "name": "confirmElms",
            "type": "{Object}",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 88,
            "description": "This property holds the previous elements in the confirmElms property, but with a\ntrue/false specifying if it has the class ink-fv-confirm.",
            "itemtype": "property",
            "name": "hasConfirm",
            "type": "{Object}",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 97,
            "description": "Defined class name to use in error messages label",
            "itemtype": "property",
            "name": "_errorClassName",
            "type": "{String}",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 107,
            "itemtype": "property",
            "name": "_errorValidationClassName",
            "type": "{String}",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 115,
            "itemtype": "property",
            "name": "_errorTypeWarningClassName",
            "type": "{String}",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 123,
            "itemtype": "property",
            "name": "_errorTypeErrorClassName",
            "type": "{String}",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 131,
            "description": "Check if a form is valid or not",
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "elm",
                    "description": "DOM form element or form id",
                    "type": "DOMElement|String"
                },
                {
                    "name": "options",
                    "description": "Options for",
                    "type": "Object",
                    "props": [
                        {
                            "name": "onSuccess",
                            "description": "function to run when form is valid",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onError",
                            "description": "function to run when form is not valid",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "customFlag",
                            "description": "custom flags to use to validate form fields",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "public",
            "tagname": "",
            "return": {
                "description": "Whether the form is deemed valid or not.",
                "type": "Boolean"
            },
            "example": [
                "\n\n## What markup do I need?\n\nBesides the markup structure you can see in\n<a href=\"http://ink.sapo.pt/forms#building\"></a>, you need to add\nthe `ink-fv-*` classes to your inputs, which correspond to validation\nrules in this component. Available classes are:\n\n- `ink-fv-required` : Required field\n- `ink-fv-email`    : Valid e-mail\n- `ink-fv-url`      : Valid URL address\n- `ink-fv-number`   : Valid number\n- `ink-fv-phone_pt`, `ink-fv-phone_cv`, `ink-fv-phone_mz`, `ink-fv-phone_ao` : Valid telephone number in Portugal, Cape Verde, Mozambique or Angola.\n- `ink-fv-date`     : Valid date\n- `ink-fv-confirm`  : Make the user type the same thing twice. Common rule for confirming passwords.\n- `ink-fv-custom`   : Custom rule (see below example \"Custom rule\")\n\n          E-mail field: <input class=\"ink-fv-required ink-fv-email\"><br>\n          Phone number field: <input class=\"ink-fv-number ink-fv-required\"><br>\n          Website field (optional): <input class=\"ink-fv-url\">\n\n## Simple usage\n\nSo you have a form and would like to validate it? This example shows\nhow to validate a form and stop it from being submitted when invalid.\nTo use this, add the several ink-fv-* classes to your input elements.\n\nThe validate() function will also add \"invalid\" classes to each of\nyour elements so the user gets a color feedback and an error message\nbelow each element (control-group, really).\n\n        var myForm = Ink.i('my-form');\n        InkEvent.observe(myForm, 'submit', function (ev) {\n            var formIsValid = FormValidator.validate(myForm);\n            if (!formIsValid) {\n                InkEvent.stop(ev);  // Cancel submission of form.\n            }\n        });",
                "\n\n## Custom rule.\n\nThe following code validates using a custom rule named `minthree`,\nwhich fails if the input string has less than three characters.\nTo do this, you must add the `ink-fv-custom` and `minthree` classes\nto the input elements you want to validate, and pass the `customFlag`\noption to this function, like so:\n\n        var isValid = FormValidator.validate(myForm, {\n            customFlag: [\n                {\n                    flag: 'minthree',  // The name of this rule (add this class to your <input>s\n                    msg: 'Please input at least three characters',  // Error message when rule fails\n                    callback: function (el) {\n                        return el.value.length >= 3  // Return true when okay, false when not\n                    }\n                }\n            ]\n        });"
            ],
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 255,
            "description": "Reset previously generated validation errors",
            "itemtype": "method",
            "name": "reset",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 267,
            "description": "Cleans the object",
            "itemtype": "method",
            "name": "_free",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 281,
            "description": "Cleans the properties responsible for caching",
            "itemtype": "method",
            "name": "_clearCache",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 295,
            "description": "Gets the form elements and stores them in the caching properties",
            "itemtype": "method",
            "name": "_getElements",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 352,
            "description": "Runs the validation for each element",
            "itemtype": "method",
            "name": "_validateElements",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 403,
            "description": "Runs the 'confirm' validation for each group of elements",
            "itemtype": "method",
            "name": "_validateConfirmGroups",
            "params": [
                {
                    "name": "oGroups",
                    "description": "Array/Object that contains the group of confirm objects",
                    "type": "Array"
                },
                {
                    "name": "errors",
                    "description": "Array that will store the errors",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Array of errors that was passed as 2nd parameter (either changed, or not, depending if errors were found).",
                "type": "Array"
            },
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 426,
            "description": "Creates the groups of 'confirm' objects",
            "itemtype": "method",
            "name": "_makeConfirmGroups",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Returns the array of confirm elements or false on error.",
                "type": "Array|Boolean"
            },
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 469,
            "description": "Validates an element with a custom validation",
            "itemtype": "method",
            "name": "_isCustomValid",
            "params": [
                {
                    "name": "elm",
                    "description": "Element to be validated",
                    "type": "DOMElemenmt"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Array of errors. If no errors are found, results in an empty array.",
                "type": "Array"
            },
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 492,
            "description": "Runs the normal validation functions for a specific element",
            "itemtype": "method",
            "name": "_isValid",
            "params": [
                {
                    "name": "elm",
                    "description": "DOMElement that will be validated",
                    "type": "DOMElement"
                },
                {
                    "name": "fieldType",
                    "description": "Rule to be validated. This must be one of the keys present in the _flagMap property.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The result of the validation.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 592,
            "description": "Makes the necessary changes to the markup to show the errors of a given element",
            "itemtype": "method",
            "name": "_showError",
            "params": [
                {
                    "name": "formElm",
                    "description": "The form element to be changed to show the errors",
                    "type": "DOMElement"
                },
                {
                    "name": "aFail",
                    "description": "An array with the errors found.",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 653,
            "description": "Clears the error of a given element. Normally executed before any validation, for all elements, as a reset.",
            "itemtype": "method",
            "name": "_clearErrors",
            "params": [
                {
                    "name": "formElm",
                    "description": "Form element to be cleared.",
                    "type": "DOMElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/1/lib.js",
            "line": 690,
            "description": "Removes unnecessary spaces to the left or right of a string",
            "itemtype": "method",
            "name": "_trim",
            "params": [
                {
                    "name": "stri",
                    "description": "String to be trimmed",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "String trimmed.",
                "type": "String|undefined"
            },
            "class": "Ink.UI.FormValidator",
            "module": "Ink.UI.FormValidator_1"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 9,
            "description": "Validation Functions to be used\nSome functions are a port from PHP, others are the 'best' solutions available",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 19,
            "description": "Checks if the value is actually defined and is not empty",
            "itemtype": "method",
            "name": "validationFunctions.required",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True case is defined, false if it's empty or not defined.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 30,
            "description": "Checks if the value has a minimum length",
            "itemtype": "method",
            "name": "validationFunctions.min_length",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "minSize",
                    "description": "Number of characters that the value at least must have.",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "True if the length of value is equal or bigger than the minimum chars defined. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 42,
            "description": "Checks if the value has a maximum length",
            "itemtype": "method",
            "name": "validationFunctions.max_length",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "maxSize",
                    "description": "Number of characters that the value at maximum can have.",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "True if the length of value is equal or smaller than the maximum chars defined. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 54,
            "description": "Checks if the value has an exact length",
            "itemtype": "method",
            "name": "validationFunctions.exact_length",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "exactSize",
                    "description": "Number of characters that the value must have.",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "True if the length of value is equal to the size defined. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 66,
            "description": "Checks if the value has a valid e-mail address",
            "itemtype": "method",
            "name": "validationFunctions.email",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid e-mail address. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 77,
            "description": "Checks if the value has a valid URL",
            "itemtype": "method",
            "name": "validationFunctions.url",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "fullCheck",
                    "description": "Flag that specifies if the value must be validated as a full url (with the protocol) or not.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "True if the URL is considered valid. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 90,
            "description": "Checks if the value is a valid IP. Supports ipv4 and ipv6",
            "itemtype": "method",
            "name": "validationFunctions.ip",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "ipType",
                    "description": "Type of IP to be validated. The values are: ipv4, ipv6. By default is ipv4.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid IP address. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 106,
            "description": "Checks if the value is a valid phone number. Supports several countries, based in the Ink.Util.Validator class.",
            "itemtype": "method",
            "name": "validationFunctions.phone",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "phoneType",
                    "description": "Country's initials to specify the type of phone number to be validated. Ex: 'AO'.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if it's a valid phone number. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 124,
            "description": "Checks if it's a valid credit card.",
            "itemtype": "method",
            "name": "validationFunctions.credit_card",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "cardType",
                    "description": "Type of credit card to be validated. The card types available are in the Ink.Util.Validator class.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid credit card number. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 140,
            "description": "Checks if the value is a valid date.",
            "itemtype": "method",
            "name": "validationFunctions.date",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "format",
                    "description": "Specific format of the date.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid date. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 152,
            "description": "Checks if the value only contains alphabetical values.",
            "itemtype": "method",
            "name": "validationFunctions.alpha",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "supportSpaces",
                    "description": "Allow whitespace",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "True if the value is alphabetical-only. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 194,
            "description": "Checks if the value only contains alphabetical and numerical characters.",
            "itemtype": "method",
            "name": "validationFunctions.alpha_numeric",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid alphanumerical. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 205,
            "description": "Checks if the value only contains alphabetical, dash or underscore characteres.",
            "itemtype": "method",
            "name": "validationFunctions.alpha_dashes",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 216,
            "description": "Checks if the value is a digit (an integer of length = 1).",
            "itemtype": "method",
            "name": "validationFunctions.digit",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid digit. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 227,
            "description": "Checks if the value is a valid integer.",
            "itemtype": "method",
            "name": "validationFunctions.integer",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "positive",
                    "description": "Flag that specifies if the integer is must be positive (unsigned).",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid integer. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 242,
            "description": "Checks if the value is a valid decimal number.",
            "itemtype": "method",
            "name": "validationFunctions.decimal",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "decimalSeparator",
                    "description": "Character that splits the integer part from the decimal one. By default is '.'.",
                    "type": "String"
                },
                {
                    "name": "decimalPlaces",
                    "description": "Maximum number of digits that the decimal part must have.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "leftDigits",
                    "description": "Maximum number of digits that the integer part must have, when provided.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if the value is a valid decimal number. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 260,
            "description": "Checks if it is a numeric value.",
            "itemtype": "method",
            "name": "validationFunctions.numeric",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "decimalSeparator",
                    "description": "Verifies if it's a valid decimal. Otherwise checks if it's a valid integer.",
                    "type": "String"
                },
                {
                    "name": "decimalPlaces",
                    "description": "(when the number is decimal) Maximum number of digits that the decimal part must have.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "leftDigits",
                    "description": "(when the number is decimal) Maximum number of digits that the integer part must have, when provided.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if the value is numeric. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 279,
            "description": "Checks if the value is in a specific range of values. The parameters after the first one are used for specifying the range, and are similar in function to python's range() function.",
            "itemtype": "method",
            "name": "validationFunctions.range",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "minValue",
                    "description": "Left limit of the range.",
                    "type": "String"
                },
                {
                    "name": "maxValue",
                    "description": "Right limit of the range.",
                    "type": "String"
                },
                {
                    "name": "multipleOf",
                    "description": "In case you want numbers that are only multiples of another number.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if the value is within the range. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 309,
            "description": "Checks if the value is a valid color.",
            "itemtype": "method",
            "name": "validationFunctions.color",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid color. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 320,
            "description": "Checks if the value matches the value of a different field.",
            "itemtype": "method",
            "name": "validationFunctions.matches",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "fieldToCompare",
                    "description": "Name or ID of the field to compare.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the values match. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 334,
            "description": "Error messages for the validation functions above",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 393,
            "description": "Constructor of a FormElement.\nThis type of object has particular methods to parse rules and validate them in a specific DOM Element.",
            "params": [
                {
                    "name": "element",
                    "description": "DOM Element",
                    "type": "DOMElement"
                },
                {
                    "name": "options",
                    "description": "Object with configuration options",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "FormElement object",
                "type": "FormElement"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 415,
            "description": "FormElement's prototype",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 420,
            "description": "Function to get the label that identifies the field.\nIf it can't find one, it will use the name or the id\n(depending on what is defined)",
            "itemtype": "method",
            "name": "_getLabel",
            "return": {
                "description": "Label to be used in the error messages",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 442,
            "description": "Function to parse a rules' string.\nEx: required|number|max_length[30]",
            "itemtype": "method",
            "name": "_parseRules",
            "params": [
                {
                    "name": "rules",
                    "description": "String with the rules",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 484,
            "description": "Function to add an error to the FormElement's 'errors' object.\nIt basically receives the rule where the error occurred, the parameters passed to it (if any)\nand the error message.\nThen it replaces some tokens in the message for a more 'custom' reading",
            "itemtype": "method",
            "name": "_addError",
            "params": [
                {
                    "name": "rule",
                    "description": "Rule that failed, or null if no rule was found.",
                    "type": "String|null"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 516,
            "description": "Function to retrieve the element's value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "The DOM Element's value",
                "type": "Mixed"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 548,
            "description": "Function that returns the constructed errors object.",
            "itemtype": "method",
            "name": "getErrors",
            "return": {
                "description": "Errors' object",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 559,
            "description": "Function that returns the DOM element related to it.",
            "itemtype": "method",
            "name": "getElement",
            "return": {
                "description": "DOM Element",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 570,
            "description": "Get other elements in the same form.",
            "itemtype": "method",
            "name": "getFormElements",
            "return": {
                "description": "A mapping of keys to other elements in this form.",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 581,
            "description": "Function used to validate the element based on the rules defined.\nIt parses the rules defined in the _options.rules property.",
            "itemtype": "method",
            "name": "validate",
            "return": {
                "description": "True if every rule was valid. False if one fails.",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 642,
            "description": "DOMElement of the <form> being validated",
            "itemtype": "property",
            "name": "_rootElement",
            "type": "{DOMElement}",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 650,
            "description": "Object that will gather the form elements by name",
            "itemtype": "property",
            "name": "_formElements",
            "type": "{Object}",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 658,
            "description": "Error message DOMElements",
            "itemtype": "property",
            "name": "_errorMessages",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 665,
            "description": "Array of elements marked with validation errors",
            "itemtype": "property",
            "name": "_markedErrorElements",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 672,
            "description": "Configuration options. Fetches the data attributes first, then the ones passed when executing the constructor.\nBy doing that, the latter will be the one with highest priority.",
            "itemtype": "property",
            "name": "_options",
            "type": "{Object}",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 699,
            "description": "Method used to set validation functions (either custom or ovewrite the existent ones)",
            "itemtype": "method",
            "name": "setRule",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the function. E.g. 'required'",
                    "type": "String"
                },
                {
                    "name": "errorMessage",
                    "description": "Error message to be displayed in case of returning false. E.g. 'Oops, you passed {param1} as parameter1, lorem ipsum dolor...'",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Function to be executed when calling this rule",
                    "type": "Function"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 718,
            "description": "Get the i18n object in charge of the error messages",
            "itemtype": "method",
            "name": "getI18n",
            "return": {
                "description": "The i18n object the FormValidator is using.",
                "type": "Ink.Util.I18n"
            },
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 728,
            "description": "Sets the I18n object for validation error messages",
            "itemtype": "method",
            "name": "setI18n",
            "params": [
                {
                    "name": "i18n",
                    "description": "The I18n object.",
                    "type": "Ink.Util.I18n"
                }
            ],
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 738,
            "description": "Add to the I18n dictionary. See `Ink.Util.I18n.append()` documentation.",
            "itemtype": "method",
            "name": "AppendI18n",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 747,
            "description": "Sets the language of the error messages. pt_PT and en_US are available, but you can add new languages by using append()\n\nSee the `Ink.Util.I18n.lang()` setter",
            "itemtype": "method",
            "name": "setLanguage",
            "params": [
                {
                    "name": "language",
                    "description": "The language to set i18n to."
                }
            ],
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 759,
            "description": "Method used to get the existing defined validation functions",
            "itemtype": "method",
            "name": "getRules",
            "return": {
                "description": "Object with the rules defined",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 776,
            "description": "Function that searches for the elements of the form, based in the\nthis._options.searchFor configuration.",
            "itemtype": "method",
            "name": "getElements",
            "return": {
                "description": "An object with the elements in the form, indexed by name/id",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 823,
            "description": "Runs the validate function of each FormElement in the this._formElements\nobject.\nAlso, based on the this._options.beforeValidation, this._options.onError\nand this._options.onSuccess, this callbacks are executed when defined.",
            "itemtype": "method",
            "name": "validate",
            "params": [
                {
                    "name": "event",
                    "description": "window.event object",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/FormValidator/2/lib.js",
            "line": 925,
            "description": "Returns the FormValidator's Object",
            "class": "Ink.UI.FormValidator_2",
            "module": "Ink.UI.FormValidator_2"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 52,
            "description": "Get elements, create more ImageQueries if selector finds more than one\n\n[improvement] This is a useful pattern. More UI modules could use it.",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 66,
            "description": "Default options, overriden by data-attributes if any.\nThe parameters are:",
            "params": [
                {
                    "name": "queries",
                    "description": "Array of objects that determine the label/name and its min-width to be applied.",
                    "type": "Array"
                },
                {
                    "name": "allowFirstLoad",
                    "description": "Boolean flag to allow the loading of the first element.",
                    "type": "Boolean"
                }
            ],
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 77,
            "description": "Determining the original basename (with the querystring) of the file.",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 93,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 113,
            "description": "Handles the resize event (as specified in the _init function)",
            "itemtype": "method",
            "name": "_onResize",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 126,
            "description": "Choosing the right src. The rule is:\n\n  \"If there is specifically defined in the query object, use that. Otherwise uses the global src.\"\n\nThe above rule applies to a retina src.",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 138,
            "description": "Injects the file variable for usage in the 'templating system' below",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 143,
            "description": "Since we allow the src to be a callback, let's run it and get the results.\nFor the inside, we're passing the element (img) being processed and the object of the selected\nquery.",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 155,
            "description": "Replace the values of the existing properties on the query object (except src and retina) in the\ndefined src and/or retina.",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 169,
            "description": "Queries are in a descendant order. We want to find the query with the highest width that fits\nthe viewport, therefore the first one.",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 174,
            "description": "Gets viewport width",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 193,
            "description": "Handles the element loading (img onload) event",
            "itemtype": "method",
            "name": "_onLoad",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/ImageQuery/1/lib.js",
            "line": 201,
            "description": "Since we allow a callback for this let's run it.",
            "class": "Ink.UI.ImageQuery",
            "module": "Ink.UI.ImageQuery_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 87,
            "description": "Width, height and markup really optional, as they can be obtained by the element",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 93,
            "description": "To add extra classes",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 99,
            "description": "Optional trigger properties",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 106,
            "description": "Remaining options",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 127,
            "description": "Modal Markup",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 147,
            "description": "Not in full markup mode, let's set the classes and css configurations",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 153,
            "description": "Applying the main css styles",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 172,
            "description": "First, will handle the least important: The dataset",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 179,
            "description": "Now, the most important, the initialization options",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 209,
            "description": "Responsible for repositioning the modal",
            "itemtype": "method",
            "name": "_reposition",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 220,
            "description": "Responsible for resizing the modal",
            "itemtype": "method",
            "name": "_onResize",
            "params": [
                {
                    "name": "runNow",
                    "description": "Its executed in the begining to resize/reposition accordingly to the viewport. But usually it's an event object.",
                    "type": "Boolean|Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 235,
            "description": "Timeout Resize Function",
            "itemtype": "method",
            "name": "_timeoutResizeFunction",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 242,
            "description": "Getting the current viewport size",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 270,
            "description": "Handle clicks on the shade element.",
            "itemtype": "method",
            "name": "_onShadeClick",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 304,
            "description": "Responsible for handling the escape key pressing.",
            "itemtype": "method",
            "name": "_onKeyDown",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 322,
            "description": "Responsible for setting the size of the modal (and position) based on the viewport.",
            "itemtype": "method",
            "name": "_resizeContainer",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 355,
            "description": "Responsible for 'disabling' the page scroll",
            "itemtype": "method",
            "name": "_disableScroll",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 368,
            "description": "PUBLIC API *",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 372,
            "description": "Display this Modal. Useful if you have initialized the modal",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "event",
                    "description": "(internal) In case its fired by the internal trigger.",
                    "type": "Event",
                    "optional": true
                }
            ],
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 392,
            "description": "Fallback to the old one",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 399,
            "description": "Setting the content of the modal",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 405,
            "description": "If any size has been user-defined, let's set them as max-width and max-height",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 437,
            "description": "Let's 'resize' it:",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 470,
            "description": "Dismisses the modal",
            "itemtype": "method",
            "name": "dismiss",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 520,
            "description": "Utility function to listen to the onTransmissionEnd event, or wait using setTimeouts\n\nSpecific to this._element",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 550,
            "description": "Removes the modal from the DOM",
            "itemtype": "method",
            "name": "destroy",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 560,
            "description": "Returns the content DOM element",
            "itemtype": "method",
            "name": "getContentElement",
            "return": {
                "description": "Modal main cointainer.",
                "type": "DOMElement"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Modal/1/lib.js",
            "line": 571,
            "description": "Replaces the content markup",
            "itemtype": "method",
            "name": "setContentMarkup",
            "params": [
                {
                    "name": "contentMarkup",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Modal",
            "module": "Ink.UI.Modal_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 11,
            "description": "Function to create the pagination anchors",
            "itemtype": "method",
            "name": "genAel",
            "params": [
                {
                    "name": "inner",
                    "description": "HTML to be placed inside the anchor.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Anchor created",
                "type": "DOMElement"
            },
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 135,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 153,
            "description": "Responsible for setting listener in the 'click' event of the Pagination element.",
            "itemtype": "method",
            "name": "_observe",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 163,
            "description": "Updates the markup everytime there's a change in the Pagination object.",
            "itemtype": "method",
            "name": "_updateItems",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 227,
            "description": "Returns the top element for the gallery DOM representation",
            "itemtype": "method",
            "name": "_generateMarkup",
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "DOMElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 294,
            "description": "Click handler",
            "itemtype": "method",
            "name": "_onClick",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 335,
            "description": "Allows you to subscribe to the onChange event",
            "itemtype": "method",
            "name": "setOnChange",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback called with `(thisPaginator, newPageNumber)`.",
                    "type": "Function"
                }
            ],
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 348,
            "description": "PUBLIC API *",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 352,
            "description": "Sets the number of pages",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "sz",
                    "description": "number of pages",
                    "type": "Number"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 369,
            "description": "Calculate the number of pages, then call setSize().",
            "params": [
                {
                    "name": "setSizeInItems",
                    "description": ""
                },
                {
                    "name": "totalItems",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "itemsPerPage",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 381,
            "description": "Sets the current page",
            "itemtype": "method",
            "name": "setCurrent",
            "params": [
                {
                    "name": "nr",
                    "description": "sets the current page to given number",
                    "type": "Number"
                },
                {
                    "name": "isRelative",
                    "description": "trueish to set relative change instead of absolute (default)",
                    "type": "Boolean"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 420,
            "description": "Returns the number of pages",
            "itemtype": "method",
            "name": "getSize",
            "return": {
                "description": "Number of pages",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 431,
            "description": "Returns current page",
            "itemtype": "method",
            "name": "getCurrent",
            "return": {
                "description": "Current page",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 442,
            "description": "Returns true iif at first page",
            "itemtype": "method",
            "name": "isFirst",
            "return": {
                "description": "True if at first page",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 453,
            "description": "Returns true iif at last page",
            "itemtype": "method",
            "name": "isLast",
            "return": {
                "description": "True if at last page",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 464,
            "description": "Returns true iif has prior pages",
            "itemtype": "method",
            "name": "hasPrevious",
            "return": {
                "description": "True if has prior pages",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 475,
            "description": "Returns true iif has pages ahead",
            "itemtype": "method",
            "name": "hasNext",
            "return": {
                "description": "True if has pages ahead",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 486,
            "description": "Returns true iif has prior set of page(s)",
            "itemtype": "method",
            "name": "hasPreviousPage",
            "return": {
                "description": "Returns true iif has prior set of page(s)",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 497,
            "description": "Returns true iif has set of page(s) ahead",
            "itemtype": "method",
            "name": "hasNextPage",
            "return": {
                "description": "Returns true iif has set of page(s) ahead",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/Pagination/1/lib.js",
            "line": 508,
            "description": "Unregisters the component and removes its markup from the DOM",
            "itemtype": "method",
            "name": "destroy",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Pagination",
            "module": "Ink.UI.Pagination_1"
        },
        {
            "file": "Ink/UI/ProgressBar/1/lib.js",
            "line": 65,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.ProgressBar",
            "module": "Ink.UI.ProgressBar_1"
        },
        {
            "file": "Ink/UI/ProgressBar/1/lib.js",
            "line": 83,
            "description": "Sets the value of the Progressbar",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "newValue",
                    "description": "Numeric value, between 0 and 100, that represents the percentage of the bar.",
                    "type": "Number"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.ProgressBar",
            "module": "Ink.UI.ProgressBar_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 39,
            "description": "Sets the speed of the scrolling",
            "itemtype": "property",
            "name": "speed",
            "type": "{Number}",
            "readonly": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 49,
            "description": "Returns the Y position of an element, relative to the document",
            "itemtype": "method",
            "name": "getTop",
            "params": [
                {
                    "name": "d",
                    "description": "DOMElement to get the Y position from",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "Y position of div 'd'",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 64,
            "description": "Returns the current scroll position",
            "itemtype": "method",
            "name": "scrollTop",
            "return": {
                "description": "Current scroll position",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 87,
            "description": "Attaches an event for an element",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "el",
                    "description": "DOMElement to make the listening of the event",
                    "type": "DOMElement"
                },
                {
                    "name": "event",
                    "description": "Event name to be listened",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Callback function to run when the event is triggered.",
                    "type": "DOMElement"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 102,
            "description": "Kill an event of an element",
            "itemtype": "method",
            "name": "end",
            "params": [
                {
                    "name": "e",
                    "description": "Event to be killed/stopped",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 116,
            "description": "Moves the scrollbar to the target element. This is the function\nwhich animates the scroll position bit by bit. It calls itself in\nthe end through requestAnimationFrame",
            "itemtype": "method",
            "name": "scroll",
            "params": [
                {
                    "name": "d",
                    "description": "Y coordinate value to stop",
                    "type": "Number"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 148,
            "description": "Has smooth scrolling applied to relevant elements upon page load.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "selector",
                    "description": "Selector string for finding links with smooth scrolling enabled.",
                    "optional": true,
                    "optdefault": "'a.scrollableLink,a.ink-smooth-scroll'"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 160,
            "description": "This method extracts all the anchors and validates them as # and attaches the events",
            "itemtype": "method",
            "name": "render",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 179,
            "description": "Click handler",
            "itemtype": "method",
            "name": "onClick",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SmoothScroller/1/lib.js",
            "line": 214,
            "description": "Called when the scroll movement is done. Updates browser address.",
            "class": "Ink.UI.SmoothScroller",
            "module": "Ink.UI.SmoothScroller_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 78,
            "description": "Init function called by the constructor.",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 93,
            "description": "Sets the event handlers.",
            "itemtype": "method",
            "name": "_observe",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 108,
            "description": "Mousedown or touchstart handler",
            "itemtype": "method",
            "name": "_onDown",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 126,
            "description": "Mousemove or touchmove handler",
            "itemtype": "method",
            "name": "_onMove",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 138,
            "description": "Mouseup or touchend handler",
            "itemtype": "method",
            "name": "_onUp",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 154,
            "description": "Adds the CSS classes to interactive elements",
            "itemtype": "method",
            "name": "_addMovingClasses",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 166,
            "description": "Removes the CSS classes from interactive elements",
            "itemtype": "method",
            "name": "_removeMovingClasses",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 178,
            "description": "Moves the placeholder element relative to the target element",
            "itemtype": "method",
            "name": "_movePlaceholder",
            "params": [
                {
                    "name": "target_position",
                    "description": "",
                    "type": "Element"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 211,
            "description": "PUBLIC API *",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 215,
            "description": "Unregisters the component and removes its markup from the DOM",
            "itemtype": "method",
            "name": "destroy",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 223,
            "description": "Visually stops moving. Removes the placeholder as well as the styling classes.",
            "itemtype": "method",
            "name": "_movePlaceholder",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/SortableList/1/lib.js",
            "line": 236,
            "description": "Validation method for the move handler",
            "itemtype": "method",
            "name": "_movePlaceholder",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.SortableList",
            "module": "Ink.UI.SortableList_1"
        },
        {
            "file": "Ink/UI/Spy/1/lib.js",
            "line": 131,
            "description": "Setting default options and - if needed - overriding it with the data attributes",
            "class": "Ink.UI.Spy",
            "module": "Ink.UI.Spy_1"
        },
        {
            "file": "Ink/UI/Spy/1/lib.js",
            "line": 139,
            "description": "In case options have been defined when creating the instance, they've precedence",
            "class": "Ink.UI.Spy",
            "module": "Ink.UI.Spy_1"
        },
        {
            "file": "Ink/UI/Spy/1/lib.js",
            "line": 150,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Spy",
            "module": "Ink.UI.Spy_1"
        },
        {
            "file": "Ink/UI/Stacker/1/lib.js",
            "line": 140,
            "description": "Add an item to the end of your stacks. Call `reloadItems()` when you are done adding items.",
            "itemtype": "method",
            "name": "addItem",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "DOMElement"
                }
            ],
            "class": "Ink.UI.Stacker_1",
            "module": "Ink.UI.Stacker_1"
        },
        {
            "file": "Ink/UI/Stacker/1/lib.js",
            "line": 149,
            "description": "Update the layout of your items.\n\nCall this when:\n\n - The width has changed, but not because of the window resizing.\n - You used addItem to add some items",
            "itemtype": "method",
            "name": "reloadItems",
            "class": "Ink.UI.Stacker_1",
            "module": "Ink.UI.Stacker_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 73,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 87,
            "description": "Returns whether the sticky is disabled in the current view",
            "itemtype": "method",
            "name": "isDisabledInLayout",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 99,
            "description": "Scroll handler.",
            "itemtype": "method",
            "name": "_onScroll",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 140,
            "description": "Have the sticky stick nowhere, to the screen, or to the bottom.",
            "itemtype": "method",
            "name": "_stickTo",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 177,
            "description": "\"unstick\" the sticky from the screen or bottom of the document",
            "itemtype": "method",
            "name": "_unstick",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 202,
            "description": "Resize handler",
            "itemtype": "method",
            "name": "_onResize",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 213,
            "description": "Recalculate the \"dims\" cache, or get it.\n\nThe \"dims\" cache is to be set to null when the element is liable to have changed dimensions\n\n(eg: on resize)",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 248,
            "description": "Set style.height and style.width, but not if options.inlineDimensions === false",
            "itemtype": "method",
            "name": "_inlineDimensions",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Sticky/1/lib.js",
            "line": 261,
            "description": "Get the distance between the bottom of the element and the bottom of the page",
            "itemtype": "method",
            "name": "_getBottomOffset",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Sticky",
            "module": "Ink.UI.Sticky_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 193,
            "description": "Get the root element",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 220,
            "description": "Checking if it's in markup mode or endpoint mode",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 232,
            "description": "Initializing variables",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 258,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 265,
            "description": "If not is in markup mode, we have to do the initial request\nto get the first data and the headers",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 276,
            "description": "Getting the table's data",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 284,
            "description": "Set pagination if options tell us to",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 291,
            "description": "Add the classes in this._options.tdClassNames to our table headers.",
            "itemtype": "method",
            "name": "_addHeadersClasses",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 309,
            "description": "Click handler. This will mainly handle the sorting (when you click in the headers)",
            "itemtype": "method",
            "name": "_onThClick",
            "params": [
                {
                    "name": "event",
                    "description": "Event obj",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 384,
            "description": "Applies and/or changes the CSS classes in order to show the right columns",
            "itemtype": "method",
            "name": "_paginate",
            "params": [
                {
                    "name": "page",
                    "description": "Current page",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 431,
            "description": "Sorts by a specific column.",
            "itemtype": "method",
            "name": "_sort",
            "params": [
                {
                    "name": "index",
                    "description": "Column number (starting at 0)",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 474,
            "description": "Assembles the headers markup",
            "itemtype": "method",
            "name": "_createHeadersFromJson",
            "params": [
                {
                    "name": "headers",
                    "description": "Key-value object that contains the fields as keys, their configuration (label and sorting ability) as value",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 511,
            "description": "Reset the sort order as marked on the table headers to \"none\"",
            "itemtype": "method",
            "name": "_resetSortOrder",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 518,
            "description": "Setting the sortable columns and its event listeners",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 529,
            "description": "This method gets the rows from AJAX and places them as <tr> and <td>",
            "itemtype": "method",
            "name": "_createRowsFromJSON",
            "params": [
                {
                    "name": "rows",
                    "description": "Array of objects with the data to be showed",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 613,
            "description": "Sets the endpoint. Useful for changing the endpoint in runtime.",
            "itemtype": "method",
            "name": "_setEndpoint",
            "params": [
                {
                    "name": "endpoint",
                    "description": "New endpoint",
                    "type": "String"
                }
            ],
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 628,
            "description": "Sets the instance's pagination, if necessary.\n\nPrecondition: this._totalRows needs to be known.",
            "itemtype": "method",
            "name": "_setPagination",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 640,
            "description": "Fetch pagination from options. Can be a selector string, an element or a Pagination instance.",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 674,
            "description": "Method to choose which is the best way to get the data based on the endpoint:\n    - AJAX\n    - JSONP",
            "itemtype": "method",
            "name": "_getData",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 696,
            "description": "Return an object describing sort order { field: [field name] ,\norder: [\"asc\" or \"desc\"] }, or null if there is no sorting\ngoing on.",
            "itemtype": "method",
            "name": "_getSortOrder",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Table/1/lib.js",
            "line": 749,
            "description": "Gets the data via AJAX and calls this._onAjaxSuccess with the response.\n\nWill call options.getDataFromEndpoint( Uri, callback ) if available.",
            "params": [
                {
                    "name": "endpointUri",
                    "description": "Endpoint to get data from, after processing."
                }
            ],
            "class": "Ink.UI.Table",
            "module": "Ink.UI.Table_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 74,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 99,
            "description": "Initialization of the tabs, hides all content before setting the active tab",
            "itemtype": "method",
            "name": "_initializeDom",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 111,
            "description": "Subscribe events",
            "itemtype": "method",
            "name": "_observe",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 130,
            "description": "Run at instantiation, to determine which is the first active tab\nfallsback from window.location.href to options.active to the first not disabled tab",
            "itemtype": "method",
            "name": "_setFirstActive",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 147,
            "description": "Changes to the desired tab",
            "itemtype": "method",
            "name": "_changeTab",
            "params": [
                {
                    "name": "link",
                    "description": "anchor linking to the content container",
                    "type": "DOMElement"
                },
                {
                    "name": "runCallbacks",
                    "description": "defines if the callbacks should be run or not",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 185,
            "description": "Tab clicked handler",
            "itemtype": "method",
            "name": "_onTabClicked",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 216,
            "description": "Disabled tab clicked handler",
            "itemtype": "method",
            "name": "_onDisabledTabClicked",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 227,
            "description": "Resize handler",
            "itemtype": "method",
            "name": "_onResize",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 251,
            "description": "Aux Functions *",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 255,
            "description": "Allows the hash to be passed with or without the cardinal sign",
            "itemtype": "method",
            "name": "_hashify",
            "params": [
                {
                    "name": "hash",
                    "description": "the string to be hashified",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Resulting hash",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 270,
            "description": "Returns the anchor with the desired href",
            "itemtype": "method",
            "name": "_findLinkBuHref",
            "params": [
                {
                    "name": "href",
                    "description": "the href to be found on the returned link",
                    "type": "String"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "String|undefined"
            },
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 285,
            "description": "PUBLIC API *",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 289,
            "description": "Changes to the desired tag",
            "itemtype": "method",
            "name": "changeTab",
            "params": [
                {
                    "name": "selector",
                    "description": "the id of the desired tab or the link that links to it",
                    "type": "String|DOMElement"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 304,
            "description": "Disables the desired tag",
            "itemtype": "method",
            "name": "disable",
            "params": [
                {
                    "name": "selector",
                    "description": "the id of the desired tab or the link that links to it",
                    "type": "String|DOMElement"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 321,
            "description": "Enables the desired tag",
            "itemtype": "method",
            "name": "enable",
            "params": [
                {
                    "name": "selector",
                    "description": "the id of the desired tab or the link that links to it",
                    "type": "String|DOMElement"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 338,
            "description": "Getters *",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 342,
            "description": "Returns the active tab id",
            "itemtype": "method",
            "name": "activeTab",
            "return": {
                "description": "ID of the active tab.",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 353,
            "description": "Returns the current active Menu LI",
            "itemtype": "method",
            "name": "activeMenuTab",
            "return": {
                "description": "Active menu LI.",
                "type": "DOMElement"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 364,
            "description": "Returns the current active Menu anchorChanges to the desired tag",
            "itemtype": "method",
            "name": "activeMenuLink",
            "return": {
                "description": "Active menu link",
                "type": "DOMElement"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 375,
            "description": "Returns the current active Content Tab",
            "itemtype": "method",
            "name": "activeContentTab",
            "return": {
                "description": "Active Content Tab",
                "type": "DOMElement"
            },
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Tabs/1/lib.js",
            "line": 386,
            "description": "Unregisters the component and removes its markup from the DOM",
            "itemtype": "method",
            "name": "destroy",
            "access": "public",
            "tagname": "",
            "class": "Ink.UI.Tabs",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/TagField/1/lib.js",
            "line": 42,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.TagField",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/TagField/1/lib.js",
            "line": 195,
            "description": "When the user presses backspace twice on the empty input, we delete the last tag on the field.",
            "itemtype": "method",
            "name": "onBackspaceKeyDown",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.TagField",
            "module": "Ink.UI.Tabs_1"
        },
        {
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 98,
            "description": "Init function called by the constructor",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Toggle",
            "module": "Ink.UI.Toggle_1"
        },
        {
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 126,
            "itemtype": "method",
            "name": "_bindEvents",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Toggle",
            "module": "Ink.UI.Toggle_1"
        },
        {
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 153,
            "description": "Event handler. It's responsible for handling the `triggerEvent` as defined in the options.\n\nThis will trigger the toggle.",
            "itemtype": "method",
            "name": "_onTriggerEvent",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Toggle",
            "module": "Ink.UI.Toggle_1"
        },
        {
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 187,
            "description": "Be compatible with accordions",
            "itemtype": "method",
            "name": "_updateAccordion",
            "class": "Ink.UI.Toggle",
            "module": "Ink.UI.Toggle_1"
        },
        {
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 210,
            "description": "Click handler. Will handle clicks outside the toggle component.",
            "itemtype": "method",
            "name": "_onOutsideClick",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.Toggle",
            "module": "Ink.UI.Toggle_1"
        },
        {
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 240,
            "description": "Sets the state of the toggle. (on/off)",
            "params": [
                {
                    "name": "on",
                    "description": "New state (on/off)",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "setState",
            "class": "Ink.UI.Toggle",
            "module": "Ink.UI.Toggle_1"
        },
        {
            "file": "Ink/UI/Toggle/1/lib.js",
            "line": 260,
            "description": "Gets the state of the toggle. (on/off)",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "whether the toggle is toggled on.",
                "type": "Boolean"
            },
            "class": "Ink.UI.Toggle",
            "module": "Ink.UI.Toggle_1"
        },
        {
            "file": "Ink/UI/Tooltip/1/lib.js",
            "line": 110,
            "description": "Destroys the tooltips created by this instance",
            "itemtype": "method",
            "name": "destroy",
            "class": "Ink.UI.Tooltip",
            "module": "Ink.UI.Tooltip_1"
        },
        {
            "file": "Ink/UI/Tooltip/1/lib.js",
            "line": 314,
            "description": "Get a value for \"where\" (left/right/up/down) which doesn't put the\ntooltip off the screen",
            "itemtype": "method",
            "name": "_getWhereValueInsideViewport",
            "params": [
                {
                    "name": "where",
                    "description": "\"where\" value which was given by the user and we might change",
                    "type": "String"
                },
                {
                    "name": "bbox",
                    "description": "A bounding box like what you get from getBoundingClientRect ({top, bottom, left, right}) with pixel positions from the top left corner of the viewport.",
                    "type": "BoundingBox"
                },
                {
                    "name": "viewport",
                    "description": "Bounding box for the viewport. \"top\" and \"left\" are omitted because these coordinates are relative to the top-left corner of the viewport so they are zero.",
                    "type": "BoundingBox"
                }
            ],
            "note": ": we can't use getBoundingClientRect in this case because it returns {0,0,0,0} on our uncreated tooltip.",
            "class": "Ink.UI.Tooltip",
            "module": "Ink.UI.Tooltip_1"
        },
        {
            "file": "Ink/UI/TreeView/1/lib.js",
            "line": 81,
            "description": "Init function called by the constructor. Sets the necessary event handlers.",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.TreeView",
            "module": "Ink.UI.TreeView_1"
        },
        {
            "file": "Ink/UI/TreeView/1/lib.js",
            "line": 162,
            "description": "Handles the click event (as specified in the _init function).",
            "itemtype": "method",
            "name": "_onClick",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Ink.UI.TreeView",
            "module": "Ink.UI.TreeView_1"
        },
        {
            "file": "Ink/UI/TreeView/1/lib.js",
            "line": 170,
            "description": "Summary:\nIf the clicked element is a \"node\" as defined in the options, will check if it has any \"child\".\nIf so, will toggle its state and stop the event's default behavior if the stopDefault option is true.",
            "class": "Ink.UI.TreeView",
            "module": "Ink.UI.TreeView_1"
        },
        {
            "file": "Ink/UI/Upload/1/lib.js",
            "line": 113,
            "itemtype": "method",
            "name": "? Create new queue list",
            "type": "Public",
            "params": [
                {
                    "name": "list",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "function",
                    "description": "to iterate on items",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "list id",
                "type": "Object"
            },
            "class": "Ink.Util.Array",
            "module": "Ink.UI.TreeView_1"
        },
        {
            "file": "Ink/UI/Upload/1/lib.js",
            "line": 143,
            "itemtype": "method",
            "name": "? Delete list",
            "type": "Public",
            "params": [
                {
                    "name": "List",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "removed list",
                "type": "Object"
            },
            "class": "Ink.Util.Array",
            "module": "Ink.UI.TreeView_1"
        },
        {
            "file": "Ink/UI/Upload/1/lib.js",
            "line": 169,
            "itemtype": "method",
            "name": "? add an item to a list",
            "type": "Public",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "pid",
                "type": "Number"
            },
            "class": "Ink.Util.Array",
            "module": "Ink.UI.TreeView_1"
        },
        {
            "file": "Ink/UI/Upload/1/lib.js",
            "line": 191,
            "itemtype": "method",
            "name": "? view list",
            "type": "Public",
            "params": [
                {
                    "name": "list",
                    "description": "id",
                    "type": "Number"
                },
                {
                    "name": "process",
                    "description": "id",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "item",
                "type": "Object"
            },
            "class": "Ink.Util.Array",
            "module": "Ink.UI.TreeView_1"
        },
        {
            "file": "Ink/UI/Upload/1/lib.js",
            "line": 206,
            "itemtype": "method",
            "name": "? remove an item",
            "type": "Public",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "removed item or false if not found",
                "type": "Object|Boolean"
            },
            "class": "Ink.Util.Array",
            "module": "Ink.UI.TreeView_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 21,
            "description": "Checks if value exists in array",
            "itemtype": "method",
            "name": "inArray",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                },
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "True if value exists in the array",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray = [ 'value1', 'value2', 'value3' ];\n        if( InkArray.inArray( 'value2', testArray ) === true ){\n            console.log( \"Yep it's in the array.\" );\n        } else {\n            console.log( \"No it's NOT in the array.\" );\n        }\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 51,
            "description": "Sorts an array of object by an object property",
            "itemtype": "method",
            "name": "sortMulti",
            "params": [
                {
                    "name": "arr",
                    "description": "array of objects to sort",
                    "type": "Array"
                },
                {
                    "name": "key",
                    "description": "property to sort by",
                    "type": "String"
                }
            ],
            "return": {
                "description": "False if it's not an array, returns a sorted array if it's an array.",
                "type": "Array|Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray = [\n            { 'myKey': 'value1' },\n            { 'myKey': 'value2' },\n            { 'myKey': 'value3' }\n        ];\n\n        InkArray.sortMulti( testArray, 'myKey' );\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 85,
            "description": "Returns the associated key of an array value",
            "itemtype": "method",
            "name": "keyValue",
            "params": [
                {
                    "name": "value",
                    "description": "Value to search for",
                    "type": "String"
                },
                {
                    "name": "arr",
                    "description": "Array where the search will run",
                    "type": "Array"
                },
                {
                    "name": "first",
                    "description": "Flag that determines if the search stops at first occurrence. It also returns an index number instead of an array of indexes.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "False if not exists | number if exists and 3rd input param is true | array if exists and 3rd input param is not set or it is !== true",
                "type": "Boolean|Number|Array"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray = [ 'value1', 'value2', 'value3', 'value2' ];\n        console.log( InkArray.keyValue( 'value2', testArray, true ) ); // Result: 1\n        console.log( InkArray.keyValue( 'value2', testArray ) ); // Result: [1, 3]\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 119,
            "description": "Returns the array shuffled, false if the param is not an array",
            "itemtype": "method",
            "name": "shuffle",
            "params": [
                {
                    "name": "arr",
                    "description": "Array to shuffle",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "False if not an array | Array shuffled",
                "type": "Boolean|Number|Array"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray = [ 'value1', 'value2', 'value3', 'value2' ];\n        console.log( InkArray.shuffle( testArray ) ); // Result example: [ 'value3', 'value2', 'value2', 'value1' ]\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 148,
            "description": "Runs a function through each of the elements of an array",
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "arr",
                    "description": "Array to be cycled/iterated",
                    "type": "Array"
                },
                {
                    "name": "cb",
                    "description": "The function receives as arguments the value, index and array.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Array iterated.",
                "type": "Array"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray = [ 'value1', 'value2', 'value3', 'value2' ];\n        InkArray.forEach( testArray, function( value, index, arr ){\n            console.log( 'The value is: ' + value + ' | The index is: ' + index );\n        });\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 174,
            "description": "Alias for backwards compatibility. See forEach",
            "itemtype": "method",
            "name": "forEach",
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 183,
            "description": "Run a `map` function for each item in the array. The function will receive each item as argument and its return value will change the corresponding array item.",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "array",
                    "description": "The array to map over",
                    "type": "Array"
                },
                {
                    "name": "map",
                    "description": "The map function. Will take `(item, index, array)` and `this` will be the `context` argument.",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "Object to be `this` in the map function.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "example": [
                "\n     InkArray.map([1, 2, 3, 4], function (item) {\n         return item + 1;\n     }); // -> [2, 3, 4, 5]"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 206,
            "description": "Run a test function through all the input array. Items which pass the test function (for which the test function returned `true`) are kept in the array. Other items are removed.",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "test",
                    "description": "A test function taking `(item, index, array)`",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "Object to be `this` in the test function.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "filtered array"
            },
            "example": [
                "\n     InkArray.filter([1, 2, 3, 4, 5], function (val) {\n         return val > 2;\n     })  // -> [3, 4, 5]"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 233,
            "description": "Runs a callback function, which should return true or false.\nIf one of the 'runs' returns true, it will return. Otherwise if none returns true, it will return false.\nSee more at: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/some (MDN)",
            "itemtype": "method",
            "name": "some",
            "params": [
                {
                    "name": "arr",
                    "description": "The array you walk to iterate through",
                    "type": "Array"
                },
                {
                    "name": "cb",
                    "description": "The callback that will be called on the array's elements. It receives the value, the index and the array as arguments.",
                    "type": "Function"
                },
                {
                    "name": "Context",
                    "description": "object of the callback function",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True if the callback returns true at any point, false otherwise",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray1 = [ 10, 20, 50, 100, 30 ];\n        var testArray2 = [ 1, 2, 3, 4, 5 ];\n\n        function myTestFunction( value, index, arr ){\n            if( value > 90 ){\n                return true;\n            }\n            return false;\n        }\n        console.log( InkArray.some( testArray1, myTestFunction, null ) ); // Result: true\n        console.log( InkArray.some( testArray2, myTestFunction, null ) ); // Result: false\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 277,
            "description": "Returns an array containing every item that is shared between the two given arrays",
            "itemtype": "method",
            "name": "intersect",
            "params": [
                {
                    "name": "arr",
                    "description": "Array1 to be intersected with Array2",
                    "type": "Array"
                },
                {
                    "name": "arr",
                    "description": "Array2 to be intersected with Array1",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Empty array if one of the arrays is false (or do not intersect) | Array with the intersected values",
                "type": "Array"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray1 = [ 'value1', 'value2', 'value3' ];\n        var testArray2 = [ 'value2', 'value3', 'value4', 'value5', 'value6' ];\n        console.log( InkArray.intersect( testArray1,testArray2 ) ); // Result: [ 'value2', 'value3' ]\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 310,
            "description": "Convert lists type to type array",
            "itemtype": "method",
            "name": "convert",
            "params": [
                {
                    "name": "arr",
                    "description": "Array to be converted",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Array resulting of the conversion",
                "type": "Array"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray = [ 'value1', 'value2' ];\n        testArray.myMethod = function(){\n            console.log('stuff');\n        }\n\n        console.log( InkArray.convert( testArray ) ); // Result: [ 'value1', 'value2' ]\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 332,
            "description": "Insert value into the array on specified idx",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "arr",
                    "description": "Array where the value will be inserted",
                    "type": "Array"
                },
                {
                    "name": "idx",
                    "description": "Index of the array where the value should be inserted",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "Value to be inserted",
                    "type": "Mixed"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray = [ 'value1', 'value2' ];\n        console.log( InkArray.insert( testArray, 1, 'value3' ) ); // Result: [ 'value1', 'value3', 'value2' ]\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/Array/1/lib.js",
            "line": 351,
            "description": "Remove a range of values from the array",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "arr",
                    "description": "Array where the value will be inserted",
                    "type": "Array"
                },
                {
                    "name": "from",
                    "description": "Index of the array where the removal will start removing.",
                    "type": "Number"
                },
                {
                    "name": "rLen",
                    "description": "Number of items to be removed from the index onwards.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "An array with the remaining values",
                "type": "Array"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Array_1'], function( InkArray ){\n        var testArray = [ 'value1', 'value2', 'value3', 'value4', 'value5' ];\n        console.log( InkArray.remove( testArray, 1, 3 ) ); // Result: [ 'value1', 'value4', 'value5' ]\n    });"
            ],
            "class": "Ink.Util.Array",
            "module": "Ink.Util.Array_1"
        },
        {
            "file": "Ink/Util/BinPack/1/lib.js",
            "line": 235,
            "itemtype": "method",
            "name": "binPack",
            "params": [
                {
                    "name": "o",
                    "description": "options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "blocks",
                            "description": "array of items with w and h integer attributes.",
                            "type": "Object[]"
                        },
                        {
                            "name": "dimensions",
                            "description": "if passed, container has fixed dimensions",
                            "type": "Number[2]",
                            "optional": true
                        },
                        {
                            "name": "sorter",
                            "description": "sorter function. one of: random, height, width, area, maxside",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "\n    * {Number[2]} dimensions - resulted container size,\n    * {Number}    filled     - filled ratio,\n    * {Object[]}  fitted,\n    * {Object[]}  unfitted,\n    * {Object[]}  blocks",
                "type": "Object"
            },
            "static": 1,
            "class": "Ink.Util.BinPack",
            "module": "Ink.Util.BinPack_1"
        },
        {
            "file": "Ink/Util/Cookie/1/lib.js",
            "line": 19,
            "description": "Gets an object with current page cookies",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the name is specified, it returns the value related to that property. Otherwise it returns the full cookie object",
                "type": "String|Object"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Cookie_1'], function( InkCookie ){\n        var myCookieValue = InkCookie.get('someVarThere');\n        console.log( myCookieValue ); // This will output the value of the cookie 'someVarThere', from the cookie object.\n    });"
            ],
            "class": "Ink.Util.Cookie",
            "module": "Ink.Util.Cookie_1"
        },
        {
            "file": "Ink/Util/Cookie/1/lib.js",
            "line": 62,
            "description": "Sets a cookie",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "name",
                    "description": "Cookie name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Cookie value",
                    "type": "String"
                },
                {
                    "name": "expires",
                    "description": "Number to add to current Date in seconds",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "path",
                    "description": "Path to sets cookie (default '/')",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "domain",
                    "description": "Domain to sets cookie (default current hostname)",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "secure",
                    "description": "True if wants secure, default 'false'",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Cookie_1'], function( InkCookie ){\n        var expireDate = new Date( 2014,00,01, 0,0,0);\n        InkCookie.set( 'someVarThere', 'anyValueHere', expireDate.getTime() );\n    });"
            ],
            "class": "Ink.Util.Cookie",
            "module": "Ink.Util.Cookie_1"
        },
        {
            "file": "Ink/Util/Cookie/1/lib.js",
            "line": 135,
            "description": "Delete a cookie",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "cookieName",
                    "description": "Cookie name",
                    "type": "String"
                },
                {
                    "name": "path",
                    "description": "Path of the cookie (default '/')",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "domain",
                    "description": "Domain of the cookie (default current hostname)",
                    "type": "String",
                    "optional": true
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Cookie_1'], function( InkCookie ){\n        InkCookie.remove( 'someVarThere' );\n    });"
            ],
            "class": "Ink.Util.Cookie",
            "module": "Ink.Util.Cookie_1"
        },
        {
            "file": "Ink/Util/Date/1/lib.js",
            "line": 19,
            "description": "Function that returns the string representation of the month [PT only]",
            "itemtype": "method",
            "name": "_months",
            "params": [
                {
                    "name": "index",
                    "description": "Month javascript (0 to 11)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The month's name",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    console.log( InkDate._months(0) ); // Result: Janeiro"
            ],
            "class": "Ink.Util.Date",
            "module": "Ink.Util.Date_1"
        },
        {
            "file": "Ink/Util/Date/1/lib.js",
            "line": 35,
            "description": "Function that returns the month [PT only] ( 0 to 11 )",
            "itemtype": "method",
            "name": "_iMonth",
            "params": [
                {
                    "name": "month",
                    "description": "Month javascript (0 to 11)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The month's number",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    console.log( InkDate._iMonth('maio') ); // Result: 4"
            ],
            "class": "Ink.Util.Date",
            "module": "Ink.Util.Date_1"
        },
        {
            "file": "Ink/Util/Date/1/lib.js",
            "line": 77,
            "description": "Function that returns the representation the day of the week [PT Only]",
            "itemtype": "method",
            "name": "_wDays",
            "params": [
                {
                    "name": "index",
                    "description": "Week's day index",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The week's day name",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    console.log( InkDate._wDays(0) ); // Result: Domingo"
            ],
            "class": "Ink.Util.Date",
            "module": "Ink.Util.Date_1"
        },
        {
            "file": "Ink/Util/Date/1/lib.js",
            "line": 93,
            "description": "Function that returns day of the week in javascript 1 to 7",
            "itemtype": "method",
            "name": "_iWeek",
            "params": [
                {
                    "name": "week",
                    "description": "Week's day name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The week's day index",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    console.log( InkDate._iWeek('quarta') ); // Result: 3"
            ],
            "class": "Ink.Util.Date",
            "module": "Ink.Util.Date_1"
        },
        {
            "file": "Ink/Util/Date/1/lib.js",
            "line": 125,
            "description": "Function that returns the number of days of a given month (m) on a given year (y)",
            "itemtype": "method",
            "name": "_daysInMonth",
            "params": [
                {
                    "name": "_m",
                    "description": "Month",
                    "type": "Number"
                },
                {
                    "name": "_y",
                    "description": "Year",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Number of days of a give month on a given year",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    console.log( InkDate._daysInMonth(2,2013) ); // Result: 28"
            ],
            "class": "Ink.Util.Date",
            "module": "Ink.Util.Date_1"
        },
        {
            "file": "Ink/Util/Date/1/lib.js",
            "line": 162,
            "description": "Function that works exactly as php date() function\nWorks like PHP 5.2.2 <a href=\"http://php.net/manual/en/function.date.php\" target=\"_blank\">PHP Date function</a>",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "format",
                    "description": "- as the string in which the date it will be formatted - mandatory",
                    "type": "String"
                },
                {
                    "name": "_date",
                    "description": "- the date to format. If undefined it will do it on now() date. Can receive unix timestamp or a date object",
                    "type": "Date",
                    "optional": true
                }
            ],
            "return": {
                "description": "Formatted date",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    <script>\n        Ink.requireModules( ['Ink.Util.Date_1'], function( InkDate ){\n            console.log( InkDate.get('Y-m-d') ); // Result (at the time of writing): 2013-05-07\n        });\n    </script>"
            ],
            "class": "Ink.Util.Date",
            "module": "Ink.Util.Date_1"
        },
        {
            "file": "Ink/Util/Date/1/lib.js",
            "line": 407,
            "description": "Functions that works like php date() function but return a date based on the formatted string\nWorks like PHP 5.2.2 <a href=\"http://php.net/manual/en/function.date.php\" target=\"_blank\">PHP Date function</a>",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "format",
                    "description": "As the string in which the date it will be formatted. By default is 'Y-m-d'",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "str_date",
                    "description": "The date formatted - Mandatory.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Date object based on the formatted date",
                "type": "Date"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Date",
            "module": "Ink.Util.Date_1"
        },
        {
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 19,
            "description": "Hex code for the 'tab'",
            "itemtype": "property",
            "name": "_tab",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "static": 1,
            "class": "Ink.Util.Dumper",
            "module": "Ink.Util.Dumper_1"
        },
        {
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 31,
            "description": "Function that returns the argument passed formatted",
            "itemtype": "method",
            "name": "_formatParam",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "The argument passed formatted",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Dumper",
            "module": "Ink.Util.Dumper_1"
        },
        {
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 72,
            "description": "Function that returns the tabs concatenated",
            "itemtype": "method",
            "name": "_getTabs",
            "params": [
                {
                    "name": "numberOfTabs",
                    "description": "Number of Tabs",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Tabs concatenated",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Dumper",
            "module": "Ink.Util.Dumper_1"
        },
        {
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 90,
            "description": "Function that formats the parameter to display",
            "itemtype": "method",
            "name": "_outputFormat",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "dim",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The parameter passed formatted to displat",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Dumper",
            "module": "Ink.Util.Dumper_1"
        },
        {
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 128,
            "description": "Print variable structure. Can be passed an output target",
            "itemtype": "method",
            "name": "printDump",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Object|String|Boolean"
                },
                {
                    "name": "target",
                    "description": "(can be an element ID or an element)",
                    "type": "Optional String|Object"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Dumper",
            "module": "Ink.Util.Dumper_1"
        },
        {
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 153,
            "description": "Function that returns the variable's structure",
            "itemtype": "method",
            "name": "returnDump",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Object|String|Boolean"
                }
            ],
            "return": {
                "description": "The variable structure",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Dumper",
            "module": "Ink.Util.Dumper_1"
        },
        {
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 167,
            "description": "Function that alerts the variable structure",
            "itemtype": "method",
            "name": "alertDump",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Object|String|Boolean"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Dumper",
            "module": "Ink.Util.Dumper_1"
        },
        {
            "file": "Ink/Util/Dumper/1/lib.js",
            "line": 180,
            "description": "Print to new window the variable structure",
            "itemtype": "method",
            "name": "windowDump",
            "params": [
                {
                    "name": "param",
                    "description": "",
                    "type": "Object|String|Boolean"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Dumper",
            "module": "Ink.Util.Dumper_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 78,
            "description": "Adds translation strings for this helper to use.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "dict",
                    "description": "object containing language objects identified by their language code",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    var i18n = new I18n({}, 'pt_PT');\n    i18n.append({'pt_PT': {\n        'sfraggles': 'braggles'\n    }});\n    i18n.text('sfraggles') // -> 'braggles'"
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 97,
            "description": "Get the language code",
            "return": {
                "description": "the language code for this instance",
                "type": "String"
            },
            "itemtype": "method",
            "name": "lang",
            "type": "String",
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 103,
            "description": "Set the language. If there are more dictionaries available in cache, they will be loaded.",
            "itemtype": "method",
            "name": "lang",
            "params": [
                {
                    "name": "lang",
                    "description": "Language code to set this instance to.",
                    "type": "String"
                }
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 124,
            "description": "Get the testMode",
            "return": {
                "description": "the testMode for this instance",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "testMode",
            "type": "Boolean",
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 130,
            "description": "Sets or unsets test mode. In test mode, unknown strings are wrapped\nin `[ ... ]`. This is useful for debugging your application and\nmaking sure all your translation keys are in place.",
            "itemtype": "method",
            "name": "testMode",
            "params": [
                {
                    "name": "bool",
                    "description": "boolean value to set the test mode to.",
                    "type": "Boolean"
                }
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 146,
            "description": "Return an arbitrary key from the current language dictionary",
            "itemtype": "method",
            "name": "getKey",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The object which happened to be in the current language dictionary on the given key.",
                "type": "Any"
            },
            "example": [
                "\n     _.getKey('astring'); // -> 'a translated string'\n     _.getKey('anobject'); // -> {'a': 'translated object'}\n     _.getKey('afunction'); // -> function () { return 'this is a localized function' }"
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 176,
            "description": "Given a translation key, return a translated string, with replaced parameters.\nWhen a translated string is not available, the original string is returned unchanged.",
            "itemtype": "method",
            "name": "text",
            "type": "String",
            "params": [
                {
                    "name": "str",
                    "description": "key to look for in i18n dictionary (which is returned verbatim if unknown)",
                    "type": "String"
                },
                {
                    "name": "namedParms",
                    "description": "named replacements. Replaces {named} with values in this object.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "arg1",
                    "description": "replacement #1 (replaces first {} and all {1})",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "arg2",
                    "description": "replacement #2 (replaces second {} and all {2})",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "argn...",
                    "description": "replacement #n (replaces nth {} and all {n})",
                    "type": "String",
                    "optional": true
                }
            ],
            "example": [
                "\n     _('Gosto muito de {} e o céu é {}.', 'carros', 'azul');\n     // returns 'Gosto muito de carros e o céu é azul.'",
                "\n     _('O {1} é {2} como {2} é a cor do {3}.', 'carro', 'azul', 'FCP');\n     // returns 'O carro é azul como azul é o FCP.'",
                "\n     _('O {person1} dava-se com a {person2}', {person1: 'coisinho', person2: 'coisinha'});\n     // -> 'O coisinho dava-se com a coisinha'",
                "\n     // This is a bit more complex\n     var i18n = make().lang('pt_PT').append({\n         pt_PT: {\n             array: [1, 2],\n             object: {'a': '-a-', 'b': '-b-'},\n             func: function (a, b) {return '[[' + a + ',' + b + ']]';}\n         }\n     });\n     i18n.text('array', 0); // -> '1'\n     i18n.text('object', 'a'); // -> '-a-'\n     i18n.text('func', 'a', 'b'); // -> '[[a,b]]'"
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 242,
            "description": "Given a singular string, a plural string, and a number, translates\neither the singular or plural string.",
            "itemtype": "method",
            "name": "ntext",
            "return": {
                "description": "",
                "type": "String"
            },
            "params": [
                {
                    "name": "strSin",
                    "description": "word to use when count is 1",
                    "type": "String"
                },
                {
                    "name": "strPlur",
                    "description": "word to use otherwise",
                    "type": "String"
                },
                {
                    "name": "count",
                    "description": "number which defines which word to use",
                    "type": "Number"
                },
                {
                    "name": "...",
                    "description": "extra arguments, to be passed to `text()`",
                    "optional": true
                }
            ],
            "example": [
                "\n    i18n.ntext('platypus', 'platypuses', 1); // returns 'ornitorrinco'\n    i18n.ntext('platypus', 'platypuses', 2); // returns 'ornitorrincos'",
                "\n    // The \"count\" argument is passed to text()\n    i18n.ntext('{} platypus', '{} platypuses', 1); // returns '1 ornitorrinco'\n    i18n.ntext('{} platypus', '{} platypuses', 2); // returns '2 ornitorrincos'"
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 281,
            "description": "Returns the ordinal suffix of `num` (For example, 1 > 'st', 2 > 'nd', 5 > 'th', ...).\n\nThis works by using transforms (in the form of Objects or Functions) passed into the\nfunction or found in the special key `_ordinals` in the active language dictionary.",
            "itemtype": "method",
            "name": "ordinal",
            "params": [
                {
                    "name": "num",
                    "description": "Input number",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Maps for translating. Each of these options' fallback is found in the current\n   language's dictionary. The lookup order is the following:\n  \n       1. `exceptions`\n       2. `byLastDigit`\n       3. `default`\n  \n   Each of these may be either an `Object` or a `Function`. If it's a function, it\n   is called (with `number` and `digit` for any function except for byLastDigit,\n   which is called with the `lastDigit` of the number in question), and if the\n   function returns a string, that is used. If it's an object, the property is\n   looked up using `[...]`. If what is found is a string, it is used.",
                    "type": "Object|Function",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "byLastDigit",
                            "description": "If the language requires the last digit to be considered, mappings of last digits\n   to ordinal suffixes can be created here.",
                            "type": "Object|Function",
                            "optional": true,
                            "optdefault": "{}"
                        },
                        {
                            "name": "exceptions",
                            "description": "Map unique, special cases to their ordinal suffixes.",
                            "type": "Object|Function",
                            "optional": true,
                            "optdefault": "{}"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Ordinal suffix for `num`.",
                "type": "String"
            },
            "example": [
                "\n    var i18n = new I18n({\n        pt_PT: {  // 1º, 2º, 3º, 4º, ...\n            _ordinal: {  // The _ordinals key each translation dictionary is special.\n                'default': \"º\" // Usually the suffix is \"º\" in portuguese...\n            }\n        },\n        fr: {  // 1er, 2e, 3e, 4e, ...\n            _ordinal: {  // The _ordinals key is special.\n                'default': \"e\", // Usually the suffix is \"e\" in french...\n                exceptions: {\n                    1: \"er\"   // ... Except for the number one.\n                }\n            }\n        },\n        en_US: {  // 1st, 2nd, 3rd, 4th, ..., 11th, 12th, ... 21st, 22nd...\n            _ordinal: {\n                'default': \"th\",// Usually the digit is \"th\" in english...\n                byLastDigit: {\n                    1: \"st\",  // When the last digit is 1, use \"th\"...\n                    2: \"nd\",  // When the last digit is 2, use \"nd\"...\n                    3: \"rd\"   // When the last digit is 3, use \"rd\"...\n                },\n                exceptions: { // But these numbers are special\n                    0: \"\",\n                    11: \"th\",\n                    12: \"th\",\n                    13: \"th\"\n                }\n            }\n        }\n    }, 'pt_PT');\n\n    i18n.ordinal(1);    // returns 'º'\n    i18n.ordinal(2);    // returns 'º'\n    i18n.ordinal(11);   // returns 'º'\n\n    i18n.lang('fr');\n    i18n.ordinal(1);    // returns 'er'\n    i18n.ordinal(2);    // returns 'e'\n    i18n.ordinal(11);   // returns 'e'\n\n    i18n.lang('en_US');\n    i18n.ordinal(1);    // returns 'st'\n    i18n.ordinal(2);    // returns 'nd'\n    i18n.ordinal(12);   // returns 'th'\n    i18n.ordinal(22);   // returns 'nd'\n    i18n.ordinal(3);    // returns 'rd'\n    i18n.ordinal(4);    // returns 'th'\n    i18n.ordinal(5);    // returns 'th'\n"
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 410,
            "description": "Returns an alias to `text()`, for convenience. The resulting function is\ntraditionally assigned to \"_\".",
            "itemtype": "method",
            "name": "alias",
            "return": {
                "description": "an alias to `text()`. You can also access the rest of the translation API through this alias.",
                "type": "Function"
            },
            "example": [
                "\n    var i18n = new I18n({\n        'pt_PT': {\n            'hi': 'olá',\n            '{} day': '{} dia',\n            '{} days': '{} dias',\n            '_ordinals': {\n                'default': 'º'\n            }\n        }\n    }, 'pt_PT');\n    var _ = i18n.alias();\n    _('hi');  // -> 'olá'\n    _('{} days', 3);  // -> '3 dias'\n    _.ntext('{} day', '{} days', 2);  // -> '2 dias'\n    _.ntext('{} day', '{} days', 1);  // -> '1 dia'\n    _.ordinal(3);  // -> 'º'"
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 446,
            "static": 1,
            "itemtype": "method",
            "name": "I18n.reset\n\nReset I18n global state (global dictionaries, and default language for instances)",
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 459,
            "static": 1,
            "itemtype": "method",
            "name": "I18n.append",
            "params": [
                {
                    "name": "dict",
                    "description": "Dictionary to be added",
                    "type": "Object"
                },
                {
                    "name": "lang",
                    "description": "Language to be added to\n\nAdd a dictionary to be used in all I18n instances for the corresponding language",
                    "type": "String"
                }
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 486,
            "static": 1,
            "itemtype": "method",
            "name": "I18n.lang",
            "params": [
                {
                    "name": "lang",
                    "description": "String in the format `\"pt_PT\"`, `\"fr\"`, etc.\n\nSet global default language of I18n instances to `lang`",
                    "type": "String"
                }
            ],
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/I18n/1/lib.js",
            "line": 494,
            "static": 1,
            "itemtype": "method",
            "name": "I18n.lang\n\nGet the current default language of I18n instances.",
            "return": {
                "description": "language code",
                "type": "String"
            },
            "class": "Ink.Util.I18n",
            "module": "Ink.Util.I18n_1"
        },
        {
            "file": "Ink/Util/Json/1/lib.js",
            "line": 193,
            "description": "serializes a JSON object into a string.",
            "itemtype": "method",
            "name": "stringify",
            "params": [
                {
                    "name": "input",
                    "description": "Data to be serialized into JSON",
                    "type": "Object"
                },
                {
                    "name": "convertToUnicode",
                    "description": "When `true`, converts string contents to unicode \\uXXXX",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "serialized string",
                "type": "String"
            },
            "example": [
                "\n     Json.stringify({a:1.23}); // -> string: '{\"a\": 1.23}'"
            ],
            "class": "Ink.Util.Json",
            "module": "Ink.Util.Json_1"
        },
        {
            "file": "Ink/Util/Json/1/lib.js",
            "line": 212,
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "text",
                    "description": "Input string",
                    "type": "String"
                },
                {
                    "name": "reviver",
                    "description": "Function receiving `(key, value)`, and `this`=(containing object), used to walk objects.",
                    "type": "Function"
                }
            ],
            "example": [
                "\nSimple example:\n\n     Json.parse('{\"a\": \"3\",\"numbers\":false}',\n         function (key, value) {\n             if (!this.numbers && key === 'a') {\n                 return \"NO NUMBERS\";\n             } else {\n                 return value;\n             }\n         }); // -> object: {a: 'NO NUMBERS', numbers: false}"
            ],
            "class": "Ink.Util.Json",
            "module": "Ink.Util.Json_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 19,
            "description": "List of special chars",
            "itemtype": "property",
            "name": "_chars",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 38,
            "description": "List of the special characters' html entities",
            "itemtype": "property",
            "name": "_entities",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 61,
            "description": "List of accented chars",
            "itemtype": "property",
            "name": "_accentedChars",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 83,
            "description": "List of the accented chars (above), but without the accents",
            "itemtype": "property",
            "name": "_accentedRemovedChars",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 104,
            "description": "Object that contains the basic HTML unsafe chars, as keys, and their HTML entities as values",
            "itemtype": "property",
            "name": "_htmlUnsafeChars",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 115,
            "description": "Convert first letter of a word to upper case <br />\nIf param as more than one word, it converts first letter of all words that have more than 2 letters",
            "itemtype": "method",
            "name": "ucFirst",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "firstWordOnly",
                    "description": "capitalize only first word.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "string camel cased",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n     InkString.ucFirst('hello world'); // -> 'Hello World'\n     InkString.ucFirst('hello world', true); // -> 'Hello world'"
            ],
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 137,
            "description": "Remove spaces and new line from biggin and ends of string",
            "itemtype": "method",
            "name": "trim",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string trimmed",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 154,
            "description": "Removes HTML tags of string",
            "itemtype": "method",
            "name": "stripTags",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "allowed",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String stripped from HTML tags, leaving only the allowed ones (if any)",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    <script>\n         var myvar='isto e um texto <b>bold</b> com imagem <img src=\"\"> e br <br /> um <p>paragrafo</p>';\n         SAPO.Utility.String.stripTags(myvar, 'b,u');\n    </script>"
            ],
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 197,
            "description": "Convert listed characters to HTML entities",
            "itemtype": "method",
            "name": "htmlEntitiesEncode",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string encoded",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 218,
            "description": "Convert listed HTML entities to character",
            "itemtype": "method",
            "name": "htmlEntitiesDecode",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string decoded",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 247,
            "description": "Encode a string to UTF8",
            "itemtype": "method",
            "name": "utf8Encode",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string utf8 encoded",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 282,
            "description": "Make a string shorter without cutting words",
            "itemtype": "method",
            "name": "shortString",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "n",
                    "description": "- number of chars of the short string",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "string shortened",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 305,
            "description": "Truncates a string, breaking words and adding ... at the end",
            "itemtype": "method",
            "name": "truncateString",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "length",
                    "description": "- length limit for the string. String will be\n       at most this big, ellipsis included.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "string truncated",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 324,
            "description": "Decode a string from UTF8",
            "itemtype": "method",
            "name": "utf8Decode",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string utf8 decoded",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 362,
            "description": "Convert all accented chars to char without accent.",
            "itemtype": "method",
            "name": "removeAccentedChars",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string without accented chars",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 382,
            "description": "Count the number of occurrences of a specific needle in a haystack",
            "itemtype": "method",
            "name": "substrCount",
            "params": [
                {
                    "name": "haystack",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "needle",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Number of occurrences",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 397,
            "description": "Eval a JSON string to a JS object",
            "itemtype": "method",
            "name": "evalJSON",
            "params": [
                {
                    "name": "strJSON",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "sanitize",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "JS Object",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 421,
            "description": "Checks if a string is a valid JSON object (string encoded)",
            "itemtype": "method",
            "name": "isJSON",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 436,
            "description": "Escapes unsafe html chars to their entities",
            "itemtype": "method",
            "name": "htmlEscapeUnsafe",
            "params": [
                {
                    "name": "str",
                    "description": "String to escape",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Escaped string",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 450,
            "description": "Normalizes whitespace in string.\nString is trimmed and sequences of many\nWhitespaces are collapsed.",
            "itemtype": "method",
            "name": "normalizeWhitespace",
            "params": [
                {
                    "name": "str",
                    "description": "String to normalize",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string normalized",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 465,
            "description": "Converts string to unicode",
            "itemtype": "method",
            "name": "toUnicode",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string unicoded",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 531,
            "description": "Escapes a unicode character. returns \\xXX if hex smaller than 0x100, otherwise \\uXXXX",
            "itemtype": "method",
            "name": "escape",
            "params": [
                {
                    "name": "c",
                    "description": "Char",
                    "type": "String"
                }
            ],
            "return": {
                "description": "escaped char",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 541,
            "params": [
                {
                    "name": "c",
                    "description": "char",
                    "type": "String"
                }
            ],
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 559,
            "description": "Unescapes a unicode character escape sequence",
            "itemtype": "method",
            "name": "unescape",
            "params": [
                {
                    "name": "es",
                    "description": "Escape sequence",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String des-unicoded",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 578,
            "description": "Escapes a string to unicode characters",
            "itemtype": "method",
            "name": "escapeText",
            "params": [
                {
                    "name": "txt",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "whiteList",
                    "description": "",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Escaped to Unicoded string",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 605,
            "description": "Regex to check escaped strings",
            "itemtype": "property",
            "name": "escapedCharRegex",
            "type": "{Regex}",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 616,
            "description": "Unescapes a string",
            "itemtype": "method",
            "name": "unescapeText",
            "params": [
                {
                    "name": "txt",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Unescaped string",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 636,
            "description": "Compares two strings",
            "itemtype": "method",
            "name": "strcmp",
            "params": [
                {
                    "name": "str1",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "str2",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/String/1/lib.js",
            "line": 650,
            "description": "Splits long string into string of, at most, maxLen (that is, all but last have length maxLen,\nlast can measure maxLen or less)",
            "itemtype": "method",
            "name": "packetize",
            "params": [
                {
                    "name": "string",
                    "description": "string to divide",
                    "type": "String"
                },
                {
                    "name": "maxLen",
                    "description": "packet size",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "string divided",
                "type": "Array"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.String",
            "module": "Ink.Util.String_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 19,
            "description": "Auxiliary string for encoding",
            "itemtype": "property",
            "name": "_keyStr",
            "type": "{String}",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 30,
            "description": "Get current URL of page",
            "itemtype": "method",
            "name": "getUrl",
            "return": {
                "description": "Current URL",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Url_1'], function( InkUrl ){\n        console.log( InkUrl.getUrl() ); // Will return it's window URL\n    });"
            ],
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 47,
            "description": "Generates an uri with query string based on the parameters object given",
            "itemtype": "method",
            "name": "genQueryString",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "URI with query string set",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Url_1'], function( InkUrl ){\n        var queryString = InkUrl.genQueryString( 'http://www.sapo.pt/', {\n            'param1': 'valueParam1',\n            'param2': 'valueParam2'\n        });\n\n        console.log( queryString ); // Result: http://www.sapo.pt/?param1=valueParam1&param2=valueParam2\n    });"
            ],
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 89,
            "description": "Get query string of current or passed URL",
            "itemtype": "method",
            "name": "getQueryString",
            "params": [
                {
                    "name": "str",
                    "description": "URL String. When not specified it uses the current URL.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Key-Value object with the pairs variable: value",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Url_1'], function( InkUrl ){\n        var queryStringParams = InkUrl.getQueryString( 'http://www.sapo.pt/?var1=valueVar1&var2=valueVar2' );\n        console.log( queryStringParams );\n        // Result:\n        // {\n        //    var1: 'valueVar1',\n        //    var2: 'valueVar2'\n        // }\n    });"
            ],
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 130,
            "description": "Get URL hash",
            "itemtype": "method",
            "name": "getAnchor",
            "params": [
                {
                    "name": "str",
                    "description": "URL String. If not set, it will get the current URL.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Hash in the URL. If there's no hash, returns false.",
                "type": "String|Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Url_1'], function( InkUrl ){\n        var anchor = InkUrl.getAnchor( 'http://www.sapo.pt/page.php#TEST' );\n        console.log( anchor ); // Result: TEST\n    });"
            ],
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 159,
            "description": "Get anchor string of current or passed URL",
            "itemtype": "method",
            "name": "getAnchorString",
            "params": [
                {
                    "name": "string",
                    "description": "If not provided it uses the current URL.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns a key-value object of the 'variables' available in the hashtag of the URL",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Url_1'], function( InkUrl ){\n        var hashParams = InkUrl.getAnchorString( 'http://www.sapo.pt/#var1=valueVar1&var2=valueVar2' );\n        console.log( hashParams );\n        // Result:\n        // {\n        //    var1: 'valueVar1',\n        //    var2: 'valueVar2'\n        // }\n    });"
            ],
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 201,
            "description": "Parse passed URL",
            "itemtype": "method",
            "name": "parseUrl",
            "params": [
                {
                    "name": "url",
                    "description": "URL to be parsed",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Parsed URL as a key-value object.",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Url_1'], function( InkUrl ){\n        var parsedURL = InkUrl.parseUrl( 'http://www.sapo.pt/index.html?var1=value1#anchor' )\n        console.log( parsedURL );\n        // Result:\n        // {\n        //   'scheme'    => 'http',\n        //   'host'      => 'www.sapo.pt',\n        //   'path'      => '/index.html',\n        //   'query'     => 'var1=value1',\n        //   'fragment'  => 'anchor'\n        // }\n    });\n"
            ],
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 288,
            "description": "Take a URL object from Ink.Util.Url.parseUrl or a window.location\nobject and returns a URL string.",
            "itemtype": "method",
            "name": "format",
            "params": [
                {
                    "name": "urlObj",
                    "description": "window.location, a.href, or parseUrl object to format"
                }
            ],
            "return": {
                "description": "Full URL.",
                "type": "String"
            },
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 332,
            "description": "Get last loaded script element",
            "itemtype": "method",
            "name": "currentScriptElement",
            "params": [
                {
                    "name": "match",
                    "description": "String to match against the script src attribute",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the <script> DOM Element or false if unable to find it.",
                "type": "DOMElement|Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 367,
            "description": "--function {String} ?\n--Convert a string to BASE 64",
            "params": [
                {
                    "name": "string",
                    "description": "- string to convert",
                    "type": "String"
                }
            ],
            "return": {
                "description": "base64 encoded string\n\n\n           if(!SAPO.Utility.String || typeof(SAPO.Utility.String) === 'undefined') \n\n           var output = \"\";\n           var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n           var i = 0;\n\n           var input = SAPO.Utility.String.utf8Encode(string);\n\n           while (i < input.length) {\n\n               chr1 = input.charCodeAt(i++);\n               chr2 = input.charCodeAt(i++);\n               chr3 = input.charCodeAt(i++);\n\n               enc1 = chr1 >> 2;\n               enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n               enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n               enc4 = chr3 & 63;\n\n               if (isNaN(chr2)) {\n                   enc3 = enc4 = 64;\n               } else if (isNaN(chr3)) {\n                   enc4 = 64;\n               }\n\n               output = output +\n               this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n               this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n           }\n           return output;\n       },\n       base64Decode: function(string)\n       {\n--function {String} ?\nDecode a BASE 64 encoded string\n--param {String} string base64 encoded string\n--return string decoded\n           if(!SAPO.Utility.String || typeof(SAPO.Utility.String) === 'undefined') {\n               throw \"SAPO.Utility.Url.base64Decode depends of SAPO.Utility.String, which has not been referred.\";\n           }\n\n           var output = \"\";\n           var chr1, chr2, chr3;\n           var enc1, enc2, enc3, enc4;\n           var i = 0;\n\n           var input = string.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n           while (i < input.length) {\n\n               enc1 = this._keyStr.indexOf(input.charAt(i++));\n               enc2 = this._keyStr.indexOf(input.charAt(i++));\n               enc3 = this._keyStr.indexOf(input.charAt(i++));\n               enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n               chr1 = (enc1 << 2) | (enc2 >> 4);\n               chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n               chr3 = ((enc3 & 3) << 6) | enc4;\n\n               output = output + String.fromCharCode(chr1);\n\n               if (enc3 !== 64) {\n                   output = output + String.fromCharCode(chr2);\n               }\n               if (enc4 !== 64) {\n                   output = output + String.fromCharCode(chr3);\n               }\n           }\n           output = SAPO.Utility.String.utf8Decode(output);\n           return output;\n       },",
                "type": "!~YUIDOC_LINE~!               throw \"SAPO.Utility.Url.base64Encode depends of SAPO.Utility.String, which has not been referred.\";!~YUIDOC_LINE~!"
            },
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Url/1/lib.js",
            "line": 450,
            "description": "Debug function ?",
            "itemtype": "method",
            "name": "_debug",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Url",
            "module": "Ink.Util.Url_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 19,
            "description": "List of country codes avaible for isPhone function",
            "itemtype": "property",
            "name": "_countryCodes",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 35,
            "description": "International number for portugal",
            "itemtype": "property",
            "name": "_internacionalPT",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 47,
            "description": "List of all portuguese number prefixes",
            "itemtype": "property",
            "name": "_indicativosPT",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 125,
            "description": "International number for Cabo Verde",
            "itemtype": "property",
            "name": "_internacionalCV",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 136,
            "description": "List of all Cabo Verde number prefixes",
            "itemtype": "property",
            "name": "_indicativosCV",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 153,
            "description": "International number for angola",
            "itemtype": "property",
            "name": "_internacionalAO",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 164,
            "description": "List of all Angola number prefixes",
            "itemtype": "property",
            "name": "_indicativosAO",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 178,
            "description": "International number for mozambique",
            "itemtype": "property",
            "name": "_internacionalMZ",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 189,
            "description": "List of all Mozambique number prefixes",
            "itemtype": "property",
            "name": "_indicativosMZ",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 204,
            "description": "International number for Timor",
            "itemtype": "property",
            "name": "_internacionalTL",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 215,
            "description": "List of all Timor number prefixes",
            "itemtype": "property",
            "name": "_indicativosTL",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 229,
            "description": "Regular expression groups for several groups of characters\n\nhttp://en.wikipedia.org/wiki/C0_Controls_and_Basic_Latin\nhttp://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane\nhttp://en.wikipedia.org/wiki/ISO_8859-1",
            "itemtype": "property",
            "name": "_characterGroups",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 262,
            "description": "Create a regular expression for several character groups.",
            "itemtype": "method",
            "name": "createRegExp",
            "params": [
                {
                    "name": "Groups...",
                    "description": "\n Groups to build regular expressions for. Possible keys are:\n\n- **numbers**: 0-9\n- **asciiAlpha**: a-z, A-Z\n- **latin1Alpha**: asciiAlpha, plus printable characters in latin-1\n- **unicodeAlpha**: unicode alphanumeric characters.\n- **space**: ' ', the space character.\n- **dash**: dash character.\n- **underscore**: underscore character.\n- **nicknamePunctuation**: dash, dot, underscore\n- **singleLineWhitespace**: space and tab (whitespace which only spans one line).\n- **newline**: newline character ('\\n')\n- **whitespace**: whitespace characters in the ASCII character set.\n- **asciiPunctuation**: punctuation characters in the ASCII character set.\n- **latin1Punctuation**: punctuation characters in latin-1.\n- **unicodePunctuation**: punctuation characters in unicode.",
                    "type": "Object"
                }
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 298,
            "description": "Checks if a field has the required groups. Takes an options object for further configuration.",
            "itemtype": "method",
            "name": "checkCharacterGroups",
            "params": [
                {
                    "name": "s",
                    "description": "The validation string",
                    "type": "String"
                },
                {
                    "name": "groups",
                    "description": "What groups are included.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                },
                {
                    "name": "options.*",
                    "description": "See createRegexp",
                    "optional": true
                }
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 310,
            "description": "Checks whether a field contains unicode printable characters. Takes an\noptions object for further configuration",
            "itemtype": "method",
            "name": "unicode",
            "params": [
                {
                    "name": "s",
                    "description": "The validation string",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optional configuration object",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "*",
                            "description": "See createRegexp",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 324,
            "description": "Checks that a field only contains only latin-1 alphanumeric\ncharacters. Takes options for allowing singleline whitespace,\ncross-line whitespace and punctuation.",
            "itemtype": "method",
            "name": "latin1",
            "params": [
                {
                    "name": "s",
                    "description": "The validation string",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optional configuration object",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "*",
                            "description": "See createRegexp",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 340,
            "description": "Checks that a field only contains only ASCII alphanumeric\ncharacters. Takes options for allowing singleline whitespace,\ncross-line whitespace and punctuation.",
            "itemtype": "method",
            "name": "ascii",
            "params": [
                {
                    "name": "s",
                    "description": "The validation string",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optional configuration object",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "*",
                            "description": "See createRegexp",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 356,
            "description": "Checks that the number is a valid number",
            "itemtype": "method",
            "name": "number",
            "params": [
                {
                    "name": "numb",
                    "description": "The number",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Further options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "decimalSep",
                            "description": "Allow decimal separator.",
                            "optional": true,
                            "optdefault": "'.'"
                        },
                        {
                            "name": "thousandSep",
                            "description": "Strip this character from the number.",
                            "optional": true,
                            "optdefault": "\",\""
                        },
                        {
                            "name": "negative",
                            "description": "Allow negative numbers.",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "decimalPlaces",
                            "description": "Maximum number of decimal places. Use `0` for an integer number.",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "max",
                            "description": "Maximum number",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "min",
                            "description": "Minimum number",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "returnNumber",
                            "description": "When this option is true, return the number itself when the value is valid.",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 437,
            "description": "Checks if a year is Leap \"Bissexto\"",
            "itemtype": "method",
            "name": "_isLeapYear",
            "params": [
                {
                    "name": "year",
                    "description": "Year to be checked",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if it is a leap year.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator._isLeapYear( 2004 ) ); // Result: true\n        console.log( InkValidator._isLeapYear( 2006 ) ); // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 462,
            "description": "Object with the date formats available for validation",
            "itemtype": "property",
            "name": "_dateParsers",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "readonly": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 482,
            "description": "Calculates the number of days in a given month of a given year",
            "itemtype": "method",
            "name": "_daysInMonth",
            "params": [
                {
                    "name": "_m",
                    "description": "- month (1 to 12)",
                    "type": "Number"
                },
                {
                    "name": "_y",
                    "description": "- year",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the number of days in a given month of a given year",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator._daysInMonth( 2, 2004 ) ); // Result: 29\n        console.log( InkValidator._daysInMonth( 2, 2006 ) ); // Result: 28\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 520,
            "description": "Checks if a date is valid",
            "itemtype": "method",
            "name": "_isValidDate",
            "params": [
                {
                    "name": "year",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "month",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "day",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if it's a valid date",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator._isValidDate( 2004, 2, 29 ) ); // Result: true\n        console.log( InkValidator._isValidDate( 2006, 2, 29 ) ); // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 549,
            "description": "Checks if a email is valid",
            "itemtype": "method",
            "name": "mail",
            "params": [
                {
                    "name": "email",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if it's a valid e-mail",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.email( 'agfsdfgfdsgdsf' ) ); // Result: false\n        console.log( InkValidator.email( 'inkdev\\u0040sapo.pt' ) ); // Result: true (where \\u0040 is at sign)\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 573,
            "description": "Deprecated. Alias for email(). Use it instead.",
            "itemtype": "method",
            "name": "mail",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 582,
            "description": "Checks if a url is valid",
            "itemtype": "method",
            "name": "url",
            "params": [
                {
                    "name": "url",
                    "description": "URL to be checked",
                    "type": "String"
                },
                {
                    "name": "full",
                    "description": "If true, validates a full URL (one that should start with 'http')",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "True if the given URL is valid",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.url( 'www.sapo.pt' ) );                // Result: true\n        console.log( InkValidator.url( 'http://www.sapo.pt', true ) );   // Result: true\n        console.log( InkValidator.url( 'meh' ) );                        // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 615,
            "description": "Checks if a phone is valid in Portugal",
            "itemtype": "method",
            "name": "isPTPhone",
            "params": [
                {
                    "name": "phone",
                    "description": "Phone number to be checked",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if it's a valid Portuguese Phone",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isPTPhone( '213919264' ) );        // Result: true\n        console.log( InkValidator.isPTPhone( '00351213919264' ) );   // Result: true\n        console.log( InkValidator.isPTPhone( '+351213919264' ) );    // Result: true\n        console.log( InkValidator.isPTPhone( '1' ) );                // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 662,
            "description": "Alias function for isPTPhone",
            "itemtype": "method",
            "name": "isPortuguesePhone",
            "params": [
                {
                    "name": "phone",
                    "description": "Phone number to be checked",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if it's a valid Portuguese Phone",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isPortuguesePhone( '213919264' ) );        // Result: true\n        console.log( InkValidator.isPortuguesePhone( '00351213919264' ) );   // Result: true\n        console.log( InkValidator.isPortuguesePhone( '+351213919264' ) );    // Result: true\n        console.log( InkValidator.isPortuguesePhone( '1' ) );                // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 683,
            "description": "Checks if a phone is valid in Cabo Verde",
            "itemtype": "method",
            "name": "isCVPhone",
            "params": [
                {
                    "name": "phone",
                    "description": "Phone number to be checked",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if it's a valid Cape Verdean Phone",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isCVPhone( '2610303' ) );        // Result: true\n        console.log( InkValidator.isCVPhone( '002382610303' ) );   // Result: true\n        console.log( InkValidator.isCVPhone( '+2382610303' ) );    // Result: true\n        console.log( InkValidator.isCVPhone( '1' ) );              // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 729,
            "description": "Checks if a phone is valid in Angola",
            "itemtype": "method",
            "name": "isAOPhone",
            "params": [
                {
                    "name": "phone",
                    "description": "Phone number to be checked",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if it's a valid Angolan Phone",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isAOPhone( '244222396385' ) );     // Result: true\n        console.log( InkValidator.isAOPhone( '00244222396385' ) );   // Result: true\n        console.log( InkValidator.isAOPhone( '+244222396385' ) );    // Result: true\n        console.log( InkValidator.isAOPhone( '1' ) );                // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 776,
            "description": "Checks if a phone is valid in Mozambique",
            "itemtype": "method",
            "name": "isMZPhone",
            "params": [
                {
                    "name": "phone",
                    "description": "Phone number to be checked",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if it's a valid Mozambican Phone",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isMZPhone( '21426861' ) );        // Result: true\n        console.log( InkValidator.isMZPhone( '0025821426861' ) );   // Result: true\n        console.log( InkValidator.isMZPhone( '+25821426861' ) );    // Result: true\n        console.log( InkValidator.isMZPhone( '1' ) );              // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 826,
            "description": "Checks if a phone is valid in Timor",
            "itemtype": "method",
            "name": "isTLPhone",
            "params": [
                {
                    "name": "phone",
                    "description": "Phone number to be checked",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "True if it's a valid phone from Timor-Leste",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isTLPhone( '6703331234' ) );     // Result: true\n        console.log( InkValidator.isTLPhone( '006703331234' ) );   // Result: true\n        console.log( InkValidator.isTLPhone( '+6703331234' ) );    // Result: true\n        console.log( InkValidator.isTLPhone( '1' ) );              // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 873,
            "description": "Validates the function in all country codes available or in the ones set in the second param",
            "itemtype": "method",
            "name": "isPhone",
            "params": [
                {
                    "name": "phone",
                    "description": "number",
                    "type": "String"
                },
                {
                    "name": "country",
                    "description": "or array of countries to validate",
                    "type": "Optional String|Array"
                }
            ],
            "return": {
                "description": "True if it's a valid phone in any country available",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isPhone( '6703331234' ) );        // Result: true\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 923,
            "description": "Validates if a zip code is valid in Portugal",
            "itemtype": "method",
            "name": "codPostal",
            "params": [
                {
                    "name": "cp1",
                    "description": "",
                    "type": "Number|String"
                },
                {
                    "name": "cp2",
                    "description": "",
                    "type": "Optional Number|String"
                },
                {
                    "name": "returnBothResults",
                    "description": "",
                    "type": "Optional Boolean"
                }
            ],
            "return": {
                "description": "True if it's a valid zip code",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.codPostal( '1069', '300' ) );        // Result: true\n        console.log( InkValidator.codPostal( '1069', '300', true ) );  // Result: [true, true]\n    });\n"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 989,
            "description": "Checks is a date is valid in a given format",
            "itemtype": "method",
            "name": "isDate",
            "params": [
                {
                    "name": "format",
                    "description": "- defined in _dateParsers",
                    "type": "String"
                },
                {
                    "name": "dateStr",
                    "description": "- date string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if it's a valid date and in the specified format",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isDate( 'yyyy-mm-dd', '2012-05-21' ) );        // Result: true\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 1041,
            "description": "Checks if a string is a valid color",
            "itemtype": "method",
            "name": "isColor",
            "params": [
                {
                    "name": "str",
                    "description": "Color string to be checked",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if it's a valid color string",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "example": [
                "\n    Ink.requireModules(['Ink.Util.Validator_1'], function( InkValidator ){\n        console.log( InkValidator.isColor( '#FF00FF' ) );        // Result: true\n        console.log( InkValidator.isColor( 'amdafasfs' ) );      // Result: false\n    });"
            ],
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 1130,
            "description": "Checks if the value is a valid IP. Supports ipv4 and ipv6",
            "itemtype": "method",
            "name": "validationFunctions.ip",
            "params": [
                {
                    "name": "value",
                    "description": "Value to be checked",
                    "type": "String"
                },
                {
                    "name": "ipType",
                    "description": "Type of IP to be validated. The values are: ipv4, ipv6. By default is ipv4.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the value is a valid IP address. False if not.",
                "type": "Boolean"
            },
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 1155,
            "description": "Credit Card specifications, to be used in the credit card verification.",
            "itemtype": "property",
            "name": "_creditCardSpecs",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 1212,
            "description": "Luhn function, to be used when validating credit cards",
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        },
        {
            "file": "Ink/Util/Validator/1/lib.js",
            "line": 1253,
            "description": "Validates if a number is of a specific credit card",
            "params": [
                {
                    "name": "num",
                    "description": "Number to be validates",
                    "type": "String"
                },
                {
                    "name": "creditCardType",
                    "description": "Credit card type. See _creditCardSpecs for the list of supported values.",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Ink.Util.Validator",
            "module": "Ink.Util.Validator_1"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " Ink/Dom/Browser/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Dom/Browser/1/lib.js:9"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Dom/Element/1/lib.js:222"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Dom/Element/1/lib.js:761"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Dom/Element/1/lib.js:778"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Dom/Element/1/lib.js:794"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Dom/Element/1/lib.js:809"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Dom/Loaded/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Dom/Loaded/1/lib.js:10"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Dom/Selector/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Dom/Selector/1/lib.js:10"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Namespace/ClassModule/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Namespace/StaticModule/1/lib.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Namespace/StaticModule/1/lib.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Net/Ajax/1/lib.js:672"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Animate/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Carousel/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Common/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Common/1/lib.js:22"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/DatePicker/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/DatePicker/1/lib.js:39"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Draggable/1/lib.js:19"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Dropdown/1/lib.js:1"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " Ink/UI/Dropdown/1/lib.js:180"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " Ink/UI/Dropdown/1/lib.js:180"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Droppable/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Droppable/1/lib.js:17"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/FormValidator/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/FormValidator/1/lib.js:20"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/FormValidator/2/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/FormValidator/2/lib.js:623"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/ImageQuery/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/ImageQuery/1/lib.js:9"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Modal/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Modal/1/lib.js:14"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Pagination/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Pagination/1/lib.js:28"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/ProgressBar/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/ProgressBar/1/lib.js:9"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/SmoothScroller/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/SmoothScroller/1/lib.js:17"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/SortableList/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/SortableList/1/lib.js:12"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Spy/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Spy/1/lib.js:105"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Sticky/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Sticky/1/lib.js:9"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Swipe/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Table/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Table/1/lib.js:46"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Tabs/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Tabs/1/lib.js:9"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/TagField/1/lib.js:13"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Toggle/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/Toggle/1/lib.js:9"
        },
        {
            "message": "unknown tag: note",
            "line": " Ink/UI/Tooltip/1/lib.js:314"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/TreeView/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/UI/TreeView/1/lib.js:9"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Ink/UI/Upload/1/lib.js:113"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Ink/UI/Upload/1/lib.js:143"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Ink/UI/Upload/1/lib.js:169"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Ink/UI/Upload/1/lib.js:191"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Ink/UI/Upload/1/lib.js:206"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Array/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Array/1/lib.js:12"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/BinPack/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/BinPack/1/lib.js:222"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Cookie/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Cookie/1/lib.js:10"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Date/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Date/1/lib.js:10"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Dumper/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Dumper/1/lib.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Util/I18n/1/lib.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Util/I18n/1/lib.js:124"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Util/I18n/1/lib.js:281"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Ink/Util/I18n/1/lib.js:410"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/String/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/String/1/lib.js:10"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Url/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Url/1/lib.js:10"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Validator/1/lib.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " Ink/Util/Validator/1/lib.js:10"
        },
        {
            "message": "Missing item type\nreturns the markup you should have to bundle your JS resources yourself",
            "line": " Ink/1/lib.js:398"
        },
        {
            "message": "Missing item type",
            "line": " Ink/Dom/Css/1/lib.js:1"
        },
        {
            "message": "Missing item type",
            "line": " Ink/Dom/Element/1/lib.js:1"
        },
        {
            "message": "Missing item type\nString trim implementation\nUsed by getChildrenText\n\nfunction _trimString\nparam {String} text\nreturn {String} trimmed text",
            "line": " Ink/Dom/Element/1/lib.js:864"
        },
        {
            "message": "Missing item type",
            "line": " Ink/Dom/Event/1/lib.js:1"
        },
        {
            "message": "Missing item type\nBean maintains an internal registry for event listeners. We don't touch elements, objects\nor functions to identify them, instead we store everything in the registry.\nEach event listener has a RegEntry object, we have one 'registry' for the whole instance.",
            "line": " Ink/Dom/Event/1/lib.js:259"
        },
        {
            "message": "Missing item type\nPublic API: off(), on(), add(), (remove()), one(), fire(), clone()",
            "line": " Ink/Dom/Event/1/lib.js:556"
        },
        {
            "message": "Missing item type\noff(element[, eventType(s)[, handler ]])",
            "line": " Ink/Dom/Event/1/lib.js:560"
        },
        {
            "message": "Missing item type\non(element, eventType(s)[, selector], handler[, args ])",
            "line": " Ink/Dom/Event/1/lib.js:595"
        },
        {
            "message": "Missing item type\nadd(element[, selector], eventType(s), handler[, args ])\n\nDeprecated: kept (for now) for backward-compatibility",
            "line": " Ink/Dom/Event/1/lib.js:649"
        },
        {
            "message": "Missing item type\none(element, eventType(s)[, selector], handler[, args ])",
            "line": " Ink/Dom/Event/1/lib.js:663"
        },
        {
            "message": "Missing item type\nfire(element, eventType(s)[, args ])\n\nThe optional 'args' argument must be an array, if no 'args' argument is provided\nthen we can use the browser's DOM event system, otherwise we trigger handlers manually",
            "line": " Ink/Dom/Event/1/lib.js:670"
        },
        {
            "message": "Missing item type\nclone(dstElement, srcElement[, eventType ])\n\nTODO: perhaps for consistency we should allow the same flexibility in type specifiers?",
            "line": " Ink/Dom/Event/1/lib.js:700"
        },
        {
            "message": "Missing item type\nKeep this declaration here and off Bean as it extends the Event\nobject and some properties are readonly in strict mode",
            "line": " Ink/Dom/Event/1/lib.js:757"
        },
        {
            "message": "Missing item type\nInstantiate browser native events array",
            "line": " Ink/Dom/Event/1/lib.js:763"
        },
        {
            "message": "Missing item type\nfunction _poll",
            "line": " Ink/Dom/Loaded/1/lib.js:138"
        },
        {
            "message": "Missing item type\nyuidoc comment syntax: http://yui.github.io/yuidoc/syntax/index.html",
            "line": " Ink/Namespace/ClassModule/1/lib.js:11"
        },
        {
            "message": "Missing item type\nyuidoc comment syntax: http://yui.github.io/yuidoc/syntax/index.html",
            "line": " Ink/Namespace/StaticModule/1/lib.js:13"
        },
        {
            "message": "Missing item type",
            "line": " Ink/Net/Ajax/1/lib.js:1"
        },
        {
            "message": "Missing item type\nOptions for all requests. These can then be\noverriden for individual ones.",
            "line": " Ink/Net/Ajax/1/lib.js:74"
        },
        {
            "message": "Missing item type",
            "line": " Ink/Net/JsonP/1/lib.js:1"
        },
        {
            "message": "Missing item type\nRender a single month button.",
            "line": " Ink/UI/DatePicker/1/lib.js:389"
        },
        {
            "message": "Missing item type\nRender the topmost bar with the \"close\" and \"clear\" buttons.",
            "line": " Ink/UI/DatePicker/1/lib.js:420"
        },
        {
            "message": "Missing item type\n_dateCmp with varied precision. You can compare down to the day field, or, just to the month.\n// the following two dates are considered equal because we asked\n// _dateCmpUntil to just check up to the years.\n\n_dateCmpUntil({_year: 2000, _month: 10}, {_year: 2000, _month: 11}, '_year') === 0",
            "line": " Ink/UI/DatePicker/1/lib.js:684"
        },
        {
            "message": "Missing item type\nFor the year selector.\n\nUpdate this._year, to find the next decade or use nextValidDateFn to find it.",
            "line": " Ink/UI/DatePicker/1/lib.js:817"
        },
        {
            "message": "Missing item type",
            "line": " Ink/UI/DatePicker/1/lib.js:929"
        },
        {
            "message": "Missing item type\nGet the next month we can show.",
            "line": " Ink/UI/DatePicker/1/lib.js:1074"
        },
        {
            "message": "Missing item type\nGet the previous month we can show.",
            "line": " Ink/UI/DatePicker/1/lib.js:1088"
        },
        {
            "message": "Missing item type\nGet the next year we can show.",
            "line": " Ink/UI/DatePicker/1/lib.js:1102"
        },
        {
            "message": "Missing item type\nGet the next year we can show.",
            "line": " Ink/UI/DatePicker/1/lib.js:1112"
        },
        {
            "message": "Missing item type\nDRY base for a function which tries to get the next or previous valid year or month.\n\nIt checks if we can go forward by using _dateCmp with atomic\nprecision (this means, {_year} for leaping years, and\n{_year, month} for leaping months), then it tries to get the\nresult from the user-supplied callback (nextDateFn or prevDateFn),\nand when this is not present, advance the date forward using the\n`advancer` callback.",
            "line": " Ink/UI/DatePicker/1/lib.js:1122"
        },
        {
            "message": "Missing item type",
            "line": " Ink/UI/DatePicker/1/lib.js:1169"
        },
        {
            "message": "Missing item type",
            "line": " Ink/UI/DatePicker/1/lib.js:1294"
        },
        {
            "message": "Missing item type\nAdd the ink-calendar-on className if the given button is the current month,\notherwise add the ink-calendar-off className if the given button refers to\nan unacceptable month (given dateRange and validMonthFn)",
            "line": " Ink/UI/DatePicker/1/lib.js:1320"
        },
        {
            "message": "Missing item type\nPrototype's method to allow the 'i18n files' to change all objects' language at once.",
            "line": " Ink/UI/DatePicker/1/lib.js:1342"
        },
        {
            "message": "Missing item type\nReturns true if the calendar sceen is in 'select day' mode",
            "line": " Ink/UI/DatePicker/1/lib.js:1368"
        },
        {
            "message": "Missing item type\nDestroys this datepicker, removing it from the page.",
            "line": " Ink/UI/DatePicker/1/lib.js:1381"
        },
        {
            "message": "Missing item type\nValidation Functions to be used\nSome functions are a port from PHP, others are the 'best' solutions available",
            "line": " Ink/UI/FormValidator/2/lib.js:9"
        },
        {
            "message": "Missing item type\nError messages for the validation functions above",
            "line": " Ink/UI/FormValidator/2/lib.js:334"
        },
        {
            "message": "Missing item type\nConstructor of a FormElement.\nThis type of object has particular methods to parse rules and validate them in a specific DOM Element.",
            "line": " Ink/UI/FormValidator/2/lib.js:393"
        },
        {
            "message": "Missing item type\nFormElement's prototype",
            "line": " Ink/UI/FormValidator/2/lib.js:415"
        },
        {
            "message": "Missing item type\nReturns the FormValidator's Object",
            "line": " Ink/UI/FormValidator/2/lib.js:925"
        },
        {
            "message": "Missing item type\nGet elements, create more ImageQueries if selector finds more than one\n\n[improvement] This is a useful pattern. More UI modules could use it.",
            "line": " Ink/UI/ImageQuery/1/lib.js:52"
        },
        {
            "message": "Missing item type\nDefault options, overriden by data-attributes if any.\nThe parameters are:",
            "line": " Ink/UI/ImageQuery/1/lib.js:66"
        },
        {
            "message": "Missing item type\nDetermining the original basename (with the querystring) of the file.",
            "line": " Ink/UI/ImageQuery/1/lib.js:77"
        },
        {
            "message": "Missing item type\nChoosing the right src. The rule is:\n\n  \"If there is specifically defined in the query object, use that. Otherwise uses the global src.\"\n\nThe above rule applies to a retina src.",
            "line": " Ink/UI/ImageQuery/1/lib.js:126"
        },
        {
            "message": "Missing item type\nInjects the file variable for usage in the 'templating system' below",
            "line": " Ink/UI/ImageQuery/1/lib.js:138"
        },
        {
            "message": "Missing item type\nSince we allow the src to be a callback, let's run it and get the results.\nFor the inside, we're passing the element (img) being processed and the object of the selected\nquery.",
            "line": " Ink/UI/ImageQuery/1/lib.js:143"
        },
        {
            "message": "Missing item type\nReplace the values of the existing properties on the query object (except src and retina) in the\ndefined src and/or retina.",
            "line": " Ink/UI/ImageQuery/1/lib.js:155"
        },
        {
            "message": "Missing item type\nQueries are in a descendant order. We want to find the query with the highest width that fits\nthe viewport, therefore the first one.",
            "line": " Ink/UI/ImageQuery/1/lib.js:169"
        },
        {
            "message": "Missing item type\nGets viewport width",
            "line": " Ink/UI/ImageQuery/1/lib.js:174"
        },
        {
            "message": "Missing item type\nSince we allow a callback for this let's run it.",
            "line": " Ink/UI/ImageQuery/1/lib.js:201"
        },
        {
            "message": "Missing item type\nWidth, height and markup really optional, as they can be obtained by the element",
            "line": " Ink/UI/Modal/1/lib.js:87"
        },
        {
            "message": "Missing item type\nTo add extra classes",
            "line": " Ink/UI/Modal/1/lib.js:93"
        },
        {
            "message": "Missing item type\nOptional trigger properties",
            "line": " Ink/UI/Modal/1/lib.js:99"
        },
        {
            "message": "Missing item type\nRemaining options",
            "line": " Ink/UI/Modal/1/lib.js:106"
        },
        {
            "message": "Missing item type\nModal Markup",
            "line": " Ink/UI/Modal/1/lib.js:127"
        },
        {
            "message": "Missing item type\nNot in full markup mode, let's set the classes and css configurations",
            "line": " Ink/UI/Modal/1/lib.js:147"
        },
        {
            "message": "Missing item type\nApplying the main css styles",
            "line": " Ink/UI/Modal/1/lib.js:153"
        },
        {
            "message": "Missing item type\nFirst, will handle the least important: The dataset",
            "line": " Ink/UI/Modal/1/lib.js:172"
        },
        {
            "message": "Missing item type\nNow, the most important, the initialization options",
            "line": " Ink/UI/Modal/1/lib.js:179"
        },
        {
            "message": "Missing item type\nGetting the current viewport size",
            "line": " Ink/UI/Modal/1/lib.js:242"
        },
        {
            "message": "Missing item type\nPUBLIC API *",
            "line": " Ink/UI/Modal/1/lib.js:368"
        },
        {
            "message": "Missing item type\nFallback to the old one",
            "line": " Ink/UI/Modal/1/lib.js:392"
        },
        {
            "message": "Missing item type\nSetting the content of the modal",
            "line": " Ink/UI/Modal/1/lib.js:399"
        },
        {
            "message": "Missing item type\nIf any size has been user-defined, let's set them as max-width and max-height",
            "line": " Ink/UI/Modal/1/lib.js:405"
        },
        {
            "message": "Missing item type\nLet's 'resize' it:",
            "line": " Ink/UI/Modal/1/lib.js:437"
        },
        {
            "message": "Missing item type\nUtility function to listen to the onTransmissionEnd event, or wait using setTimeouts\n\nSpecific to this._element",
            "line": " Ink/UI/Modal/1/lib.js:520"
        },
        {
            "message": "Missing item type\nPUBLIC API *",
            "line": " Ink/UI/Pagination/1/lib.js:348"
        },
        {
            "message": "Missing item type\nCalculate the number of pages, then call setSize().",
            "line": " Ink/UI/Pagination/1/lib.js:369"
        },
        {
            "message": "Missing item type\nCalled when the scroll movement is done. Updates browser address.",
            "line": " Ink/UI/SmoothScroller/1/lib.js:214"
        },
        {
            "message": "Missing item type\nPUBLIC API *",
            "line": " Ink/UI/SortableList/1/lib.js:211"
        },
        {
            "message": "Missing item type\nSetting default options and - if needed - overriding it with the data attributes",
            "line": " Ink/UI/Spy/1/lib.js:131"
        },
        {
            "message": "Missing item type\nIn case options have been defined when creating the instance, they've precedence",
            "line": " Ink/UI/Spy/1/lib.js:139"
        },
        {
            "message": "Missing item type\nRecalculate the \"dims\" cache, or get it.\n\nThe \"dims\" cache is to be set to null when the element is liable to have changed dimensions\n\n(eg: on resize)",
            "line": " Ink/UI/Sticky/1/lib.js:213"
        },
        {
            "message": "Missing item type\nGet the root element",
            "line": " Ink/UI/Table/1/lib.js:193"
        },
        {
            "message": "Missing item type\nChecking if it's in markup mode or endpoint mode",
            "line": " Ink/UI/Table/1/lib.js:220"
        },
        {
            "message": "Missing item type\nInitializing variables",
            "line": " Ink/UI/Table/1/lib.js:232"
        },
        {
            "message": "Missing item type\nIf not is in markup mode, we have to do the initial request\nto get the first data and the headers",
            "line": " Ink/UI/Table/1/lib.js:265"
        },
        {
            "message": "Missing item type\nGetting the table's data",
            "line": " Ink/UI/Table/1/lib.js:276"
        },
        {
            "message": "Missing item type\nSet pagination if options tell us to",
            "line": " Ink/UI/Table/1/lib.js:284"
        },
        {
            "message": "Missing item type\nSetting the sortable columns and its event listeners",
            "line": " Ink/UI/Table/1/lib.js:518"
        },
        {
            "message": "Missing item type\nFetch pagination from options. Can be a selector string, an element or a Pagination instance.",
            "line": " Ink/UI/Table/1/lib.js:640"
        },
        {
            "message": "Missing item type\nGets the data via AJAX and calls this._onAjaxSuccess with the response.\n\nWill call options.getDataFromEndpoint( Uri, callback ) if available.",
            "line": " Ink/UI/Table/1/lib.js:749"
        },
        {
            "message": "Missing item type\nAux Functions *",
            "line": " Ink/UI/Tabs/1/lib.js:251"
        },
        {
            "message": "Missing item type\nPUBLIC API *",
            "line": " Ink/UI/Tabs/1/lib.js:285"
        },
        {
            "message": "Missing item type\nGetters *",
            "line": " Ink/UI/Tabs/1/lib.js:338"
        },
        {
            "message": "Missing item type\nSummary:\nIf the clicked element is a \"node\" as defined in the options, will check if it has any \"child\".\nIf so, will toggle its state and stop the event's default behavior if the stopDefault option is true.",
            "line": " Ink/UI/TreeView/1/lib.js:170"
        },
        {
            "message": "Missing item type\nRun a test function through all the input array. Items which pass the test function (for which the test function returned `true`) are kept in the array. Other items are removed.",
            "line": " Ink/Util/Array/1/lib.js:206"
        },
        {
            "message": "Missing item type",
            "line": " Ink/Util/String/1/lib.js:541"
        },
        {
            "message": "Missing item type\n--function {String} ?\n--Convert a string to BASE 64",
            "line": " Ink/Util/Url/1/lib.js:367"
        },
        {
            "message": "Missing item type\nLuhn function, to be used when validating credit cards",
            "line": " Ink/Util/Validator/1/lib.js:1212"
        },
        {
            "message": "Missing item type\nValidates if a number is of a specific credit card",
            "line": " Ink/Util/Validator/1/lib.js:1253"
        }
    ]
}